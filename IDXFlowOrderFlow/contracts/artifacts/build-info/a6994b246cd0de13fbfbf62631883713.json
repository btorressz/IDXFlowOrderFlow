{
	"id": "a6994b246cd0de13fbfbf62631883713",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MockIDXFlow.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.30;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n/// @title MockIDXFlow\n/// @notice Simplified mock of IDXFlowOrderFlow for unit testing core staking and reward logic\n/// @dev Omits external integrations (ZK, LayerZero, ERC-6551) and focuses on fee tiers, staking, rewards, and vesting\ncontract MockIDXFlow is AccessControl {\n    /// @notice ERC-20 token used for staking and reward distribution\n    IERC20 public token;\n\n    /// @notice Role allowed to perform governance actions\n    bytes32 public constant GOVERNOR_ROLE = keccak256(\"GOVERNOR_ROLE\");\n\n    /// @notice Current epoch counter\n    uint256 public currentEpoch = 1;\n\n    /// @notice Reward rate per unit of volume (scaled by 1e6)\n    uint256 public rewardRatePerVolume = 1e6;\n\n    /// @notice Minimum volume required to be eligible for rewards\n    uint256 public minVolumeThreshold = 100 * 1e6;\n\n    /// @notice Total rewards distributed so far\n    uint256 public totalDistributed;\n\n    /// @notice Default number of epochs over which rewards vest\n    uint256 public defaultVestingEpochs = 4;\n\n    /// @notice Fee tiers based on staked amount\n    enum FeeTier { Bronze, Silver, Gold, Platinum, Diamond }\n\n    /// @notice Tracks vesting streams per user\n    struct RewardStream {\n        uint256 total;        // total amount to vest\n        uint256 claimed;      // amount already claimed\n        uint256 startEpoch;   // epoch when vesting started\n        uint256 vestingEpochs;// over how many epochs vesting occurs\n    }\n\n    /// @notice Tracks per-user state\n    struct UserInfo {\n        uint256 epochVolume;  // trading volume in current epoch\n        uint256 stakedAmount; // total staked tokens\n        FeeTier tier;         // current fee tier\n        uint256 lastClaimEpoch;    // last epoch when rewards were claimed\n        bool autoCompound;    // whether immediate rewards are restaked\n    }\n\n    /// @notice User info mapping\n    mapping(address => UserInfo) public users;\n\n    /// @notice Vesting streams mapping\n    mapping(address => RewardStream) public rewardStreams;\n\n    /// @notice Emitted when a user stakes tokens\n    /// @param user The address staking tokens\n    /// @param amount The amount staked\n    /// @param tier The user’s resulting fee tier\n    event StakeUpdated(address indexed user, uint256 amount, FeeTier tier);\n\n    /// @notice Emitted when immediate rewards are paid out\n    /// @param user The address receiving rewards\n    /// @param amount The reward amount\n    event RewardsClaimed(address indexed user, uint256 amount);\n\n    /// @notice Emitted when rewards are added to vesting\n    /// @param user The address whose vesting was updated\n    /// @param amount The amount vested\n    /// @param startEpoch The epoch when vesting started\n    /// @param vestingEpochs Number of epochs over which vesting occurs\n    event RewardsVested(address indexed user, uint256 amount, uint256 startEpoch, uint256 vestingEpochs);\n\n    /// @notice Constructs the mock with a given ERC-20 token\n    /// @param _token The address of the ERC-20 token contract\n    constructor(address _token) {\n        token = IERC20(_token);\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(GOVERNOR_ROLE, msg.sender);\n    }\n\n    /// @notice Stakes a specified amount of tokens\n    /// @dev Transfers tokens from sender to this contract, updates tier\n    /// @param amount The amount of tokens to stake\n    function mockStake(uint256 amount) external {\n        token.transferFrom(msg.sender, address(this), amount);\n        UserInfo storage u = users[msg.sender];\n        u.stakedAmount += amount;\n        u.tier = _calculateFeeTier(u.stakedAmount);\n        emit StakeUpdated(msg.sender, amount, u.tier);\n    }\n\n    /// @notice Claims rewards based on provided volume\n    /// @dev Requires volume ≥ `minVolumeThreshold` and that the user has not claimed this epoch\n    /// @param volume The trading volume used for reward calculation\n    function mockClaim(uint256 volume) external {\n        UserInfo storage u = users[msg.sender];\n        require(u.lastClaimEpoch < currentEpoch, \"Already claimed\");\n        require(volume >= minVolumeThreshold, \"Volume too low\");\n\n        u.epochVolume = volume;\n        u.lastClaimEpoch = currentEpoch;\n\n        uint256 baseReward = (volume * rewardRatePerVolume) / 1e6;\n        uint256 reward = (baseReward * _getRewardMultiplier(u.tier)) / 100;\n        totalDistributed += reward;\n\n        uint256 immediate = (reward * 25) / 100;\n        uint256 vestingAmt = reward - immediate;\n\n        // immediate payout\n        token.transfer(msg.sender, immediate);\n        emit RewardsClaimed(msg.sender, immediate);\n\n        // add to vesting\n        if (vestingAmt > 0) {\n            RewardStream storage s = rewardStreams[msg.sender];\n            if (s.startEpoch == 0) {\n                s.startEpoch = currentEpoch;\n                s.vestingEpochs = defaultVestingEpochs;\n            }\n            s.total += vestingAmt;\n            emit RewardsVested(msg.sender, vestingAmt, s.startEpoch, s.vestingEpochs);\n        }\n    }\n\n    /// @notice Calculates the fee tier based on a staked amount\n    /// @param s The staked token amount (with 6 decimals)\n    /// @return The corresponding `FeeTier`\n    function _calculateFeeTier(uint256 s) internal pure returns (FeeTier) {\n        if (s < 1_000 * 1e6)    return FeeTier.Bronze;\n        if (s < 10_000 * 1e6)   return FeeTier.Silver;\n        if (s < 50_000 * 1e6)   return FeeTier.Gold;\n        if (s < 100_000 * 1e6)  return FeeTier.Platinum;\n        return FeeTier.Diamond;\n    }\n\n    /// @notice Returns the reward multiplier (in basis points) for a given tier\n    /// @param t The user’s `FeeTier`\n    /// @return The multiplier (e.g., `150` = 1.5×)\n    function _getRewardMultiplier(FeeTier t) internal pure returns (uint256) {\n        if (t == FeeTier.Silver)   return 125;\n        if (t == FeeTier.Gold)     return 150;\n        if (t == FeeTier.Platinum) return 200;\n        if (t == FeeTier.Diamond)  return 300;\n        return 100; // Bronze\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MockIDXFlow.sol": {
				"MockIDXFlow": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startEpoch",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "vestingEpochs",
									"type": "uint256"
								}
							],
							"name": "RewardsVested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum MockIDXFlow.FeeTier",
									"name": "tier",
									"type": "uint8"
								}
							],
							"name": "StakeUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "GOVERNOR_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentEpoch",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultVestingEpochs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minVolumeThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "volume",
									"type": "uint256"
								}
							],
							"name": "mockClaim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mockStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRatePerVolume",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewardStreams",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "total",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startEpoch",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "vestingEpochs",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDistributed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "users",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "epochVolume",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakedAmount",
									"type": "uint256"
								},
								{
									"internalType": "enum MockIDXFlow.FeeTier",
									"name": "tier",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "lastClaimEpoch",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "autoCompound",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Omits external integrations (ZK, LayerZero, ERC-6551) and focuses on fee tiers, staking, rewards, and vesting",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RewardsClaimed(address,uint256)": {
								"params": {
									"amount": "The reward amount",
									"user": "The address receiving rewards"
								}
							},
							"RewardsVested(address,uint256,uint256,uint256)": {
								"params": {
									"amount": "The amount vested",
									"startEpoch": "The epoch when vesting started",
									"user": "The address whose vesting was updated",
									"vestingEpochs": "Number of epochs over which vesting occurs"
								}
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"StakeUpdated(address,uint256,uint8)": {
								"params": {
									"amount": "The amount staked",
									"tier": "The user’s resulting fee tier",
									"user": "The address staking tokens"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_token": "The address of the ERC-20 token contract"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"mockClaim(uint256)": {
								"details": "Requires volume ≥ `minVolumeThreshold` and that the user has not claimed this epoch",
								"params": {
									"volume": "The trading volume used for reward calculation"
								}
							},
							"mockStake(uint256)": {
								"details": "Transfers tokens from sender to this contract, updates tier",
								"params": {
									"amount": "The amount of tokens to stake"
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"title": "MockIDXFlow",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MockIDXFlow.sol\":412:6164  contract MockIDXFlow is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MockIDXFlow.sol\":752:753  1 */\n  0x01\n    /* \"contracts/MockIDXFlow.sol\":722:753  uint256 public currentEpoch = 1 */\n  0x02\n  sstore\n    /* \"contracts/MockIDXFlow.sol\":860:863  1e6 */\n  0x0f4240\n    /* \"contracts/MockIDXFlow.sol\":823:863  uint256 public rewardRatePerVolume = 1e6 */\n  0x03\n  sstore\n    /* \"contracts/MockIDXFlow.sol\":973:982  100 * 1e6 */\n  0x05f5e100\n    /* \"contracts/MockIDXFlow.sol\":937:982  uint256 public minVolumeThreshold = 100 * 1e6 */\n  0x04\n  sstore\n    /* \"contracts/MockIDXFlow.sol\":1179:1180  4 */\n  0x04\n    /* \"contracts/MockIDXFlow.sol\":1141:1180  uint256 public defaultVestingEpochs = 4 */\n  0x06\n  sstore\n    /* \"contracts/MockIDXFlow.sol\":3180:3346  constructor(address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/MockIDXFlow.sol\":3233:3239  _token */\n  dup1\n    /* \"contracts/MockIDXFlow.sol\":3218:3223  token */\n  0x01\n  0x00\n    /* \"contracts/MockIDXFlow.sol\":3218:3240  token = IERC20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MockIDXFlow.sol\":3250:3292  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/MockIDXFlow.sol\":3261:3279  DEFAULT_ADMIN_ROLE */\n  0x00\n  shl\n    /* \"contracts/MockIDXFlow.sol\":3281:3291  msg.sender */\n  caller\n    /* \"contracts/MockIDXFlow.sol\":3250:3260  _grantRole */\n  shl(0x20, tag_7)\n    /* \"contracts/MockIDXFlow.sol\":3250:3292  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/MockIDXFlow.sol\":3302:3339  _grantRole(GOVERNOR_ROLE, msg.sender) */\n  tag_8\n    /* \"contracts/MockIDXFlow.sol\":651:677  keccak256(\"GOVERNOR_ROLE\") */\n  0x7935bd0ae54bc31f548c14dba4d37c5c64b3f8ca900cb468fb8abd54d5894f55\n    /* \"contracts/MockIDXFlow.sol\":3328:3338  msg.sender */\n  caller\n    /* \"contracts/MockIDXFlow.sol\":3302:3312  _grantRole */\n  shl(0x20, tag_7)\n    /* \"contracts/MockIDXFlow.sol\":3302:3339  _grantRole(GOVERNOR_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/MockIDXFlow.sol\":3180:3346  constructor(address _token) {... */\n  pop\n    /* \"contracts/MockIDXFlow.sol\":412:6164  contract MockIDXFlow is AccessControl {... */\n  jump(tag_9)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_14\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_10:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_20:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_22:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_23:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_22\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_24:\n    /* \"#utility.yul\":641:665   */\n  tag_34\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_23\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_35:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_25:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_37\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_24\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_40\n  tag_20\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":932:1051   */\ntag_39:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_41\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_25\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MockIDXFlow.sol\":412:6164  contract MockIDXFlow is AccessControl {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MockIDXFlow.sol\":412:6164  contract MockIDXFlow is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa87430ba\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd699b9d9\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xefca2eed\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf5492e2f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0xa87430ba\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa969ccef\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xaf0fe497\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xccc57490\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x76671808\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x76671808\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8209ce30\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa344c499\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_5:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/MockIDXFlow.sol\":722:753  uint256 public currentEpoch = 1 */\n    tag_7:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MockIDXFlow.sol\":937:982  uint256 public minVolumeThreshold = 100 * 1e6 */\n    tag_8:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MockIDXFlow.sol\":1141:1180  uint256 public defaultVestingEpochs = 4 */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MockIDXFlow.sol\":2034:2075  mapping(address => UserInfo) public users */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MockIDXFlow.sol\":4062:5181  function mockClaim(uint256 volume) external {... */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/MockIDXFlow.sol\":3529:3832  function mockStake(uint256 amount) external {... */\n    tag_14:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/MockIDXFlow.sol\":611:677  bytes32 public constant GOVERNOR_ROLE = keccak256(\"GOVERNOR_ROLE\") */\n    tag_15:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/MockIDXFlow.sol\":823:863  uint256 public rewardRatePerVolume = 1e6 */\n    tag_17:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MockIDXFlow.sol\":1038:1069  uint256 public totalDistributed */\n    tag_18:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MockIDXFlow.sol\":2122:2175  mapping(address => RewardStream) public rewardStreams */\n    tag_19:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_88\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MockIDXFlow.sol\":526:545  IERC20 public token */\n    tag_20:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_95\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_96\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_97\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_99\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_33\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_101\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_102\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_105\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_107\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_109\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_110\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_110:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MockIDXFlow.sol\":722:753  uint256 public currentEpoch = 1 */\n    tag_44:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/MockIDXFlow.sol\":937:982  uint256 public minVolumeThreshold = 100 * 1e6 */\n    tag_48:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/MockIDXFlow.sol\":1141:1180  uint256 public defaultVestingEpochs = 4 */\n    tag_58:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/MockIDXFlow.sol\":2034:2075  mapping(address => UserInfo) public users */\n    tag_63:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"contracts/MockIDXFlow.sol\":4062:5181  function mockClaim(uint256 volume) external {... */\n    tag_69:\n        /* \"contracts/MockIDXFlow.sol\":4116:4134  UserInfo storage u */\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":4137:4142  users */\n      0x07\n        /* \"contracts/MockIDXFlow.sol\":4137:4154  users[msg.sender] */\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":4143:4153  msg.sender */\n      caller\n        /* \"contracts/MockIDXFlow.sol\":4137:4154  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MockIDXFlow.sol\":4116:4154  UserInfo storage u = users[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/MockIDXFlow.sol\":4191:4203  currentEpoch */\n      sload(0x02)\n        /* \"contracts/MockIDXFlow.sol\":4172:4173  u */\n      dup2\n        /* \"contracts/MockIDXFlow.sol\":4172:4188  u.lastClaimEpoch */\n      0x03\n      add\n      sload\n        /* \"contracts/MockIDXFlow.sol\":4172:4203  u.lastClaimEpoch < currentEpoch */\n      lt\n        /* \"contracts/MockIDXFlow.sol\":4164:4223  require(u.lastClaimEpoch < currentEpoch, \"Already claimed\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"contracts/MockIDXFlow.sol\":4251:4269  minVolumeThreshold */\n      sload(0x04)\n        /* \"contracts/MockIDXFlow.sol\":4241:4247  volume */\n      dup3\n        /* \"contracts/MockIDXFlow.sol\":4241:4269  volume >= minVolumeThreshold */\n      lt\n      iszero\n        /* \"contracts/MockIDXFlow.sol\":4233:4288  require(volume >= minVolumeThreshold, \"Volume too low\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"contracts/MockIDXFlow.sol\":4315:4321  volume */\n      dup2\n        /* \"contracts/MockIDXFlow.sol\":4299:4300  u */\n      dup2\n        /* \"contracts/MockIDXFlow.sol\":4299:4312  u.epochVolume */\n      0x00\n      add\n        /* \"contracts/MockIDXFlow.sol\":4299:4321  u.epochVolume = volume */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MockIDXFlow.sol\":4350:4362  currentEpoch */\n      sload(0x02)\n        /* \"contracts/MockIDXFlow.sol\":4331:4332  u */\n      dup2\n        /* \"contracts/MockIDXFlow.sol\":4331:4347  u.lastClaimEpoch */\n      0x03\n      add\n        /* \"contracts/MockIDXFlow.sol\":4331:4362  u.lastClaimEpoch = currentEpoch */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MockIDXFlow.sol\":4373:4391  uint256 baseReward */\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":4427:4430  1e6 */\n      0x0f4240\n        /* \"contracts/MockIDXFlow.sol\":4404:4423  rewardRatePerVolume */\n      sload(0x03)\n        /* \"contracts/MockIDXFlow.sol\":4395:4401  volume */\n      dup5\n        /* \"contracts/MockIDXFlow.sol\":4395:4423  volume * rewardRatePerVolume */\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"contracts/MockIDXFlow.sol\":4394:4430  (volume * rewardRatePerVolume) / 1e6 */\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"contracts/MockIDXFlow.sol\":4373:4430  uint256 baseReward = (volume * rewardRatePerVolume) / 1e6 */\n      swap1\n      pop\n        /* \"contracts/MockIDXFlow.sol\":4440:4454  uint256 reward */\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":4503:4506  100 */\n      0x64\n        /* \"contracts/MockIDXFlow.sol\":4471:4499  _getRewardMultiplier(u.tier) */\n      tag_124\n        /* \"contracts/MockIDXFlow.sol\":4492:4493  u */\n      dup5\n        /* \"contracts/MockIDXFlow.sol\":4492:4498  u.tier */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MockIDXFlow.sol\":4471:4491  _getRewardMultiplier */\n      tag_125\n        /* \"contracts/MockIDXFlow.sol\":4471:4499  _getRewardMultiplier(u.tier) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/MockIDXFlow.sol\":4458:4468  baseReward */\n      dup4\n        /* \"contracts/MockIDXFlow.sol\":4458:4499  baseReward * _getRewardMultiplier(u.tier) */\n      tag_126\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_126:\n        /* \"contracts/MockIDXFlow.sol\":4457:4506  (baseReward * _getRewardMultiplier(u.tier)) / 100 */\n      tag_127\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_127:\n        /* \"contracts/MockIDXFlow.sol\":4440:4506  uint256 reward = (baseReward * _getRewardMultiplier(u.tier)) / 100 */\n      swap1\n      pop\n        /* \"contracts/MockIDXFlow.sol\":4536:4542  reward */\n      dup1\n        /* \"contracts/MockIDXFlow.sol\":4516:4532  totalDistributed */\n      0x05\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":4516:4542  totalDistributed += reward */\n      dup3\n      dup3\n      sload\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MockIDXFlow.sol\":4553:4570  uint256 immediate */\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":4589:4592  100 */\n      0x64\n        /* \"contracts/MockIDXFlow.sol\":4583:4585  25 */\n      0x19\n        /* \"contracts/MockIDXFlow.sol\":4574:4580  reward */\n      dup4\n        /* \"contracts/MockIDXFlow.sol\":4574:4585  reward * 25 */\n      tag_130\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_130:\n        /* \"contracts/MockIDXFlow.sol\":4573:4592  (reward * 25) / 100 */\n      tag_131\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_131:\n        /* \"contracts/MockIDXFlow.sol\":4553:4592  uint256 immediate = (reward * 25) / 100 */\n      swap1\n      pop\n        /* \"contracts/MockIDXFlow.sol\":4602:4620  uint256 vestingAmt */\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":4632:4641  immediate */\n      dup2\n        /* \"contracts/MockIDXFlow.sol\":4623:4629  reward */\n      dup4\n        /* \"contracts/MockIDXFlow.sol\":4623:4641  reward - immediate */\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"contracts/MockIDXFlow.sol\":4602:4641  uint256 vestingAmt = reward - immediate */\n      swap1\n      pop\n        /* \"contracts/MockIDXFlow.sol\":4680:4685  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MockIDXFlow.sol\":4680:4694  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/MockIDXFlow.sol\":4695:4705  msg.sender */\n      caller\n        /* \"contracts/MockIDXFlow.sol\":4707:4716  immediate */\n      dup5\n        /* \"contracts/MockIDXFlow.sol\":4680:4717  token.transfer(msg.sender, immediate) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap3\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      pop\n        /* \"contracts/MockIDXFlow.sol\":4747:4757  msg.sender */\n      caller\n        /* \"contracts/MockIDXFlow.sol\":4732:4769  RewardsClaimed(msg.sender, immediate) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe\n        /* \"contracts/MockIDXFlow.sol\":4759:4768  immediate */\n      dup4\n        /* \"contracts/MockIDXFlow.sol\":4732:4769  RewardsClaimed(msg.sender, immediate) */\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MockIDXFlow.sol\":4823:4824  0 */\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":4810:4820  vestingAmt */\n      dup2\n        /* \"contracts/MockIDXFlow.sol\":4810:4824  vestingAmt > 0 */\n      gt\n        /* \"contracts/MockIDXFlow.sol\":4806:5175  if (vestingAmt > 0) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"contracts/MockIDXFlow.sol\":4840:4862  RewardStream storage s */\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":4865:4878  rewardStreams */\n      0x08\n        /* \"contracts/MockIDXFlow.sol\":4865:4890  rewardStreams[msg.sender] */\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":4879:4889  msg.sender */\n      caller\n        /* \"contracts/MockIDXFlow.sol\":4865:4890  rewardStreams[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MockIDXFlow.sol\":4840:4890  RewardStream storage s = rewardStreams[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/MockIDXFlow.sol\":4924:4925  0 */\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":4908:4909  s */\n      dup2\n        /* \"contracts/MockIDXFlow.sol\":4908:4920  s.startEpoch */\n      0x02\n      add\n      sload\n        /* \"contracts/MockIDXFlow.sol\":4908:4925  s.startEpoch == 0 */\n      sub\n        /* \"contracts/MockIDXFlow.sol\":4904:5043  if (s.startEpoch == 0) {... */\n      tag_142\n      jumpi\n        /* \"contracts/MockIDXFlow.sol\":4960:4972  currentEpoch */\n      sload(0x02)\n        /* \"contracts/MockIDXFlow.sol\":4945:4946  s */\n      dup2\n        /* \"contracts/MockIDXFlow.sol\":4945:4957  s.startEpoch */\n      0x02\n      add\n        /* \"contracts/MockIDXFlow.sol\":4945:4972  s.startEpoch = currentEpoch */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MockIDXFlow.sol\":5008:5028  defaultVestingEpochs */\n      sload(0x06)\n        /* \"contracts/MockIDXFlow.sol\":4990:4991  s */\n      dup2\n        /* \"contracts/MockIDXFlow.sol\":4990:5005  s.vestingEpochs */\n      0x03\n      add\n        /* \"contracts/MockIDXFlow.sol\":4990:5028  s.vestingEpochs = defaultVestingEpochs */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MockIDXFlow.sol\":4904:5043  if (s.startEpoch == 0) {... */\n    tag_142:\n        /* \"contracts/MockIDXFlow.sol\":5067:5077  vestingAmt */\n      dup2\n        /* \"contracts/MockIDXFlow.sol\":5056:5057  s */\n      dup2\n        /* \"contracts/MockIDXFlow.sol\":5056:5063  s.total */\n      0x00\n      add\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":5056:5077  s.total += vestingAmt */\n      dup3\n      dup3\n      sload\n      tag_143\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_143:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MockIDXFlow.sol\":5110:5120  msg.sender */\n      caller\n        /* \"contracts/MockIDXFlow.sol\":5096:5164  RewardsVested(msg.sender, vestingAmt, s.startEpoch, s.vestingEpochs) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcacf4a6e7c897ead5577524d96f0debb59ccd5bd3465d42cd2a958e2defb0b94\n        /* \"contracts/MockIDXFlow.sol\":5122:5132  vestingAmt */\n      dup4\n        /* \"contracts/MockIDXFlow.sol\":5134:5135  s */\n      dup4\n        /* \"contracts/MockIDXFlow.sol\":5134:5146  s.startEpoch */\n      0x02\n      add\n      sload\n        /* \"contracts/MockIDXFlow.sol\":5148:5149  s */\n      dup5\n        /* \"contracts/MockIDXFlow.sol\":5148:5163  s.vestingEpochs */\n      0x03\n      add\n      sload\n        /* \"contracts/MockIDXFlow.sol\":5096:5164  RewardsVested(msg.sender, vestingAmt, s.startEpoch, s.vestingEpochs) */\n      mload(0x40)\n      tag_144\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MockIDXFlow.sol\":4826:5175  {... */\n      pop\n        /* \"contracts/MockIDXFlow.sol\":4806:5175  if (vestingAmt > 0) {... */\n    tag_141:\n        /* \"contracts/MockIDXFlow.sol\":4106:5181  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/MockIDXFlow.sol\":4062:5181  function mockClaim(uint256 volume) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/MockIDXFlow.sol\":3529:3832  function mockStake(uint256 amount) external {... */\n    tag_72:\n        /* \"contracts/MockIDXFlow.sol\":3583:3588  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MockIDXFlow.sol\":3583:3601  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/MockIDXFlow.sol\":3602:3612  msg.sender */\n      caller\n        /* \"contracts/MockIDXFlow.sol\":3622:3626  this */\n      address\n        /* \"contracts/MockIDXFlow.sol\":3629:3635  amount */\n      dup5\n        /* \"contracts/MockIDXFlow.sol\":3583:3636  token.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_151:\n      pop\n        /* \"contracts/MockIDXFlow.sol\":3646:3664  UserInfo storage u */\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":3667:3672  users */\n      0x07\n        /* \"contracts/MockIDXFlow.sol\":3667:3684  users[msg.sender] */\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":3673:3683  msg.sender */\n      caller\n        /* \"contracts/MockIDXFlow.sol\":3667:3684  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MockIDXFlow.sol\":3646:3684  UserInfo storage u = users[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/MockIDXFlow.sol\":3712:3718  amount */\n      dup2\n        /* \"contracts/MockIDXFlow.sol\":3694:3695  u */\n      dup2\n        /* \"contracts/MockIDXFlow.sol\":3694:3708  u.stakedAmount */\n      0x01\n      add\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":3694:3718  u.stakedAmount += amount */\n      dup3\n      dup3\n      sload\n      tag_152\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_152:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MockIDXFlow.sol\":3737:3770  _calculateFeeTier(u.stakedAmount) */\n      tag_153\n        /* \"contracts/MockIDXFlow.sol\":3755:3756  u */\n      dup2\n        /* \"contracts/MockIDXFlow.sol\":3755:3769  u.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/MockIDXFlow.sol\":3737:3754  _calculateFeeTier */\n      tag_154\n        /* \"contracts/MockIDXFlow.sol\":3737:3770  _calculateFeeTier(u.stakedAmount) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/MockIDXFlow.sol\":3728:3729  u */\n      dup2\n        /* \"contracts/MockIDXFlow.sol\":3728:3734  u.tier */\n      0x02\n      add\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":3728:3770  u.tier = _calculateFeeTier(u.stakedAmount) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_155\n      jumpi\n      tag_156\n      tag_157\n      jump\t// in\n    tag_156:\n    tag_155:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MockIDXFlow.sol\":3798:3808  msg.sender */\n      caller\n        /* \"contracts/MockIDXFlow.sol\":3785:3825  StakeUpdated(msg.sender, amount, u.tier) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe42710261dccb691e79e3f3e24a2b8cc0e13b9bec7be82a445c6a6992474ea44\n        /* \"contracts/MockIDXFlow.sol\":3810:3816  amount */\n      dup4\n        /* \"contracts/MockIDXFlow.sol\":3818:3819  u */\n      dup4\n        /* \"contracts/MockIDXFlow.sol\":3818:3824  u.tier */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MockIDXFlow.sol\":3785:3825  StakeUpdated(msg.sender, amount, u.tier) */\n      mload(0x40)\n      tag_158\n      swap3\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MockIDXFlow.sol\":3573:3832  {... */\n      pop\n        /* \"contracts/MockIDXFlow.sol\":3529:3832  function mockStake(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/MockIDXFlow.sol\":611:677  bytes32 public constant GOVERNOR_ROLE = keccak256(\"GOVERNOR_ROLE\") */\n    tag_74:\n        /* \"contracts/MockIDXFlow.sol\":651:677  keccak256(\"GOVERNOR_ROLE\") */\n      0x7935bd0ae54bc31f548c14dba4d37c5c64b3f8ca900cb468fb8abd54d5894f55\n        /* \"contracts/MockIDXFlow.sol\":611:677  bytes32 public constant GOVERNOR_ROLE = keccak256(\"GOVERNOR_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_33\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_162\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_102\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_164:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MockIDXFlow.sol\":823:863  uint256 public rewardRatePerVolume = 1e6 */\n    tag_80:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/MockIDXFlow.sol\":1038:1069  uint256 public totalDistributed */\n    tag_83:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/MockIDXFlow.sol\":2122:2175  mapping(address => RewardStream) public rewardStreams */\n    tag_87:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"contracts/MockIDXFlow.sol\":526:545  IERC20 public token */\n    tag_91:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_167\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_171\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_52\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_170)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_170:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6732:7049  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6810:6814  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6852  hasRole(role, account) */\n      tag_177\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6838:6842  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6851  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6837  hasRole */\n      tag_52\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6852  hasRole(role, account) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6826:7043  if (hasRole(role, account)) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6905  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6874  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6875:6879  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6888  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6897  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6889:6896  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6897  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6905  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6963  _msgSender() */\n      tag_179\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6961  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6963  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6942:6949  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6936:6940  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6985:6989  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6978:6989  return true */\n      swap1\n      pop\n      jump(tag_176)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6826:7043  if (hasRole(role, account)) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7027:7032  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7020:7032  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6732:7049  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_176:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MockIDXFlow.sol\":5864:6162  function _getRewardMultiplier(FeeTier t) internal pure returns (uint256) {... */\n    tag_125:\n        /* \"contracts/MockIDXFlow.sol\":5928:5935  uint256 */\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":5956:5970  FeeTier.Silver */\n      0x01\n        /* \"contracts/MockIDXFlow.sol\":5951:5970  t == FeeTier.Silver */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_182\n      jumpi\n      tag_183\n      tag_157\n      jump\t// in\n    tag_183:\n    tag_182:\n        /* \"contracts/MockIDXFlow.sol\":5951:5952  t */\n      dup3\n        /* \"contracts/MockIDXFlow.sol\":5951:5970  t == FeeTier.Silver */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_184\n      jumpi\n      tag_185\n      tag_157\n      jump\t// in\n    tag_185:\n    tag_184:\n      sub\n        /* \"contracts/MockIDXFlow.sol\":5947:5984  if (t == FeeTier.Silver)   return 125 */\n      tag_186\n      jumpi\n        /* \"contracts/MockIDXFlow.sol\":5981:5984  125 */\n      0x7d\n        /* \"contracts/MockIDXFlow.sol\":5974:5984  return 125 */\n      swap1\n      pop\n      jump(tag_181)\n        /* \"contracts/MockIDXFlow.sol\":5947:5984  if (t == FeeTier.Silver)   return 125 */\n    tag_186:\n        /* \"contracts/MockIDXFlow.sol\":6003:6015  FeeTier.Gold */\n      0x02\n        /* \"contracts/MockIDXFlow.sol\":5998:6015  t == FeeTier.Gold */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_187\n      jumpi\n      tag_188\n      tag_157\n      jump\t// in\n    tag_188:\n    tag_187:\n        /* \"contracts/MockIDXFlow.sol\":5998:5999  t */\n      dup3\n        /* \"contracts/MockIDXFlow.sol\":5998:6015  t == FeeTier.Gold */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_189\n      jumpi\n      tag_190\n      tag_157\n      jump\t// in\n    tag_190:\n    tag_189:\n      sub\n        /* \"contracts/MockIDXFlow.sol\":5994:6031  if (t == FeeTier.Gold)     return 150 */\n      tag_191\n      jumpi\n        /* \"contracts/MockIDXFlow.sol\":6028:6031  150 */\n      0x96\n        /* \"contracts/MockIDXFlow.sol\":6021:6031  return 150 */\n      swap1\n      pop\n      jump(tag_181)\n        /* \"contracts/MockIDXFlow.sol\":5994:6031  if (t == FeeTier.Gold)     return 150 */\n    tag_191:\n        /* \"contracts/MockIDXFlow.sol\":6050:6066  FeeTier.Platinum */\n      0x03\n        /* \"contracts/MockIDXFlow.sol\":6045:6066  t == FeeTier.Platinum */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_192\n      jumpi\n      tag_193\n      tag_157\n      jump\t// in\n    tag_193:\n    tag_192:\n        /* \"contracts/MockIDXFlow.sol\":6045:6046  t */\n      dup3\n        /* \"contracts/MockIDXFlow.sol\":6045:6066  t == FeeTier.Platinum */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_194\n      jumpi\n      tag_195\n      tag_157\n      jump\t// in\n    tag_195:\n    tag_194:\n      sub\n        /* \"contracts/MockIDXFlow.sol\":6041:6078  if (t == FeeTier.Platinum) return 200 */\n      tag_196\n      jumpi\n        /* \"contracts/MockIDXFlow.sol\":6075:6078  200 */\n      0xc8\n        /* \"contracts/MockIDXFlow.sol\":6068:6078  return 200 */\n      swap1\n      pop\n      jump(tag_181)\n        /* \"contracts/MockIDXFlow.sol\":6041:6078  if (t == FeeTier.Platinum) return 200 */\n    tag_196:\n        /* \"contracts/MockIDXFlow.sol\":6097:6112  FeeTier.Diamond */\n      0x04\n        /* \"contracts/MockIDXFlow.sol\":6092:6112  t == FeeTier.Diamond */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_197\n      jumpi\n      tag_198\n      tag_157\n      jump\t// in\n    tag_198:\n    tag_197:\n        /* \"contracts/MockIDXFlow.sol\":6092:6093  t */\n      dup3\n        /* \"contracts/MockIDXFlow.sol\":6092:6112  t == FeeTier.Diamond */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_199\n      jumpi\n      tag_200\n      tag_157\n      jump\t// in\n    tag_200:\n    tag_199:\n      sub\n        /* \"contracts/MockIDXFlow.sol\":6088:6125  if (t == FeeTier.Diamond)  return 300 */\n      tag_201\n      jumpi\n        /* \"contracts/MockIDXFlow.sol\":6122:6125  300 */\n      0x012c\n        /* \"contracts/MockIDXFlow.sol\":6115:6125  return 300 */\n      swap1\n      pop\n      jump(tag_181)\n        /* \"contracts/MockIDXFlow.sol\":6088:6125  if (t == FeeTier.Diamond)  return 300 */\n    tag_201:\n        /* \"contracts/MockIDXFlow.sol\":6142:6145  100 */\n      0x64\n        /* \"contracts/MockIDXFlow.sol\":6135:6145  return 100 */\n      swap1\n      pop\n        /* \"contracts/MockIDXFlow.sol\":5864:6162  function _getRewardMultiplier(FeeTier t) internal pure returns (uint256) {... */\n    tag_181:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MockIDXFlow.sol\":5355:5684  function _calculateFeeTier(uint256 s) internal pure returns (FeeTier) {... */\n    tag_154:\n        /* \"contracts/MockIDXFlow.sol\":5416:5423  FeeTier */\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":5443:5454  1_000 * 1e6 */\n      0x3b9aca00\n        /* \"contracts/MockIDXFlow.sol\":5439:5440  s */\n      dup3\n        /* \"contracts/MockIDXFlow.sol\":5439:5454  s < 1_000 * 1e6 */\n      lt\n        /* \"contracts/MockIDXFlow.sol\":5435:5480  if (s < 1_000 * 1e6)    return FeeTier.Bronze */\n      iszero\n      tag_203\n      jumpi\n        /* \"contracts/MockIDXFlow.sol\":5466:5480  FeeTier.Bronze */\n      0x00\n        /* \"contracts/MockIDXFlow.sol\":5459:5480  return FeeTier.Bronze */\n      swap1\n      pop\n      jump(tag_202)\n        /* \"contracts/MockIDXFlow.sol\":5435:5480  if (s < 1_000 * 1e6)    return FeeTier.Bronze */\n    tag_203:\n        /* \"contracts/MockIDXFlow.sol\":5498:5510  10_000 * 1e6 */\n      0x02540be400\n        /* \"contracts/MockIDXFlow.sol\":5494:5495  s */\n      dup3\n        /* \"contracts/MockIDXFlow.sol\":5494:5510  s < 10_000 * 1e6 */\n      lt\n        /* \"contracts/MockIDXFlow.sol\":5490:5535  if (s < 10_000 * 1e6)   return FeeTier.Silver */\n      iszero\n      tag_204\n      jumpi\n        /* \"contracts/MockIDXFlow.sol\":5521:5535  FeeTier.Silver */\n      0x01\n        /* \"contracts/MockIDXFlow.sol\":5514:5535  return FeeTier.Silver */\n      swap1\n      pop\n      jump(tag_202)\n        /* \"contracts/MockIDXFlow.sol\":5490:5535  if (s < 10_000 * 1e6)   return FeeTier.Silver */\n    tag_204:\n        /* \"contracts/MockIDXFlow.sol\":5553:5565  50_000 * 1e6 */\n      0x0ba43b7400\n        /* \"contracts/MockIDXFlow.sol\":5549:5550  s */\n      dup3\n        /* \"contracts/MockIDXFlow.sol\":5549:5565  s < 50_000 * 1e6 */\n      lt\n        /* \"contracts/MockIDXFlow.sol\":5545:5588  if (s < 50_000 * 1e6)   return FeeTier.Gold */\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/MockIDXFlow.sol\":5576:5588  FeeTier.Gold */\n      0x02\n        /* \"contracts/MockIDXFlow.sol\":5569:5588  return FeeTier.Gold */\n      swap1\n      pop\n      jump(tag_202)\n        /* \"contracts/MockIDXFlow.sol\":5545:5588  if (s < 50_000 * 1e6)   return FeeTier.Gold */\n    tag_205:\n        /* \"contracts/MockIDXFlow.sol\":5606:5619  100_000 * 1e6 */\n      0x174876e800\n        /* \"contracts/MockIDXFlow.sol\":5602:5603  s */\n      dup3\n        /* \"contracts/MockIDXFlow.sol\":5602:5619  s < 100_000 * 1e6 */\n      lt\n        /* \"contracts/MockIDXFlow.sol\":5598:5645  if (s < 100_000 * 1e6)  return FeeTier.Platinum */\n      iszero\n      tag_206\n      jumpi\n        /* \"contracts/MockIDXFlow.sol\":5629:5645  FeeTier.Platinum */\n      0x03\n        /* \"contracts/MockIDXFlow.sol\":5622:5645  return FeeTier.Platinum */\n      swap1\n      pop\n      jump(tag_202)\n        /* \"contracts/MockIDXFlow.sol\":5598:5645  if (s < 100_000 * 1e6)  return FeeTier.Platinum */\n    tag_206:\n        /* \"contracts/MockIDXFlow.sol\":5662:5677  FeeTier.Diamond */\n      0x04\n        /* \"contracts/MockIDXFlow.sol\":5655:5677  return FeeTier.Diamond */\n      swap1\n      pop\n        /* \"contracts/MockIDXFlow.sol\":5355:5684  function _calculateFeeTier(uint256 s) internal pure returns (FeeTier) {... */\n    tag_202:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_208\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_52\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap3\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_213:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_215:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_216:\n        /* \"#utility.yul\":561:584   */\n      tag_257\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_215\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_258:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_217:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_260\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_216\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_26:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_263\n      tag_213\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":833:952   */\n    tag_262:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_264\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_217\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_218:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_219:\n        /* \"#utility.yul\":1268:1289   */\n      tag_267\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_218\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_29:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_269\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_219\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_220:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_221:\n        /* \"#utility.yul\":1674:1698   */\n      tag_272\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_220\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      0x00\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_273:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_222:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_275\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_221\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_32:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_278\n      tag_213\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":1950:2069   */\n    tag_277:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_279\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_222\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2327   */\n    tag_223:\n        /* \"#utility.yul\":2296:2320   */\n      tag_281\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2296:2320   */\n      tag_220\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":2291:2294   */\n      dup3\n        /* \"#utility.yul\":2284:2321   */\n      mstore\n        /* \"#utility.yul\":2209:2327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2333:2555   */\n    tag_35:\n        /* \"#utility.yul\":2426:2430   */\n      0x00\n        /* \"#utility.yul\":2464:2466   */\n      0x20\n        /* \"#utility.yul\":2453:2462   */\n      dup3\n        /* \"#utility.yul\":2449:2467   */\n      add\n        /* \"#utility.yul\":2441:2467   */\n      swap1\n      pop\n        /* \"#utility.yul\":2477:2548   */\n      tag_283\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2547   */\n      add\n        /* \"#utility.yul\":2521:2527   */\n      dup5\n        /* \"#utility.yul\":2477:2548   */\n      tag_223\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2333:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2687   */\n    tag_224:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2638:2680   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2631:2636   */\n      dup3\n        /* \"#utility.yul\":2627:2681   */\n      and\n        /* \"#utility.yul\":2616:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2693:2789   */\n    tag_225:\n        /* \"#utility.yul\":2730:2737   */\n      0x00\n        /* \"#utility.yul\":2759:2783   */\n      tag_286\n        /* \"#utility.yul\":2777:2782   */\n      dup3\n        /* \"#utility.yul\":2759:2783   */\n      tag_224\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2748:2783   */\n      swap1\n      pop\n        /* \"#utility.yul\":2693:2789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2917   */\n    tag_226:\n        /* \"#utility.yul\":2868:2892   */\n      tag_288\n        /* \"#utility.yul\":2886:2891   */\n      dup2\n        /* \"#utility.yul\":2868:2892   */\n      tag_225\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2858:2893   */\n      eq\n        /* \"#utility.yul\":2848:2911   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":2907:2908   */\n      0x00\n        /* \"#utility.yul\":2904:2905   */\n      0x00\n        /* \"#utility.yul\":2897:2909   */\n      revert\n        /* \"#utility.yul\":2848:2911   */\n    tag_289:\n        /* \"#utility.yul\":2795:2917   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2923:3062   */\n    tag_227:\n        /* \"#utility.yul\":2969:2974   */\n      0x00\n        /* \"#utility.yul\":3007:3013   */\n      dup2\n        /* \"#utility.yul\":2994:3014   */\n      calldataload\n        /* \"#utility.yul\":2985:3014   */\n      swap1\n      pop\n        /* \"#utility.yul\":3023:3056   */\n      tag_291\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3023:3056   */\n      tag_226\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2923:3062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3542   */\n    tag_38:\n        /* \"#utility.yul\":3136:3142   */\n      0x00\n        /* \"#utility.yul\":3144:3150   */\n      0x00\n        /* \"#utility.yul\":3193:3195   */\n      0x40\n        /* \"#utility.yul\":3181:3190   */\n      dup4\n        /* \"#utility.yul\":3172:3179   */\n      dup6\n        /* \"#utility.yul\":3168:3191   */\n      sub\n        /* \"#utility.yul\":3164:3196   */\n      slt\n        /* \"#utility.yul\":3161:3280   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":3199:3278   */\n      tag_294\n      tag_213\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3161:3280   */\n    tag_293:\n        /* \"#utility.yul\":3319:3320   */\n      0x00\n        /* \"#utility.yul\":3344:3397   */\n      tag_295\n        /* \"#utility.yul\":3389:3396   */\n      dup6\n        /* \"#utility.yul\":3380:3386   */\n      dup3\n        /* \"#utility.yul\":3369:3378   */\n      dup7\n        /* \"#utility.yul\":3365:3387   */\n      add\n        /* \"#utility.yul\":3344:3397   */\n      tag_222\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3334:3397   */\n      swap3\n      pop\n        /* \"#utility.yul\":3290:3407   */\n      pop\n        /* \"#utility.yul\":3446:3448   */\n      0x20\n        /* \"#utility.yul\":3472:3525   */\n      tag_296\n        /* \"#utility.yul\":3517:3524   */\n      dup6\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup7\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_227\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3417:3535   */\n      pop\n        /* \"#utility.yul\":3068:3542   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3625   */\n    tag_228:\n        /* \"#utility.yul\":3585:3592   */\n      0x00\n        /* \"#utility.yul\":3614:3619   */\n      dup2\n        /* \"#utility.yul\":3603:3619   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3631:3749   */\n    tag_229:\n        /* \"#utility.yul\":3718:3742   */\n      tag_299\n        /* \"#utility.yul\":3736:3741   */\n      dup2\n        /* \"#utility.yul\":3718:3742   */\n      tag_228\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":3713:3716   */\n      dup3\n        /* \"#utility.yul\":3706:3743   */\n      mstore\n        /* \"#utility.yul\":3631:3749   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3755:3977   */\n    tag_46:\n        /* \"#utility.yul\":3848:3852   */\n      0x00\n        /* \"#utility.yul\":3886:3888   */\n      0x20\n        /* \"#utility.yul\":3875:3884   */\n      dup3\n        /* \"#utility.yul\":3871:3889   */\n      add\n        /* \"#utility.yul\":3863:3889   */\n      swap1\n      pop\n        /* \"#utility.yul\":3899:3970   */\n      tag_301\n        /* \"#utility.yul\":3967:3968   */\n      0x00\n        /* \"#utility.yul\":3956:3965   */\n      dup4\n        /* \"#utility.yul\":3952:3969   */\n      add\n        /* \"#utility.yul\":3943:3949   */\n      dup5\n        /* \"#utility.yul\":3899:3970   */\n      tag_229\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":3755:3977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3983:4312   */\n    tag_62:\n        /* \"#utility.yul\":4042:4048   */\n      0x00\n        /* \"#utility.yul\":4091:4093   */\n      0x20\n        /* \"#utility.yul\":4079:4088   */\n      dup3\n        /* \"#utility.yul\":4070:4077   */\n      dup5\n        /* \"#utility.yul\":4066:4089   */\n      sub\n        /* \"#utility.yul\":4062:4094   */\n      slt\n        /* \"#utility.yul\":4059:4178   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":4097:4176   */\n      tag_304\n      tag_213\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4059:4178   */\n    tag_303:\n        /* \"#utility.yul\":4217:4218   */\n      0x00\n        /* \"#utility.yul\":4242:4295   */\n      tag_305\n        /* \"#utility.yul\":4287:4294   */\n      dup5\n        /* \"#utility.yul\":4278:4284   */\n      dup3\n        /* \"#utility.yul\":4267:4276   */\n      dup6\n        /* \"#utility.yul\":4263:4285   */\n      add\n        /* \"#utility.yul\":4242:4295   */\n      tag_227\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4232:4295   */\n      swap2\n      pop\n        /* \"#utility.yul\":4188:4305   */\n      pop\n        /* \"#utility.yul\":3983:4312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4318:4498   */\n    tag_157:\n        /* \"#utility.yul\":4366:4443   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4363:4364   */\n      0x00\n        /* \"#utility.yul\":4356:4444   */\n      mstore\n        /* \"#utility.yul\":4463:4467   */\n      0x21\n        /* \"#utility.yul\":4460:4461   */\n      0x04\n        /* \"#utility.yul\":4453:4468   */\n      mstore\n        /* \"#utility.yul\":4487:4491   */\n      0x24\n        /* \"#utility.yul\":4484:4485   */\n      0x00\n        /* \"#utility.yul\":4477:4492   */\n      revert\n        /* \"#utility.yul\":4504:4620   */\n    tag_230:\n        /* \"#utility.yul\":4588:4589   */\n      0x05\n        /* \"#utility.yul\":4581:4586   */\n      dup2\n        /* \"#utility.yul\":4578:4590   */\n      lt\n        /* \"#utility.yul\":4568:4614   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":4594:4612   */\n      tag_309\n      tag_157\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4568:4614   */\n    tag_308:\n        /* \"#utility.yul\":4504:4620   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4626:4759   */\n    tag_231:\n        /* \"#utility.yul\":4674:4681   */\n      0x00\n        /* \"#utility.yul\":4703:4708   */\n      dup2\n        /* \"#utility.yul\":4692:4708   */\n      swap1\n      pop\n        /* \"#utility.yul\":4709:4753   */\n      tag_311\n        /* \"#utility.yul\":4747:4752   */\n      dup3\n        /* \"#utility.yul\":4709:4753   */\n      tag_230\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4626:4759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4765:4898   */\n    tag_232:\n        /* \"#utility.yul\":4824:4833   */\n      0x00\n        /* \"#utility.yul\":4857:4892   */\n      tag_313\n        /* \"#utility.yul\":4886:4891   */\n      dup3\n        /* \"#utility.yul\":4857:4892   */\n      tag_231\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4844:4892   */\n      swap1\n      pop\n        /* \"#utility.yul\":4765:4898   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4904:5053   */\n    tag_233:\n        /* \"#utility.yul\":5000:5046   */\n      tag_315\n        /* \"#utility.yul\":5040:5045   */\n      dup2\n        /* \"#utility.yul\":5000:5046   */\n      tag_232\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":4995:4998   */\n      dup3\n        /* \"#utility.yul\":4988:5047   */\n      mstore\n        /* \"#utility.yul\":4904:5053   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5059:5729   */\n    tag_65:\n        /* \"#utility.yul\":5267:5271   */\n      0x00\n        /* \"#utility.yul\":5305:5308   */\n      0xa0\n        /* \"#utility.yul\":5294:5303   */\n      dup3\n        /* \"#utility.yul\":5290:5309   */\n      add\n        /* \"#utility.yul\":5282:5309   */\n      swap1\n      pop\n        /* \"#utility.yul\":5319:5390   */\n      tag_317\n        /* \"#utility.yul\":5387:5388   */\n      0x00\n        /* \"#utility.yul\":5376:5385   */\n      dup4\n        /* \"#utility.yul\":5372:5389   */\n      add\n        /* \"#utility.yul\":5363:5369   */\n      dup9\n        /* \"#utility.yul\":5319:5390   */\n      tag_229\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5400:5472   */\n      tag_318\n        /* \"#utility.yul\":5468:5470   */\n      0x20\n        /* \"#utility.yul\":5457:5466   */\n      dup4\n        /* \"#utility.yul\":5453:5471   */\n      add\n        /* \"#utility.yul\":5444:5450   */\n      dup8\n        /* \"#utility.yul\":5400:5472   */\n      tag_229\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5482:5563   */\n      tag_319\n        /* \"#utility.yul\":5559:5561   */\n      0x40\n        /* \"#utility.yul\":5548:5557   */\n      dup4\n        /* \"#utility.yul\":5544:5562   */\n      add\n        /* \"#utility.yul\":5535:5541   */\n      dup7\n        /* \"#utility.yul\":5482:5563   */\n      tag_233\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5573:5645   */\n      tag_320\n        /* \"#utility.yul\":5641:5643   */\n      0x60\n        /* \"#utility.yul\":5630:5639   */\n      dup4\n        /* \"#utility.yul\":5626:5644   */\n      add\n        /* \"#utility.yul\":5617:5623   */\n      dup6\n        /* \"#utility.yul\":5573:5645   */\n      tag_229\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":5655:5722   */\n      tag_321\n        /* \"#utility.yul\":5717:5720   */\n      0x80\n        /* \"#utility.yul\":5706:5715   */\n      dup4\n        /* \"#utility.yul\":5702:5721   */\n      add\n        /* \"#utility.yul\":5693:5699   */\n      dup5\n        /* \"#utility.yul\":5655:5722   */\n      tag_219\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5059:5729   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5735:5857   */\n    tag_234:\n        /* \"#utility.yul\":5808:5832   */\n      tag_323\n        /* \"#utility.yul\":5826:5831   */\n      dup2\n        /* \"#utility.yul\":5808:5832   */\n      tag_228\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5801:5806   */\n      dup2\n        /* \"#utility.yul\":5798:5833   */\n      eq\n        /* \"#utility.yul\":5788:5851   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":5847:5848   */\n      0x00\n        /* \"#utility.yul\":5844:5845   */\n      0x00\n        /* \"#utility.yul\":5837:5849   */\n      revert\n        /* \"#utility.yul\":5788:5851   */\n    tag_324:\n        /* \"#utility.yul\":5735:5857   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5863:6002   */\n    tag_235:\n        /* \"#utility.yul\":5909:5914   */\n      0x00\n        /* \"#utility.yul\":5947:5953   */\n      dup2\n        /* \"#utility.yul\":5934:5954   */\n      calldataload\n        /* \"#utility.yul\":5925:5954   */\n      swap1\n      pop\n        /* \"#utility.yul\":5963:5996   */\n      tag_326\n        /* \"#utility.yul\":5990:5995   */\n      dup2\n        /* \"#utility.yul\":5963:5996   */\n      tag_234\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":5863:6002   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6008:6337   */\n    tag_68:\n        /* \"#utility.yul\":6067:6073   */\n      0x00\n        /* \"#utility.yul\":6116:6118   */\n      0x20\n        /* \"#utility.yul\":6104:6113   */\n      dup3\n        /* \"#utility.yul\":6095:6102   */\n      dup5\n        /* \"#utility.yul\":6091:6114   */\n      sub\n        /* \"#utility.yul\":6087:6119   */\n      slt\n        /* \"#utility.yul\":6084:6203   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":6122:6201   */\n      tag_329\n      tag_213\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6084:6203   */\n    tag_328:\n        /* \"#utility.yul\":6242:6243   */\n      0x00\n        /* \"#utility.yul\":6267:6320   */\n      tag_330\n        /* \"#utility.yul\":6312:6319   */\n      dup5\n        /* \"#utility.yul\":6303:6309   */\n      dup3\n        /* \"#utility.yul\":6292:6301   */\n      dup6\n        /* \"#utility.yul\":6288:6310   */\n      add\n        /* \"#utility.yul\":6267:6320   */\n      tag_235\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":6257:6320   */\n      swap2\n      pop\n        /* \"#utility.yul\":6213:6330   */\n      pop\n        /* \"#utility.yul\":6008:6337   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6343:6896   */\n    tag_89:\n        /* \"#utility.yul\":6520:6524   */\n      0x00\n        /* \"#utility.yul\":6558:6561   */\n      0x80\n        /* \"#utility.yul\":6547:6556   */\n      dup3\n        /* \"#utility.yul\":6543:6562   */\n      add\n        /* \"#utility.yul\":6535:6562   */\n      swap1\n      pop\n        /* \"#utility.yul\":6572:6643   */\n      tag_332\n        /* \"#utility.yul\":6640:6641   */\n      0x00\n        /* \"#utility.yul\":6629:6638   */\n      dup4\n        /* \"#utility.yul\":6625:6642   */\n      add\n        /* \"#utility.yul\":6616:6622   */\n      dup8\n        /* \"#utility.yul\":6572:6643   */\n      tag_229\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6653:6725   */\n      tag_333\n        /* \"#utility.yul\":6721:6723   */\n      0x20\n        /* \"#utility.yul\":6710:6719   */\n      dup4\n        /* \"#utility.yul\":6706:6724   */\n      add\n        /* \"#utility.yul\":6697:6703   */\n      dup7\n        /* \"#utility.yul\":6653:6725   */\n      tag_229\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6735:6807   */\n      tag_334\n        /* \"#utility.yul\":6803:6805   */\n      0x40\n        /* \"#utility.yul\":6792:6801   */\n      dup4\n        /* \"#utility.yul\":6788:6806   */\n      add\n        /* \"#utility.yul\":6779:6785   */\n      dup6\n        /* \"#utility.yul\":6735:6807   */\n      tag_229\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":6817:6889   */\n      tag_335\n        /* \"#utility.yul\":6885:6887   */\n      0x60\n        /* \"#utility.yul\":6874:6883   */\n      dup4\n        /* \"#utility.yul\":6870:6888   */\n      add\n        /* \"#utility.yul\":6861:6867   */\n      dup5\n        /* \"#utility.yul\":6817:6889   */\n      tag_229\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6343:6896   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6902:6962   */\n    tag_236:\n        /* \"#utility.yul\":6930:6933   */\n      0x00\n        /* \"#utility.yul\":6951:6956   */\n      dup2\n        /* \"#utility.yul\":6944:6956   */\n      swap1\n      pop\n        /* \"#utility.yul\":6902:6962   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6968:7110   */\n    tag_237:\n        /* \"#utility.yul\":7018:7027   */\n      0x00\n        /* \"#utility.yul\":7051:7104   */\n      tag_338\n        /* \"#utility.yul\":7069:7103   */\n      tag_339\n        /* \"#utility.yul\":7078:7102   */\n      tag_340\n        /* \"#utility.yul\":7096:7101   */\n      dup5\n        /* \"#utility.yul\":7078:7102   */\n      tag_224\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":7069:7103   */\n      tag_236\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":7051:7104   */\n      tag_224\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":7038:7104   */\n      swap1\n      pop\n        /* \"#utility.yul\":6968:7110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7116:7242   */\n    tag_238:\n        /* \"#utility.yul\":7166:7175   */\n      0x00\n        /* \"#utility.yul\":7199:7236   */\n      tag_342\n        /* \"#utility.yul\":7230:7235   */\n      dup3\n        /* \"#utility.yul\":7199:7236   */\n      tag_237\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":7186:7236   */\n      swap1\n      pop\n        /* \"#utility.yul\":7116:7242   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7248:7388   */\n    tag_239:\n        /* \"#utility.yul\":7312:7321   */\n      0x00\n        /* \"#utility.yul\":7345:7382   */\n      tag_344\n        /* \"#utility.yul\":7376:7381   */\n      dup3\n        /* \"#utility.yul\":7345:7382   */\n      tag_238\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":7332:7382   */\n      swap1\n      pop\n        /* \"#utility.yul\":7248:7388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7394:7553   */\n    tag_240:\n        /* \"#utility.yul\":7495:7546   */\n      tag_346\n        /* \"#utility.yul\":7540:7545   */\n      dup2\n        /* \"#utility.yul\":7495:7546   */\n      tag_239\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":7490:7493   */\n      dup3\n        /* \"#utility.yul\":7483:7547   */\n      mstore\n        /* \"#utility.yul\":7394:7553   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7559:7809   */\n    tag_93:\n        /* \"#utility.yul\":7666:7670   */\n      0x00\n        /* \"#utility.yul\":7704:7706   */\n      0x20\n        /* \"#utility.yul\":7693:7702   */\n      dup3\n        /* \"#utility.yul\":7689:7707   */\n      add\n        /* \"#utility.yul\":7681:7707   */\n      swap1\n      pop\n        /* \"#utility.yul\":7717:7802   */\n      tag_348\n        /* \"#utility.yul\":7799:7800   */\n      0x00\n        /* \"#utility.yul\":7788:7797   */\n      dup4\n        /* \"#utility.yul\":7784:7801   */\n      add\n        /* \"#utility.yul\":7775:7781   */\n      dup5\n        /* \"#utility.yul\":7717:7802   */\n      tag_240\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":7559:7809   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7815:7984   */\n    tag_241:\n        /* \"#utility.yul\":7899:7910   */\n      0x00\n        /* \"#utility.yul\":7933:7939   */\n      dup3\n        /* \"#utility.yul\":7928:7931   */\n      dup3\n        /* \"#utility.yul\":7921:7940   */\n      mstore\n        /* \"#utility.yul\":7973:7977   */\n      0x20\n        /* \"#utility.yul\":7968:7971   */\n      dup3\n        /* \"#utility.yul\":7964:7978   */\n      add\n        /* \"#utility.yul\":7949:7978   */\n      swap1\n      pop\n        /* \"#utility.yul\":7815:7984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7990:8155   */\n    tag_242:\n        /* \"#utility.yul\":8130:8147   */\n      0x416c726561647920636c61696d65640000000000000000000000000000000000\n        /* \"#utility.yul\":8126:8127   */\n      0x00\n        /* \"#utility.yul\":8118:8124   */\n      dup3\n        /* \"#utility.yul\":8114:8128   */\n      add\n        /* \"#utility.yul\":8107:8148   */\n      mstore\n        /* \"#utility.yul\":7990:8155   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8161:8527   */\n    tag_243:\n        /* \"#utility.yul\":8303:8306   */\n      0x00\n        /* \"#utility.yul\":8324:8391   */\n      tag_352\n        /* \"#utility.yul\":8388:8390   */\n      0x0f\n        /* \"#utility.yul\":8383:8386   */\n      dup4\n        /* \"#utility.yul\":8324:8391   */\n      tag_241\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8317:8391   */\n      swap2\n      pop\n        /* \"#utility.yul\":8400:8493   */\n      tag_353\n        /* \"#utility.yul\":8489:8492   */\n      dup3\n        /* \"#utility.yul\":8400:8493   */\n      tag_242\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":8518:8520   */\n      0x20\n        /* \"#utility.yul\":8513:8516   */\n      dup3\n        /* \"#utility.yul\":8509:8521   */\n      add\n        /* \"#utility.yul\":8502:8521   */\n      swap1\n      pop\n        /* \"#utility.yul\":8161:8527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8533:8952   */\n    tag_116:\n        /* \"#utility.yul\":8699:8703   */\n      0x00\n        /* \"#utility.yul\":8737:8739   */\n      0x20\n        /* \"#utility.yul\":8726:8735   */\n      dup3\n        /* \"#utility.yul\":8722:8740   */\n      add\n        /* \"#utility.yul\":8714:8740   */\n      swap1\n      pop\n        /* \"#utility.yul\":8786:8795   */\n      dup2\n        /* \"#utility.yul\":8780:8784   */\n      dup2\n        /* \"#utility.yul\":8776:8796   */\n      sub\n        /* \"#utility.yul\":8772:8773   */\n      0x00\n        /* \"#utility.yul\":8761:8770   */\n      dup4\n        /* \"#utility.yul\":8757:8774   */\n      add\n        /* \"#utility.yul\":8750:8797   */\n      mstore\n        /* \"#utility.yul\":8814:8945   */\n      tag_355\n        /* \"#utility.yul\":8940:8944   */\n      dup2\n        /* \"#utility.yul\":8814:8945   */\n      tag_243\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":8806:8945   */\n      swap1\n      pop\n        /* \"#utility.yul\":8533:8952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8958:9122   */\n    tag_244:\n        /* \"#utility.yul\":9098:9114   */\n      0x566f6c756d6520746f6f206c6f77000000000000000000000000000000000000\n        /* \"#utility.yul\":9094:9095   */\n      0x00\n        /* \"#utility.yul\":9086:9092   */\n      dup3\n        /* \"#utility.yul\":9082:9096   */\n      add\n        /* \"#utility.yul\":9075:9115   */\n      mstore\n        /* \"#utility.yul\":8958:9122   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9128:9494   */\n    tag_245:\n        /* \"#utility.yul\":9270:9273   */\n      0x00\n        /* \"#utility.yul\":9291:9358   */\n      tag_358\n        /* \"#utility.yul\":9355:9357   */\n      0x0e\n        /* \"#utility.yul\":9350:9353   */\n      dup4\n        /* \"#utility.yul\":9291:9358   */\n      tag_241\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":9284:9358   */\n      swap2\n      pop\n        /* \"#utility.yul\":9367:9460   */\n      tag_359\n        /* \"#utility.yul\":9456:9459   */\n      dup3\n        /* \"#utility.yul\":9367:9460   */\n      tag_244\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":9485:9487   */\n      0x20\n        /* \"#utility.yul\":9480:9483   */\n      dup3\n        /* \"#utility.yul\":9476:9488   */\n      add\n        /* \"#utility.yul\":9469:9488   */\n      swap1\n      pop\n        /* \"#utility.yul\":9128:9494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9500:9919   */\n    tag_119:\n        /* \"#utility.yul\":9666:9670   */\n      0x00\n        /* \"#utility.yul\":9704:9706   */\n      0x20\n        /* \"#utility.yul\":9693:9702   */\n      dup3\n        /* \"#utility.yul\":9689:9707   */\n      add\n        /* \"#utility.yul\":9681:9707   */\n      swap1\n      pop\n        /* \"#utility.yul\":9753:9762   */\n      dup2\n        /* \"#utility.yul\":9747:9751   */\n      dup2\n        /* \"#utility.yul\":9743:9763   */\n      sub\n        /* \"#utility.yul\":9739:9740   */\n      0x00\n        /* \"#utility.yul\":9728:9737   */\n      dup4\n        /* \"#utility.yul\":9724:9741   */\n      add\n        /* \"#utility.yul\":9717:9764   */\n      mstore\n        /* \"#utility.yul\":9781:9912   */\n      tag_361\n        /* \"#utility.yul\":9907:9911   */\n      dup2\n        /* \"#utility.yul\":9781:9912   */\n      tag_245\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":9773:9912   */\n      swap1\n      pop\n        /* \"#utility.yul\":9500:9919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9925:10105   */\n    tag_246:\n        /* \"#utility.yul\":9973:10050   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9970:9971   */\n      0x00\n        /* \"#utility.yul\":9963:10051   */\n      mstore\n        /* \"#utility.yul\":10070:10074   */\n      0x11\n        /* \"#utility.yul\":10067:10068   */\n      0x04\n        /* \"#utility.yul\":10060:10075   */\n      mstore\n        /* \"#utility.yul\":10094:10098   */\n      0x24\n        /* \"#utility.yul\":10091:10092   */\n      0x00\n        /* \"#utility.yul\":10084:10099   */\n      revert\n        /* \"#utility.yul\":10111:10521   */\n    tag_121:\n        /* \"#utility.yul\":10151:10158   */\n      0x00\n        /* \"#utility.yul\":10174:10194   */\n      tag_364\n        /* \"#utility.yul\":10192:10193   */\n      dup3\n        /* \"#utility.yul\":10174:10194   */\n      tag_228\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":10169:10194   */\n      swap2\n      pop\n        /* \"#utility.yul\":10208:10228   */\n      tag_365\n        /* \"#utility.yul\":10226:10227   */\n      dup4\n        /* \"#utility.yul\":10208:10228   */\n      tag_228\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10203:10228   */\n      swap3\n      pop\n        /* \"#utility.yul\":10263:10264   */\n      dup3\n        /* \"#utility.yul\":10260:10261   */\n      dup3\n        /* \"#utility.yul\":10256:10265   */\n      mul\n        /* \"#utility.yul\":10285:10315   */\n      tag_366\n        /* \"#utility.yul\":10303:10314   */\n      dup2\n        /* \"#utility.yul\":10285:10315   */\n      tag_228\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":10274:10315   */\n      swap2\n      pop\n        /* \"#utility.yul\":10464:10465   */\n      dup3\n        /* \"#utility.yul\":10455:10462   */\n      dup3\n        /* \"#utility.yul\":10451:10466   */\n      div\n        /* \"#utility.yul\":10448:10449   */\n      dup5\n        /* \"#utility.yul\":10445:10467   */\n      eq\n        /* \"#utility.yul\":10425:10426   */\n      dup4\n        /* \"#utility.yul\":10418:10427   */\n      iszero\n        /* \"#utility.yul\":10398:10481   */\n      or\n        /* \"#utility.yul\":10375:10514   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":10494:10512   */\n      tag_368\n      tag_246\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":10375:10514   */\n    tag_367:\n        /* \"#utility.yul\":10159:10521   */\n      pop\n        /* \"#utility.yul\":10111:10521   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10527:10707   */\n    tag_247:\n        /* \"#utility.yul\":10575:10652   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10572:10573   */\n      0x00\n        /* \"#utility.yul\":10565:10653   */\n      mstore\n        /* \"#utility.yul\":10672:10676   */\n      0x12\n        /* \"#utility.yul\":10669:10670   */\n      0x04\n        /* \"#utility.yul\":10662:10677   */\n      mstore\n        /* \"#utility.yul\":10696:10700   */\n      0x24\n        /* \"#utility.yul\":10693:10694   */\n      0x00\n        /* \"#utility.yul\":10686:10701   */\n      revert\n        /* \"#utility.yul\":10713:10898   */\n    tag_123:\n        /* \"#utility.yul\":10753:10754   */\n      0x00\n        /* \"#utility.yul\":10770:10790   */\n      tag_371\n        /* \"#utility.yul\":10788:10789   */\n      dup3\n        /* \"#utility.yul\":10770:10790   */\n      tag_228\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":10765:10790   */\n      swap2\n      pop\n        /* \"#utility.yul\":10804:10824   */\n      tag_372\n        /* \"#utility.yul\":10822:10823   */\n      dup4\n        /* \"#utility.yul\":10804:10824   */\n      tag_228\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":10799:10824   */\n      swap3\n      pop\n        /* \"#utility.yul\":10843:10844   */\n      dup3\n        /* \"#utility.yul\":10833:10868   */\n      tag_373\n      jumpi\n        /* \"#utility.yul\":10848:10866   */\n      tag_374\n      tag_247\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":10833:10868   */\n    tag_373:\n        /* \"#utility.yul\":10890:10891   */\n      dup3\n        /* \"#utility.yul\":10887:10888   */\n      dup3\n        /* \"#utility.yul\":10883:10892   */\n      div\n        /* \"#utility.yul\":10878:10892   */\n      swap1\n      pop\n        /* \"#utility.yul\":10713:10898   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10904:11095   */\n    tag_129:\n        /* \"#utility.yul\":10944:10947   */\n      0x00\n        /* \"#utility.yul\":10963:10983   */\n      tag_376\n        /* \"#utility.yul\":10981:10982   */\n      dup3\n        /* \"#utility.yul\":10963:10983   */\n      tag_228\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":10958:10983   */\n      swap2\n      pop\n        /* \"#utility.yul\":10997:11017   */\n      tag_377\n        /* \"#utility.yul\":11015:11016   */\n      dup4\n        /* \"#utility.yul\":10997:11017   */\n      tag_228\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":10992:11017   */\n      swap3\n      pop\n        /* \"#utility.yul\":11040:11041   */\n      dup3\n        /* \"#utility.yul\":11037:11038   */\n      dup3\n        /* \"#utility.yul\":11033:11042   */\n      add\n        /* \"#utility.yul\":11026:11042   */\n      swap1\n      pop\n        /* \"#utility.yul\":11061:11064   */\n      dup1\n        /* \"#utility.yul\":11058:11059   */\n      dup3\n        /* \"#utility.yul\":11055:11065   */\n      gt\n        /* \"#utility.yul\":11052:11088   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":11068:11086   */\n      tag_379\n      tag_246\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":11052:11088   */\n    tag_378:\n        /* \"#utility.yul\":10904:11095   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11101:11295   */\n    tag_133:\n        /* \"#utility.yul\":11141:11145   */\n      0x00\n        /* \"#utility.yul\":11161:11181   */\n      tag_381\n        /* \"#utility.yul\":11179:11180   */\n      dup3\n        /* \"#utility.yul\":11161:11181   */\n      tag_228\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":11156:11181   */\n      swap2\n      pop\n        /* \"#utility.yul\":11195:11215   */\n      tag_382\n        /* \"#utility.yul\":11213:11214   */\n      dup4\n        /* \"#utility.yul\":11195:11215   */\n      tag_228\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":11190:11215   */\n      swap3\n      pop\n        /* \"#utility.yul\":11239:11240   */\n      dup3\n        /* \"#utility.yul\":11236:11237   */\n      dup3\n        /* \"#utility.yul\":11232:11241   */\n      sub\n        /* \"#utility.yul\":11224:11241   */\n      swap1\n      pop\n        /* \"#utility.yul\":11263:11264   */\n      dup2\n        /* \"#utility.yul\":11257:11261   */\n      dup2\n        /* \"#utility.yul\":11254:11265   */\n      gt\n        /* \"#utility.yul\":11251:11288   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":11268:11286   */\n      tag_384\n      tag_246\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":11251:11288   */\n    tag_383:\n        /* \"#utility.yul\":11101:11295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11301:11419   */\n    tag_248:\n        /* \"#utility.yul\":11388:11412   */\n      tag_386\n        /* \"#utility.yul\":11406:11411   */\n      dup2\n        /* \"#utility.yul\":11388:11412   */\n      tag_225\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":11383:11386   */\n      dup3\n        /* \"#utility.yul\":11376:11413   */\n      mstore\n        /* \"#utility.yul\":11301:11419   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11425:11757   */\n    tag_135:\n        /* \"#utility.yul\":11546:11550   */\n      0x00\n        /* \"#utility.yul\":11584:11586   */\n      0x40\n        /* \"#utility.yul\":11573:11582   */\n      dup3\n        /* \"#utility.yul\":11569:11587   */\n      add\n        /* \"#utility.yul\":11561:11587   */\n      swap1\n      pop\n        /* \"#utility.yul\":11597:11668   */\n      tag_388\n        /* \"#utility.yul\":11665:11666   */\n      0x00\n        /* \"#utility.yul\":11654:11663   */\n      dup4\n        /* \"#utility.yul\":11650:11667   */\n      add\n        /* \"#utility.yul\":11641:11647   */\n      dup6\n        /* \"#utility.yul\":11597:11668   */\n      tag_248\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":11678:11750   */\n      tag_389\n        /* \"#utility.yul\":11746:11748   */\n      0x20\n        /* \"#utility.yul\":11735:11744   */\n      dup4\n        /* \"#utility.yul\":11731:11749   */\n      add\n        /* \"#utility.yul\":11722:11728   */\n      dup5\n        /* \"#utility.yul\":11678:11750   */\n      tag_229\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":11425:11757   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11763:11879   */\n    tag_249:\n        /* \"#utility.yul\":11833:11854   */\n      tag_391\n        /* \"#utility.yul\":11848:11853   */\n      dup2\n        /* \"#utility.yul\":11833:11854   */\n      tag_218\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":11826:11831   */\n      dup2\n        /* \"#utility.yul\":11823:11855   */\n      eq\n        /* \"#utility.yul\":11813:11873   */\n      tag_392\n      jumpi\n        /* \"#utility.yul\":11869:11870   */\n      0x00\n        /* \"#utility.yul\":11866:11867   */\n      0x00\n        /* \"#utility.yul\":11859:11871   */\n      revert\n        /* \"#utility.yul\":11813:11873   */\n    tag_392:\n        /* \"#utility.yul\":11763:11879   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11885:12022   */\n    tag_250:\n        /* \"#utility.yul\":11939:11944   */\n      0x00\n        /* \"#utility.yul\":11970:11976   */\n      dup2\n        /* \"#utility.yul\":11964:11977   */\n      mload\n        /* \"#utility.yul\":11955:11977   */\n      swap1\n      pop\n        /* \"#utility.yul\":11986:12016   */\n      tag_394\n        /* \"#utility.yul\":12010:12015   */\n      dup2\n        /* \"#utility.yul\":11986:12016   */\n      tag_249\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":11885:12022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12028:12373   */\n    tag_139:\n        /* \"#utility.yul\":12095:12101   */\n      0x00\n        /* \"#utility.yul\":12144:12146   */\n      0x20\n        /* \"#utility.yul\":12132:12141   */\n      dup3\n        /* \"#utility.yul\":12123:12130   */\n      dup5\n        /* \"#utility.yul\":12119:12142   */\n      sub\n        /* \"#utility.yul\":12115:12147   */\n      slt\n        /* \"#utility.yul\":12112:12231   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":12150:12229   */\n      tag_397\n      tag_213\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":12112:12231   */\n    tag_396:\n        /* \"#utility.yul\":12270:12271   */\n      0x00\n        /* \"#utility.yul\":12295:12356   */\n      tag_398\n        /* \"#utility.yul\":12348:12355   */\n      dup5\n        /* \"#utility.yul\":12339:12345   */\n      dup3\n        /* \"#utility.yul\":12328:12337   */\n      dup6\n        /* \"#utility.yul\":12324:12346   */\n      add\n        /* \"#utility.yul\":12295:12356   */\n      tag_250\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":12285:12356   */\n      swap2\n      pop\n        /* \"#utility.yul\":12241:12366   */\n      pop\n        /* \"#utility.yul\":12028:12373   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12379:12821   */\n    tag_145:\n        /* \"#utility.yul\":12528:12532   */\n      0x00\n        /* \"#utility.yul\":12566:12568   */\n      0x60\n        /* \"#utility.yul\":12555:12564   */\n      dup3\n        /* \"#utility.yul\":12551:12569   */\n      add\n        /* \"#utility.yul\":12543:12569   */\n      swap1\n      pop\n        /* \"#utility.yul\":12579:12650   */\n      tag_400\n        /* \"#utility.yul\":12647:12648   */\n      0x00\n        /* \"#utility.yul\":12636:12645   */\n      dup4\n        /* \"#utility.yul\":12632:12649   */\n      add\n        /* \"#utility.yul\":12623:12629   */\n      dup7\n        /* \"#utility.yul\":12579:12650   */\n      tag_229\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":12660:12732   */\n      tag_401\n        /* \"#utility.yul\":12728:12730   */\n      0x20\n        /* \"#utility.yul\":12717:12726   */\n      dup4\n        /* \"#utility.yul\":12713:12731   */\n      add\n        /* \"#utility.yul\":12704:12710   */\n      dup6\n        /* \"#utility.yul\":12660:12732   */\n      tag_229\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":12742:12814   */\n      tag_402\n        /* \"#utility.yul\":12810:12812   */\n      0x40\n        /* \"#utility.yul\":12799:12808   */\n      dup4\n        /* \"#utility.yul\":12795:12813   */\n      add\n        /* \"#utility.yul\":12786:12792   */\n      dup5\n        /* \"#utility.yul\":12742:12814   */\n      tag_229\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":12379:12821   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12827:13269   */\n    tag_148:\n        /* \"#utility.yul\":12976:12980   */\n      0x00\n        /* \"#utility.yul\":13014:13016   */\n      0x60\n        /* \"#utility.yul\":13003:13012   */\n      dup3\n        /* \"#utility.yul\":12999:13017   */\n      add\n        /* \"#utility.yul\":12991:13017   */\n      swap1\n      pop\n        /* \"#utility.yul\":13027:13098   */\n      tag_404\n        /* \"#utility.yul\":13095:13096   */\n      0x00\n        /* \"#utility.yul\":13084:13093   */\n      dup4\n        /* \"#utility.yul\":13080:13097   */\n      add\n        /* \"#utility.yul\":13071:13077   */\n      dup7\n        /* \"#utility.yul\":13027:13098   */\n      tag_248\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":13108:13180   */\n      tag_405\n        /* \"#utility.yul\":13176:13178   */\n      0x20\n        /* \"#utility.yul\":13165:13174   */\n      dup4\n        /* \"#utility.yul\":13161:13179   */\n      add\n        /* \"#utility.yul\":13152:13158   */\n      dup6\n        /* \"#utility.yul\":13108:13180   */\n      tag_248\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":13190:13262   */\n      tag_406\n        /* \"#utility.yul\":13258:13260   */\n      0x40\n        /* \"#utility.yul\":13247:13256   */\n      dup4\n        /* \"#utility.yul\":13243:13261   */\n      add\n        /* \"#utility.yul\":13234:13240   */\n      dup5\n        /* \"#utility.yul\":13190:13262   */\n      tag_229\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":12827:13269   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13275:13625   */\n    tag_159:\n        /* \"#utility.yul\":13405:13409   */\n      0x00\n        /* \"#utility.yul\":13443:13445   */\n      0x40\n        /* \"#utility.yul\":13432:13441   */\n      dup3\n        /* \"#utility.yul\":13428:13446   */\n      add\n        /* \"#utility.yul\":13420:13446   */\n      swap1\n      pop\n        /* \"#utility.yul\":13456:13527   */\n      tag_408\n        /* \"#utility.yul\":13524:13525   */\n      0x00\n        /* \"#utility.yul\":13513:13522   */\n      dup4\n        /* \"#utility.yul\":13509:13526   */\n      add\n        /* \"#utility.yul\":13500:13506   */\n      dup6\n        /* \"#utility.yul\":13456:13527   */\n      tag_229\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":13537:13618   */\n      tag_409\n        /* \"#utility.yul\":13614:13616   */\n      0x20\n        /* \"#utility.yul\":13603:13612   */\n      dup4\n        /* \"#utility.yul\":13599:13617   */\n      add\n        /* \"#utility.yul\":13590:13596   */\n      dup5\n        /* \"#utility.yul\":13537:13618   */\n      tag_233\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":13275:13625   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13631:13963   */\n    tag_211:\n        /* \"#utility.yul\":13752:13756   */\n      0x00\n        /* \"#utility.yul\":13790:13792   */\n      0x40\n        /* \"#utility.yul\":13779:13788   */\n      dup3\n        /* \"#utility.yul\":13775:13793   */\n      add\n        /* \"#utility.yul\":13767:13793   */\n      swap1\n      pop\n        /* \"#utility.yul\":13803:13874   */\n      tag_411\n        /* \"#utility.yul\":13871:13872   */\n      0x00\n        /* \"#utility.yul\":13860:13869   */\n      dup4\n        /* \"#utility.yul\":13856:13873   */\n      add\n        /* \"#utility.yul\":13847:13853   */\n      dup6\n        /* \"#utility.yul\":13803:13874   */\n      tag_248\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":13884:13956   */\n      tag_412\n        /* \"#utility.yul\":13952:13954   */\n      0x20\n        /* \"#utility.yul\":13941:13950   */\n      dup4\n        /* \"#utility.yul\":13937:13955   */\n      add\n        /* \"#utility.yul\":13928:13934   */\n      dup5\n        /* \"#utility.yul\":13884:13956   */\n      tag_223\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":13631:13963   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203831c6b534c6dc204132780bdb012eaac3cfbaaa583a155da4a98b406fa2049c64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_655": {
									"entryPoint": null,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 212,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_468": {
									"entryPoint": 556,
									"id": 468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 457,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 563,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:7",
										"nodeType": "YulBlock",
										"src": "0:1199:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "922:274:7",
													"nodeType": "YulBlock",
													"src": "922:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:7",
																"nodeType": "YulBlock",
																"src": "968:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:7"
																			},
																			"nativeSrc": "970:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:7"
																		},
																		"nativeSrc": "970:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nativeSrc": "939:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:7",
																		"nodeType": "YulLiteral",
																		"src": "964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nativeSrc": "935:32:7",
																"nodeType": "YulFunctionCall",
																"src": "935:32:7"
															},
															"nativeSrc": "932:119:7",
															"nodeType": "YulIf",
															"src": "932:119:7"
														},
														{
															"nativeSrc": "1061:128:7",
															"nodeType": "YulBlock",
															"src": "1061:128:7",
															"statements": [
																{
																	"nativeSrc": "1076:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:7"
																				},
																				"nativeSrc": "1147:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:7"
																		},
																		"nativeSrc": "1115:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:7",
														"nodeType": "YulTypedName",
														"src": "892:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:7",
														"nodeType": "YulTypedName",
														"src": "903:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:7",
														"nodeType": "YulTypedName",
														"src": "915:6:7",
														"type": ""
													}
												],
												"src": "845:351:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526001600255620f42406003556305f5e1006004556004600655348015610028575f5ffd5b5060405161193b38038061193b833981810160405281019061004a9190610291565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061009c5f5f1b336100d460201b60201c565b506100cd7f7935bd0ae54bc31f548c14dba4d37c5c64b3f8ca900cb468fb8abd54d5894f55336100d460201b60201c565b50506102bc565b5f6100e583836101c960201b60201c565b6101bf5760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061015c61022c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506101c3565b5f90505b92915050565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61026082610237565b9050919050565b61027081610256565b811461027a575f5ffd5b50565b5f8151905061028b81610267565b92915050565b5f602082840312156102a6576102a5610233565b5b5f6102b38482850161027d565b91505092915050565b611672806102c95f395ff3fe608060405234801561000f575f5ffd5b5060043610610114575f3560e01c8063a87430ba116100a0578063d547741f1161006f578063d547741f146102e2578063d699b9d9146102fe578063efca2eed1461031c578063f5492e2f1461033a578063fc0c546a1461036d57610114565b8063a87430ba14610258578063a969ccef1461028c578063af0fe497146102a8578063ccc57490146102c457610114565b806376671808116100e757806376671808146101b05780638209ce30146101ce57806391d14854146101ec578063a217fddf1461021c578063a344c4991461023a57610114565b806301ffc9a714610118578063248a9ca3146101485780632f2ff15d1461017857806336568abe14610194575b5f5ffd5b610132600480360381019061012d9190610f40565b61038b565b60405161013f9190610f85565b60405180910390f35b610162600480360381019061015d9190610fd1565b610404565b60405161016f919061100b565b60405180910390f35b610192600480360381019061018d919061107e565b610420565b005b6101ae60048036038101906101a9919061107e565b610442565b005b6101b86104bd565b6040516101c591906110d4565b60405180910390f35b6101d66104c3565b6040516101e391906110d4565b60405180910390f35b6102066004803603810190610201919061107e565b6104c9565b6040516102139190610f85565b60405180910390f35b61022461052c565b604051610231919061100b565b60405180910390f35b610242610532565b60405161024f91906110d4565b60405180910390f35b610272600480360381019061026d91906110ed565b610538565b60405161028395949392919061118b565b60405180910390f35b6102a660048036038101906102a19190611206565b610582565b005b6102c260048036038101906102bd9190611206565b6108c9565b005b6102cc610a5d565b6040516102d9919061100b565b60405180910390f35b6102fc60048036038101906102f7919061107e565b610a81565b005b610306610aa3565b60405161031391906110d4565b60405180910390f35b610324610aa9565b60405161033191906110d4565b60405180910390f35b610354600480360381019061034f91906110ed565b610aaf565b6040516103649493929190611231565b60405180910390f35b610375610adb565b60405161038291906112cf565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103fd57506103fc82610b00565b5b9050919050565b5f5f5f8381526020019081526020015f20600101549050919050565b61042982610404565b61043281610b69565b61043c8383610b7d565b50505050565b61044a610c66565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104ae576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104b88282610c6d565b505050565b60025481565b60045481565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f5f1b81565b60065481565b6007602052805f5260405f205f91509050805f015490806001015490806002015f9054906101000a900460ff1690806003015490806004015f9054906101000a900460ff16905085565b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905060025481600301541061060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060190611342565b60405180910390fd5b60045482101561064f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610646906113aa565b60405180910390fd5b81815f018190555060025481600301819055505f620f42406003548461067591906113f5565b61067f9190611463565b90505f606461069d846002015f9054906101000a900460ff16610d56565b836106a891906113f5565b6106b29190611463565b90508060055f8282546106c59190611493565b925050819055505f60646019836106dc91906113f5565b6106e69190611463565b90505f81836106f591906114c6565b905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610753929190611508565b6020604051808303815f875af115801561076f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107939190611559565b503373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe836040516107da91906110d4565b60405180910390a25f8111156108c1575f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f81600201540361084c57600254816002018190555060065481600301819055505b81815f015f82825461085e9190611493565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fcacf4a6e7c897ead5577524d96f0debb59ccd5bd3465d42cd2a958e2defb0b9483836002015484600301546040516108b793929190611584565b60405180910390a2505b505050505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610927939291906115b9565b6020604051808303815f875af1158015610943573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109679190611559565b505f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905081816001015f8282546109bb9190611493565b925050819055506109cf8160010154610e35565b816002015f6101000a81548160ff021916908360048111156109f4576109f3611118565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff167fe42710261dccb691e79e3f3e24a2b8cc0e13b9bec7be82a445c6a6992474ea4483836002015f9054906101000a900460ff16604051610a519291906115ee565b60405180910390a25050565b7f7935bd0ae54bc31f548c14dba4d37c5c64b3f8ca900cb468fb8abd54d5894f5581565b610a8a82610404565b610a9381610b69565b610a9d8383610c6d565b50505050565b60035481565b60055481565b6008602052805f5260405f205f91509050805f0154908060010154908060020154908060030154905084565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610b7a81610b75610c66565b610e96565b50565b5f610b8883836104c9565b610c5c5760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bf9610c66565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610c60565b5f90505b92915050565b5f33905090565b5f610c7883836104c9565b15610d4c575f5f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610ce9610c66565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610d50565b5f90505b92915050565b5f60016004811115610d6b57610d6a611118565b5b826004811115610d7e57610d7d611118565b5b03610d8c57607d9050610e30565b60026004811115610da057610d9f611118565b5b826004811115610db357610db2611118565b5b03610dc15760969050610e30565b60036004811115610dd557610dd4611118565b5b826004811115610de857610de7611118565b5b03610df65760c89050610e30565b600480811115610e0957610e08611118565b5b826004811115610e1c57610e1b611118565b5b03610e2b5761012c9050610e30565b606490505b919050565b5f633b9aca00821015610e4a575f9050610e91565b6402540be400821015610e605760019050610e91565b640ba43b7400821015610e765760029050610e91565b64174876e800821015610e8c5760039050610e91565b600490505b919050565b610ea082826104c9565b610ee35780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610eda929190611615565b60405180910390fd5b5050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f1f81610eeb565b8114610f29575f5ffd5b50565b5f81359050610f3a81610f16565b92915050565b5f60208284031215610f5557610f54610ee7565b5b5f610f6284828501610f2c565b91505092915050565b5f8115159050919050565b610f7f81610f6b565b82525050565b5f602082019050610f985f830184610f76565b92915050565b5f819050919050565b610fb081610f9e565b8114610fba575f5ffd5b50565b5f81359050610fcb81610fa7565b92915050565b5f60208284031215610fe657610fe5610ee7565b5b5f610ff384828501610fbd565b91505092915050565b61100581610f9e565b82525050565b5f60208201905061101e5f830184610ffc565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61104d82611024565b9050919050565b61105d81611043565b8114611067575f5ffd5b50565b5f8135905061107881611054565b92915050565b5f5f6040838503121561109457611093610ee7565b5b5f6110a185828601610fbd565b92505060206110b28582860161106a565b9150509250929050565b5f819050919050565b6110ce816110bc565b82525050565b5f6020820190506110e75f8301846110c5565b92915050565b5f6020828403121561110257611101610ee7565b5b5f61110f8482850161106a565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6005811061115657611155611118565b5b50565b5f81905061116682611145565b919050565b5f61117582611159565b9050919050565b6111858161116b565b82525050565b5f60a08201905061119e5f8301886110c5565b6111ab60208301876110c5565b6111b8604083018661117c565b6111c560608301856110c5565b6111d26080830184610f76565b9695505050505050565b6111e5816110bc565b81146111ef575f5ffd5b50565b5f81359050611200816111dc565b92915050565b5f6020828403121561121b5761121a610ee7565b5b5f611228848285016111f2565b91505092915050565b5f6080820190506112445f8301876110c5565b61125160208301866110c5565b61125e60408301856110c5565b61126b60608301846110c5565b95945050505050565b5f819050919050565b5f61129761129261128d84611024565b611274565b611024565b9050919050565b5f6112a88261127d565b9050919050565b5f6112b98261129e565b9050919050565b6112c9816112af565b82525050565b5f6020820190506112e25f8301846112c0565b92915050565b5f82825260208201905092915050565b7f416c726561647920636c61696d656400000000000000000000000000000000005f82015250565b5f61132c600f836112e8565b9150611337826112f8565b602082019050919050565b5f6020820190508181035f83015261135981611320565b9050919050565b7f566f6c756d6520746f6f206c6f770000000000000000000000000000000000005f82015250565b5f611394600e836112e8565b915061139f82611360565b602082019050919050565b5f6020820190508181035f8301526113c181611388565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6113ff826110bc565b915061140a836110bc565b9250828202611418816110bc565b9150828204841483151761142f5761142e6113c8565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61146d826110bc565b9150611478836110bc565b92508261148857611487611436565b5b828204905092915050565b5f61149d826110bc565b91506114a8836110bc565b92508282019050808211156114c0576114bf6113c8565b5b92915050565b5f6114d0826110bc565b91506114db836110bc565b92508282039050818111156114f3576114f26113c8565b5b92915050565b61150281611043565b82525050565b5f60408201905061151b5f8301856114f9565b61152860208301846110c5565b9392505050565b61153881610f6b565b8114611542575f5ffd5b50565b5f815190506115538161152f565b92915050565b5f6020828403121561156e5761156d610ee7565b5b5f61157b84828501611545565b91505092915050565b5f6060820190506115975f8301866110c5565b6115a460208301856110c5565b6115b160408301846110c5565b949350505050565b5f6060820190506115cc5f8301866114f9565b6115d960208301856114f9565b6115e660408301846110c5565b949350505050565b5f6040820190506116015f8301856110c5565b61160e602083018461117c565b9392505050565b5f6040820190506116285f8301856114f9565b6116356020830184610ffc565b939250505056fea26469706673582212203831c6b534c6dc204132780bdb012eaac3cfbaaa583a155da4a98b406fa2049c64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x2 SSTORE PUSH3 0xF4240 PUSH1 0x3 SSTORE PUSH4 0x5F5E100 PUSH1 0x4 SSTORE PUSH1 0x4 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x28 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x193B CODESIZE SUB DUP1 PUSH2 0x193B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x4A SWAP2 SWAP1 PUSH2 0x291 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x9C PUSH0 PUSH0 SHL CALLER PUSH2 0xD4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xCD PUSH32 0x7935BD0AE54BC31F548C14DBA4D37C5C64B3F8CA900CB468FB8ABD54D5894F55 CALLER PUSH2 0xD4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x2BC JUMP JUMPDEST PUSH0 PUSH2 0xE5 DUP4 DUP4 PUSH2 0x1C9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1BF JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x15C PUSH2 0x22C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1C3 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x260 DUP3 PUSH2 0x237 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x270 DUP2 PUSH2 0x256 JUMP JUMPDEST DUP2 EQ PUSH2 0x27A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x28B DUP2 PUSH2 0x267 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x2A5 PUSH2 0x233 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B3 DUP5 DUP3 DUP6 ADD PUSH2 0x27D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1672 DUP1 PUSH2 0x2C9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA87430BA GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xD699B9D9 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xEFCA2EED EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xF5492E2F EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x36D JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0xA87430BA EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xA969CCEF EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xAF0FE497 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xCCC57490 EQ PUSH2 0x2C4 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x76671808 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x76671808 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x8209CE30 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xA344C499 EQ PUSH2 0x23A JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x194 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x107E JUMP JUMPDEST PUSH2 0x420 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x107E JUMP JUMPDEST PUSH2 0x442 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x107E JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x118B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x107E JUMP JUMPDEST PUSH2 0xA81 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x306 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x10ED JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3FD JUMPI POP PUSH2 0x3FC DUP3 PUSH2 0xB00 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x429 DUP3 PUSH2 0x404 JUMP JUMPDEST PUSH2 0x432 DUP2 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x43C DUP4 DUP4 PUSH2 0xB7D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x44A PUSH2 0xC66 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4B8 DUP3 DUP3 PUSH2 0xC6D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0x2 SLOAD DUP2 PUSH1 0x3 ADD SLOAD LT PUSH2 0x60A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x601 SWAP1 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP3 LT ISZERO PUSH2 0x64F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x646 SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH3 0xF4240 PUSH1 0x3 SLOAD DUP5 PUSH2 0x675 SWAP2 SWAP1 PUSH2 0x13F5 JUMP JUMPDEST PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x1463 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH2 0x69D DUP5 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD56 JUMP JUMPDEST DUP4 PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0x13F5 JUMP JUMPDEST PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x1463 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x64 PUSH1 0x19 DUP4 PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0x13F5 JUMP JUMPDEST PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0x1463 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x753 SWAP3 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x76F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x793 SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE DUP4 PUSH1 0x40 MLOAD PUSH2 0x7DA SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 GT ISZERO PUSH2 0x8C1 JUMPI PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SUB PUSH2 0x84C JUMPI PUSH1 0x2 SLOAD DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCACF4A6E7C897EAD5577524D96F0DEBB59CCD5BD3465D42CD2A958E2DEFB0B94 DUP4 DUP4 PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x8B7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x927 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x943 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x967 SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST POP PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9BB SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9CF DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0xE35 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9F4 JUMPI PUSH2 0x9F3 PUSH2 0x1118 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE42710261DCCB691E79E3F3E24A2B8CC0E13B9BEC7BE82A445C6A6992474EA44 DUP4 DUP4 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0xA51 SWAP3 SWAP2 SWAP1 PUSH2 0x15EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x7935BD0AE54BC31F548C14DBA4D37C5C64B3F8CA900CB468FB8ABD54D5894F55 DUP2 JUMP JUMPDEST PUSH2 0xA8A DUP3 PUSH2 0x404 JUMP JUMPDEST PUSH2 0xA93 DUP2 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0xA9D DUP4 DUP4 PUSH2 0xC6D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7A DUP2 PUSH2 0xB75 PUSH2 0xC66 JUMP JUMPDEST PUSH2 0xE96 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xB88 DUP4 DUP4 PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0xC5C JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBF9 PUSH2 0xC66 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC60 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xC78 DUP4 DUP4 PUSH2 0x4C9 JUMP JUMPDEST ISZERO PUSH2 0xD4C JUMPI PUSH0 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCE9 PUSH2 0xC66 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xD50 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD6B JUMPI PUSH2 0xD6A PUSH2 0x1118 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD7E JUMPI PUSH2 0xD7D PUSH2 0x1118 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xD8C JUMPI PUSH1 0x7D SWAP1 POP PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDA0 JUMPI PUSH2 0xD9F PUSH2 0x1118 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDB3 JUMPI PUSH2 0xDB2 PUSH2 0x1118 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xDC1 JUMPI PUSH1 0x96 SWAP1 POP PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDD5 JUMPI PUSH2 0xDD4 PUSH2 0x1118 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDE8 JUMPI PUSH2 0xDE7 PUSH2 0x1118 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xDF6 JUMPI PUSH1 0xC8 SWAP1 POP PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0xE09 JUMPI PUSH2 0xE08 PUSH2 0x1118 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE1C JUMPI PUSH2 0xE1B PUSH2 0x1118 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xE2B JUMPI PUSH2 0x12C SWAP1 POP PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x64 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH4 0x3B9ACA00 DUP3 LT ISZERO PUSH2 0xE4A JUMPI PUSH0 SWAP1 POP PUSH2 0xE91 JUMP JUMPDEST PUSH5 0x2540BE400 DUP3 LT ISZERO PUSH2 0xE60 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xE91 JUMP JUMPDEST PUSH5 0xBA43B7400 DUP3 LT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x2 SWAP1 POP PUSH2 0xE91 JUMP JUMPDEST PUSH5 0x174876E800 DUP3 LT ISZERO PUSH2 0xE8C JUMPI PUSH1 0x3 SWAP1 POP PUSH2 0xE91 JUMP JUMPDEST PUSH1 0x4 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEA0 DUP3 DUP3 PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0xEE3 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDA SWAP3 SWAP2 SWAP1 PUSH2 0x1615 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF1F DUP2 PUSH2 0xEEB JUMP JUMPDEST DUP2 EQ PUSH2 0xF29 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF3A DUP2 PUSH2 0xF16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF55 JUMPI PUSH2 0xF54 PUSH2 0xEE7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF62 DUP5 DUP3 DUP6 ADD PUSH2 0xF2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF7F DUP2 PUSH2 0xF6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF98 PUSH0 DUP4 ADD DUP5 PUSH2 0xF76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB0 DUP2 PUSH2 0xF9E JUMP JUMPDEST DUP2 EQ PUSH2 0xFBA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFCB DUP2 PUSH2 0xFA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE6 JUMPI PUSH2 0xFE5 PUSH2 0xEE7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFF3 DUP5 DUP3 DUP6 ADD PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1005 DUP2 PUSH2 0xF9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x101E PUSH0 DUP4 ADD DUP5 PUSH2 0xFFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x104D DUP3 PUSH2 0x1024 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105D DUP2 PUSH2 0x1043 JUMP JUMPDEST DUP2 EQ PUSH2 0x1067 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1078 DUP2 PUSH2 0x1054 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1094 JUMPI PUSH2 0x1093 PUSH2 0xEE7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10A1 DUP6 DUP3 DUP7 ADD PUSH2 0xFBD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10B2 DUP6 DUP3 DUP7 ADD PUSH2 0x106A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CE DUP2 PUSH2 0x10BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1102 JUMPI PUSH2 0x1101 PUSH2 0xEE7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x110F DUP5 DUP3 DUP6 ADD PUSH2 0x106A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1156 JUMPI PUSH2 0x1155 PUSH2 0x1118 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x1166 DUP3 PUSH2 0x1145 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1175 DUP3 PUSH2 0x1159 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1185 DUP2 PUSH2 0x116B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x119E PUSH0 DUP4 ADD DUP9 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x11AB PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x11B8 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x117C JUMP JUMPDEST PUSH2 0x11C5 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x11D2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xF76 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x11E5 DUP2 PUSH2 0x10BC JUMP JUMPDEST DUP2 EQ PUSH2 0x11EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1200 DUP2 PUSH2 0x11DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121B JUMPI PUSH2 0x121A PUSH2 0xEE7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1228 DUP5 DUP3 DUP6 ADD PUSH2 0x11F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1244 PUSH0 DUP4 ADD DUP8 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x1251 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x125E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x126B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1297 PUSH2 0x1292 PUSH2 0x128D DUP5 PUSH2 0x1024 JUMP JUMPDEST PUSH2 0x1274 JUMP JUMPDEST PUSH2 0x1024 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12A8 DUP3 PUSH2 0x127D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12B9 DUP3 PUSH2 0x129E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12C9 DUP2 PUSH2 0x12AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12E2 PUSH0 DUP4 ADD DUP5 PUSH2 0x12C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x132C PUSH1 0xF DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1337 DUP3 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1359 DUP2 PUSH2 0x1320 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x566F6C756D6520746F6F206C6F77000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1394 PUSH1 0xE DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x139F DUP3 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13C1 DUP2 PUSH2 0x1388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x13FF DUP3 PUSH2 0x10BC JUMP JUMPDEST SWAP2 POP PUSH2 0x140A DUP4 PUSH2 0x10BC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1418 DUP2 PUSH2 0x10BC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x142F JUMPI PUSH2 0x142E PUSH2 0x13C8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x146D DUP3 PUSH2 0x10BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1478 DUP4 PUSH2 0x10BC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x1436 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x149D DUP3 PUSH2 0x10BC JUMP JUMPDEST SWAP2 POP PUSH2 0x14A8 DUP4 PUSH2 0x10BC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14C0 JUMPI PUSH2 0x14BF PUSH2 0x13C8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14D0 DUP3 PUSH2 0x10BC JUMP JUMPDEST SWAP2 POP PUSH2 0x14DB DUP4 PUSH2 0x10BC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x14F3 JUMPI PUSH2 0x14F2 PUSH2 0x13C8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1502 DUP2 PUSH2 0x1043 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x151B PUSH0 DUP4 ADD DUP6 PUSH2 0x14F9 JUMP JUMPDEST PUSH2 0x1528 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1538 DUP2 PUSH2 0xF6B JUMP JUMPDEST DUP2 EQ PUSH2 0x1542 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1553 DUP2 PUSH2 0x152F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x156E JUMPI PUSH2 0x156D PUSH2 0xEE7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x157B DUP5 DUP3 DUP6 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1597 PUSH0 DUP4 ADD DUP7 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x15A4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x15B1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15CC PUSH0 DUP4 ADD DUP7 PUSH2 0x14F9 JUMP JUMPDEST PUSH2 0x15D9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14F9 JUMP JUMPDEST PUSH2 0x15E6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1601 PUSH0 DUP4 ADD DUP6 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x160E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x117C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1628 PUSH0 DUP4 ADD DUP6 PUSH2 0x14F9 JUMP JUMPDEST PUSH2 0x1635 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFFC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE BALANCE 0xC6 0xB5 CALLVALUE 0xC6 0xDC KECCAK256 COINBASE ORIGIN PUSH25 0xBDB012EAAC3CFBAAA583A155DA4A98B406FA2049C64736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "412:5752:6:-:0;;;752:1;722:31;;860:3;823:40;;973:9;937:45;;1179:1;1141:39;;3180:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3233:6;3218:5;;:22;;;;;;;;;;;;;;;;;;3250:42;2232:4:0;3261:18:6;;3281:10;3250;;;:42;;:::i;:::-;;3302:37;651:26;3328:10;3302;;;:37;;:::i;:::-;;3180:166;412:5752;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;412:5752:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 1324,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@GOVERNOR_ROLE_539": {
									"entryPoint": 2653,
									"id": 539,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_calculateFeeTier_897": {
									"entryPoint": 3637,
									"id": 897,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_checkRole_114": {
									"entryPoint": 3734,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 2921,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_getRewardMultiplier_937": {
									"entryPoint": 3414,
									"id": 937,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_grantRole_256": {
									"entryPoint": 2941,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_468": {
									"entryPoint": 3174,
									"id": 468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 3181,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@currentEpoch_543": {
									"entryPoint": 1213,
									"id": 543,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@defaultVestingEpochs_560": {
									"entryPoint": 1330,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": 1028,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 1056,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 1225,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@minVolumeThreshold_553": {
									"entryPoint": 1219,
									"id": 553,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mockClaim_848": {
									"entryPoint": 1410,
									"id": 848,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mockStake_705": {
									"entryPoint": 2249,
									"id": 705,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 1090,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 2689,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@rewardRatePerVolume_547": {
									"entryPoint": 2723,
									"id": 547,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardStreams_602": {
									"entryPoint": 2735,
									"id": 602,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_509": {
									"entryPoint": 2816,
									"id": 509,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 907,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token_533": {
									"entryPoint": 2779,
									"id": 533,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalDistributed_556": {
									"entryPoint": 2729,
									"id": 556,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@users_596": {
									"entryPoint": 1336,
									"id": 596,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 4029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 3884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 4049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 4222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 4092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$456_to_t_address_fromStack": {
									"entryPoint": 4800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_FeeTier_$567_to_t_uint8_fromStack": {
									"entryPoint": 4476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_884721f7543f42407f998851091c4cdedb565697d56dbe247775df5e0a094f53_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5561,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 5653,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5384,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 4107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$456__to_t_address__fromStack_reversed": {
									"entryPoint": 4815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_884721f7543f42407f998851091c4cdedb565697d56dbe247775df5e0a094f53__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_enum$_FeeTier_$567__to_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": 5614,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_enum$_FeeTier_$567_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint8_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 4491,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5508,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4657,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 3998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_FeeTier_$567": {
									"entryPoint": 4441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$456_to_t_address": {
									"entryPoint": 4783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_FeeTier_$567_to_t_uint8": {
									"entryPoint": 4459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5064,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5174,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 4376,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3815,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_884721f7543f42407f998851091c4cdedb565697d56dbe247775df5e0a094f53": {
									"entryPoint": 4960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_FeeTier_$567": {
									"entryPoint": 4421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 4007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 3862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13966:7",
										"nodeType": "YulBlock",
										"src": "0:13966:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "378:105:7",
													"nodeType": "YulBlock",
													"src": "378:105:7",
													"statements": [
														{
															"nativeSrc": "388:89:7",
															"nodeType": "YulAssignment",
															"src": "388:89:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:7",
																		"nodeType": "YulLiteral",
																		"src": "410:66:7",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:7"
																},
																"nativeSrc": "399:78:7",
																"nodeType": "YulFunctionCall",
																"src": "399:78:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:7",
														"nodeType": "YulTypedName",
														"src": "360:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:7",
														"nodeType": "YulTypedName",
														"src": "370:7:7",
														"type": ""
													}
												],
												"src": "334:149:7"
											},
											{
												"body": {
													"nativeSrc": "531:78:7",
													"nodeType": "YulBlock",
													"src": "531:78:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:7",
																"nodeType": "YulBlock",
																"src": "587:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:7",
																					"nodeType": "YulLiteral",
																					"src": "596:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:7",
																					"nodeType": "YulLiteral",
																					"src": "599:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:7"
																			},
																			"nativeSrc": "589:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:7"
																		},
																		"nativeSrc": "589:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:7",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:7"
																				},
																				"nativeSrc": "561:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:7"
																		},
																		"nativeSrc": "551:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:7"
																},
																"nativeSrc": "544:42:7",
																"nodeType": "YulFunctionCall",
																"src": "544:42:7"
															},
															"nativeSrc": "541:62:7",
															"nodeType": "YulIf",
															"src": "541:62:7"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:7",
														"nodeType": "YulTypedName",
														"src": "524:5:7",
														"type": ""
													}
												],
												"src": "489:120:7"
											},
											{
												"body": {
													"nativeSrc": "666:86:7",
													"nodeType": "YulBlock",
													"src": "666:86:7",
													"statements": [
														{
															"nativeSrc": "676:29:7",
															"nodeType": "YulAssignment",
															"src": "676:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:7"
																},
																"nativeSrc": "685:20:7",
																"nodeType": "YulFunctionCall",
																"src": "685:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:7"
																},
																"nativeSrc": "714:32:7",
																"nodeType": "YulFunctionCall",
																"src": "714:32:7"
															},
															"nativeSrc": "714:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:7"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:7",
														"nodeType": "YulTypedName",
														"src": "644:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:7",
														"nodeType": "YulTypedName",
														"src": "652:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:7",
														"nodeType": "YulTypedName",
														"src": "660:5:7",
														"type": ""
													}
												],
												"src": "615:137:7"
											},
											{
												"body": {
													"nativeSrc": "823:262:7",
													"nodeType": "YulBlock",
													"src": "823:262:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:7",
																"nodeType": "YulBlock",
																"src": "869:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:7"
																			},
																			"nativeSrc": "871:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:7"
																		},
																		"nativeSrc": "871:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:7"
																		},
																		"nativeSrc": "840:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:7",
																		"nodeType": "YulLiteral",
																		"src": "865:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:7"
																},
																"nativeSrc": "836:32:7",
																"nodeType": "YulFunctionCall",
																"src": "836:32:7"
															},
															"nativeSrc": "833:119:7",
															"nodeType": "YulIf",
															"src": "833:119:7"
														},
														{
															"nativeSrc": "962:116:7",
															"nodeType": "YulBlock",
															"src": "962:116:7",
															"statements": [
																{
																	"nativeSrc": "977:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:7",
																		"nodeType": "YulLiteral",
																		"src": "991:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:7",
																			"nodeType": "YulTypedName",
																			"src": "981:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:7",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:7"
																				},
																				"nativeSrc": "1036:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:7",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:7"
																		},
																		"nativeSrc": "1016:52:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:7",
														"nodeType": "YulTypedName",
														"src": "793:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:7",
														"nodeType": "YulTypedName",
														"src": "804:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:7",
														"nodeType": "YulTypedName",
														"src": "816:6:7",
														"type": ""
													}
												],
												"src": "758:327:7"
											},
											{
												"body": {
													"nativeSrc": "1133:48:7",
													"nodeType": "YulBlock",
													"src": "1133:48:7",
													"statements": [
														{
															"nativeSrc": "1143:32:7",
															"nodeType": "YulAssignment",
															"src": "1143:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:7"
																		},
																		"nativeSrc": "1161:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:7"
																},
																"nativeSrc": "1154:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:7",
														"nodeType": "YulTypedName",
														"src": "1115:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:7",
														"nodeType": "YulTypedName",
														"src": "1125:7:7",
														"type": ""
													}
												],
												"src": "1091:90:7"
											},
											{
												"body": {
													"nativeSrc": "1246:50:7",
													"nodeType": "YulBlock",
													"src": "1246:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:7"
																		},
																		"nativeSrc": "1268:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:7"
																},
																"nativeSrc": "1256:34:7",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:7"
															},
															"nativeSrc": "1256:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:7",
														"nodeType": "YulTypedName",
														"src": "1234:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:7",
														"nodeType": "YulTypedName",
														"src": "1241:3:7",
														"type": ""
													}
												],
												"src": "1187:109:7"
											},
											{
												"body": {
													"nativeSrc": "1394:118:7",
													"nodeType": "YulBlock",
													"src": "1394:118:7",
													"statements": [
														{
															"nativeSrc": "1404:26:7",
															"nodeType": "YulAssignment",
															"src": "1404:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:7"
																},
																"nativeSrc": "1412:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:7"
																		},
																		"nativeSrc": "1487:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:7"
																},
																"nativeSrc": "1440:65:7",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:7"
															},
															"nativeSrc": "1440:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:7",
														"nodeType": "YulTypedName",
														"src": "1366:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:7",
														"nodeType": "YulTypedName",
														"src": "1378:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:7",
														"nodeType": "YulTypedName",
														"src": "1389:4:7",
														"type": ""
													}
												],
												"src": "1302:210:7"
											},
											{
												"body": {
													"nativeSrc": "1563:32:7",
													"nodeType": "YulBlock",
													"src": "1563:32:7",
													"statements": [
														{
															"nativeSrc": "1573:16:7",
															"nodeType": "YulAssignment",
															"src": "1573:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:7",
																"nodeType": "YulIdentifier",
																"src": "1584:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1518:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:7",
														"nodeType": "YulTypedName",
														"src": "1545:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:7",
														"nodeType": "YulTypedName",
														"src": "1555:7:7",
														"type": ""
													}
												],
												"src": "1518:77:7"
											},
											{
												"body": {
													"nativeSrc": "1644:79:7",
													"nodeType": "YulBlock",
													"src": "1644:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:7",
																"nodeType": "YulBlock",
																"src": "1701:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:7"
																			},
																			"nativeSrc": "1703:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:7"
																		},
																		"nativeSrc": "1703:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1674:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:7"
																				},
																				"nativeSrc": "1674:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:7"
																		},
																		"nativeSrc": "1664:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:7"
																},
																"nativeSrc": "1657:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:7"
															},
															"nativeSrc": "1654:63:7",
															"nodeType": "YulIf",
															"src": "1654:63:7"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1601:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:7",
														"nodeType": "YulTypedName",
														"src": "1637:5:7",
														"type": ""
													}
												],
												"src": "1601:122:7"
											},
											{
												"body": {
													"nativeSrc": "1781:87:7",
													"nodeType": "YulBlock",
													"src": "1781:87:7",
													"statements": [
														{
															"nativeSrc": "1791:29:7",
															"nodeType": "YulAssignment",
															"src": "1791:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:7"
																},
																"nativeSrc": "1800:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1829:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:7"
																},
																"nativeSrc": "1829:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:7"
															},
															"nativeSrc": "1829:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:7"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "1729:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:7",
														"nodeType": "YulTypedName",
														"src": "1759:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:7",
														"nodeType": "YulTypedName",
														"src": "1767:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:7",
														"nodeType": "YulTypedName",
														"src": "1775:5:7",
														"type": ""
													}
												],
												"src": "1729:139:7"
											},
											{
												"body": {
													"nativeSrc": "1940:263:7",
													"nodeType": "YulBlock",
													"src": "1940:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1986:83:7",
																"nodeType": "YulBlock",
																"src": "1986:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1988:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:7"
																			},
																			"nativeSrc": "1988:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:7"
																		},
																		"nativeSrc": "1988:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1961:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1970:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1957:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:7"
																		},
																		"nativeSrc": "1957:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1953:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:7"
																},
																"nativeSrc": "1953:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1953:32:7"
															},
															"nativeSrc": "1950:119:7",
															"nodeType": "YulIf",
															"src": "1950:119:7"
														},
														{
															"nativeSrc": "2079:117:7",
															"nodeType": "YulBlock",
															"src": "2079:117:7",
															"statements": [
																{
																	"nativeSrc": "2094:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2123:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:7"
																				},
																				"nativeSrc": "2154:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2133:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:7"
																		},
																		"nativeSrc": "2133:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2123:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1874:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1910:9:7",
														"nodeType": "YulTypedName",
														"src": "1910:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1921:7:7",
														"nodeType": "YulTypedName",
														"src": "1921:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1933:6:7",
														"nodeType": "YulTypedName",
														"src": "1933:6:7",
														"type": ""
													}
												],
												"src": "1874:329:7"
											},
											{
												"body": {
													"nativeSrc": "2274:53:7",
													"nodeType": "YulBlock",
													"src": "2274:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2291:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2314:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2314:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2296:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "2296:17:7"
																		},
																		"nativeSrc": "2296:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2296:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2284:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:7"
																},
																"nativeSrc": "2284:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2284:37:7"
															},
															"nativeSrc": "2284:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "2284:37:7"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2209:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2262:5:7",
														"nodeType": "YulTypedName",
														"src": "2262:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2269:3:7",
														"nodeType": "YulTypedName",
														"src": "2269:3:7",
														"type": ""
													}
												],
												"src": "2209:118:7"
											},
											{
												"body": {
													"nativeSrc": "2431:124:7",
													"nodeType": "YulBlock",
													"src": "2431:124:7",
													"statements": [
														{
															"nativeSrc": "2441:26:7",
															"nodeType": "YulAssignment",
															"src": "2441:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2453:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2453:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2464:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2449:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:7"
																},
																"nativeSrc": "2449:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2449:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2441:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2441:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2521:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2534:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2545:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2545:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2530:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:7"
																		},
																		"nativeSrc": "2530:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "2477:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2477:43:7"
																},
																"nativeSrc": "2477:71:7",
																"nodeType": "YulFunctionCall",
																"src": "2477:71:7"
															},
															"nativeSrc": "2477:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "2477:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2333:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2403:9:7",
														"nodeType": "YulTypedName",
														"src": "2403:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2415:6:7",
														"nodeType": "YulTypedName",
														"src": "2415:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2426:4:7",
														"nodeType": "YulTypedName",
														"src": "2426:4:7",
														"type": ""
													}
												],
												"src": "2333:222:7"
											},
											{
												"body": {
													"nativeSrc": "2606:81:7",
													"nodeType": "YulBlock",
													"src": "2606:81:7",
													"statements": [
														{
															"nativeSrc": "2616:65:7",
															"nodeType": "YulAssignment",
															"src": "2616:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2631:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2631:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2638:42:7",
																		"nodeType": "YulLiteral",
																		"src": "2638:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2627:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2627:3:7"
																},
																"nativeSrc": "2627:54:7",
																"nodeType": "YulFunctionCall",
																"src": "2627:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2616:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2561:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2588:5:7",
														"nodeType": "YulTypedName",
														"src": "2588:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2598:7:7",
														"nodeType": "YulTypedName",
														"src": "2598:7:7",
														"type": ""
													}
												],
												"src": "2561:126:7"
											},
											{
												"body": {
													"nativeSrc": "2738:51:7",
													"nodeType": "YulBlock",
													"src": "2738:51:7",
													"statements": [
														{
															"nativeSrc": "2748:35:7",
															"nodeType": "YulAssignment",
															"src": "2748:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2777:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2777:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2759:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2759:17:7"
																},
																"nativeSrc": "2759:24:7",
																"nodeType": "YulFunctionCall",
																"src": "2759:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2748:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2748:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2693:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2720:5:7",
														"nodeType": "YulTypedName",
														"src": "2720:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2730:7:7",
														"nodeType": "YulTypedName",
														"src": "2730:7:7",
														"type": ""
													}
												],
												"src": "2693:96:7"
											},
											{
												"body": {
													"nativeSrc": "2838:79:7",
													"nodeType": "YulBlock",
													"src": "2838:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2895:16:7",
																"nodeType": "YulBlock",
																"src": "2895:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2904:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2904:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2907:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2907:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2897:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2897:6:7"
																			},
																			"nativeSrc": "2897:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2897:12:7"
																		},
																		"nativeSrc": "2897:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2861:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2861:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2886:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2886:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2868:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2868:17:7"
																				},
																				"nativeSrc": "2868:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2868:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2858:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2858:2:7"
																		},
																		"nativeSrc": "2858:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2858:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2851:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:7"
																},
																"nativeSrc": "2851:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2851:43:7"
															},
															"nativeSrc": "2848:63:7",
															"nodeType": "YulIf",
															"src": "2848:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2795:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2831:5:7",
														"nodeType": "YulTypedName",
														"src": "2831:5:7",
														"type": ""
													}
												],
												"src": "2795:122:7"
											},
											{
												"body": {
													"nativeSrc": "2975:87:7",
													"nodeType": "YulBlock",
													"src": "2975:87:7",
													"statements": [
														{
															"nativeSrc": "2985:29:7",
															"nodeType": "YulAssignment",
															"src": "2985:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3007:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2994:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2994:12:7"
																},
																"nativeSrc": "2994:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2994:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2985:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2985:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3050:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3050:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3023:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3023:26:7"
																},
																"nativeSrc": "3023:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3023:33:7"
															},
															"nativeSrc": "3023:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3023:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2923:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2953:6:7",
														"nodeType": "YulTypedName",
														"src": "2953:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2961:3:7",
														"nodeType": "YulTypedName",
														"src": "2961:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2969:5:7",
														"nodeType": "YulTypedName",
														"src": "2969:5:7",
														"type": ""
													}
												],
												"src": "2923:139:7"
											},
											{
												"body": {
													"nativeSrc": "3151:391:7",
													"nodeType": "YulBlock",
													"src": "3151:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3197:83:7",
																"nodeType": "YulBlock",
																"src": "3197:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3199:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3199:77:7"
																			},
																			"nativeSrc": "3199:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3199:79:7"
																		},
																		"nativeSrc": "3199:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3199:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3172:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3172:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3181:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3181:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3168:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3168:3:7"
																		},
																		"nativeSrc": "3168:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3168:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3193:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3193:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3164:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3164:3:7"
																},
																"nativeSrc": "3164:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3164:32:7"
															},
															"nativeSrc": "3161:119:7",
															"nodeType": "YulIf",
															"src": "3161:119:7"
														},
														{
															"nativeSrc": "3290:117:7",
															"nodeType": "YulBlock",
															"src": "3290:117:7",
															"statements": [
																{
																	"nativeSrc": "3305:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3305:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3319:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3319:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3309:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3309:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3334:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3334:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3369:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3369:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3380:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3380:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3365:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3365:3:7"
																				},
																				"nativeSrc": "3365:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3365:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3389:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3389:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3344:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3344:20:7"
																		},
																		"nativeSrc": "3344:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3344:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3334:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3417:118:7",
															"nodeType": "YulBlock",
															"src": "3417:118:7",
															"statements": [
																{
																	"nativeSrc": "3432:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3432:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3446:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3446:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3436:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3436:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:7"
																				},
																				"nativeSrc": "3493:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3472:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:7"
																		},
																		"nativeSrc": "3472:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3462:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3068:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3113:9:7",
														"nodeType": "YulTypedName",
														"src": "3113:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3124:7:7",
														"nodeType": "YulTypedName",
														"src": "3124:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3136:6:7",
														"nodeType": "YulTypedName",
														"src": "3136:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3144:6:7",
														"nodeType": "YulTypedName",
														"src": "3144:6:7",
														"type": ""
													}
												],
												"src": "3068:474:7"
											},
											{
												"body": {
													"nativeSrc": "3593:32:7",
													"nodeType": "YulBlock",
													"src": "3593:32:7",
													"statements": [
														{
															"nativeSrc": "3603:16:7",
															"nodeType": "YulAssignment",
															"src": "3603:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "3614:5:7",
																"nodeType": "YulIdentifier",
																"src": "3614:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3603:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3603:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3548:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3575:5:7",
														"nodeType": "YulTypedName",
														"src": "3575:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3585:7:7",
														"nodeType": "YulTypedName",
														"src": "3585:7:7",
														"type": ""
													}
												],
												"src": "3548:77:7"
											},
											{
												"body": {
													"nativeSrc": "3696:53:7",
													"nodeType": "YulBlock",
													"src": "3696:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3713:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3713:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3736:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3736:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3718:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3718:17:7"
																		},
																		"nativeSrc": "3718:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3718:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3706:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3706:6:7"
																},
																"nativeSrc": "3706:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3706:37:7"
															},
															"nativeSrc": "3706:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3706:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3631:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3684:5:7",
														"nodeType": "YulTypedName",
														"src": "3684:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3691:3:7",
														"nodeType": "YulTypedName",
														"src": "3691:3:7",
														"type": ""
													}
												],
												"src": "3631:118:7"
											},
											{
												"body": {
													"nativeSrc": "3853:124:7",
													"nodeType": "YulBlock",
													"src": "3853:124:7",
													"statements": [
														{
															"nativeSrc": "3863:26:7",
															"nodeType": "YulAssignment",
															"src": "3863:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3875:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3875:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3886:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3886:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3871:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:7"
																},
																"nativeSrc": "3871:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3871:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3863:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3863:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3943:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3943:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3956:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3956:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3967:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3967:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3952:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3952:3:7"
																		},
																		"nativeSrc": "3952:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3952:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3899:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3899:43:7"
																},
																"nativeSrc": "3899:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3899:71:7"
															},
															"nativeSrc": "3899:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3899:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3755:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3825:9:7",
														"nodeType": "YulTypedName",
														"src": "3825:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3837:6:7",
														"nodeType": "YulTypedName",
														"src": "3837:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3848:4:7",
														"nodeType": "YulTypedName",
														"src": "3848:4:7",
														"type": ""
													}
												],
												"src": "3755:222:7"
											},
											{
												"body": {
													"nativeSrc": "4049:263:7",
													"nodeType": "YulBlock",
													"src": "4049:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4095:83:7",
																"nodeType": "YulBlock",
																"src": "4095:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4097:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4097:77:7"
																			},
																			"nativeSrc": "4097:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4097:79:7"
																		},
																		"nativeSrc": "4097:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4097:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4070:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4070:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4079:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4079:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4066:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4066:3:7"
																		},
																		"nativeSrc": "4066:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4066:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4091:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4091:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4062:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4062:3:7"
																},
																"nativeSrc": "4062:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4062:32:7"
															},
															"nativeSrc": "4059:119:7",
															"nodeType": "YulIf",
															"src": "4059:119:7"
														},
														{
															"nativeSrc": "4188:117:7",
															"nodeType": "YulBlock",
															"src": "4188:117:7",
															"statements": [
																{
																	"nativeSrc": "4203:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4203:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4217:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4217:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4207:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4207:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4232:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4232:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4267:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4267:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4278:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4278:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4263:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4263:3:7"
																				},
																				"nativeSrc": "4263:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4263:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4287:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4287:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4242:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4242:20:7"
																		},
																		"nativeSrc": "4242:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4242:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4232:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4232:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3983:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4019:9:7",
														"nodeType": "YulTypedName",
														"src": "4019:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4030:7:7",
														"nodeType": "YulTypedName",
														"src": "4030:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4042:6:7",
														"nodeType": "YulTypedName",
														"src": "4042:6:7",
														"type": ""
													}
												],
												"src": "3983:329:7"
											},
											{
												"body": {
													"nativeSrc": "4346:152:7",
													"nodeType": "YulBlock",
													"src": "4346:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4363:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4363:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4366:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4366:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4356:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4356:6:7"
																},
																"nativeSrc": "4356:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4356:88:7"
															},
															"nativeSrc": "4356:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4356:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4460:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4460:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4463:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4463:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4453:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4453:6:7"
																},
																"nativeSrc": "4453:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4453:15:7"
															},
															"nativeSrc": "4453:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4453:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4484:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4484:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4487:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4487:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4477:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4477:6:7"
																},
																"nativeSrc": "4477:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4477:15:7"
															},
															"nativeSrc": "4477:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4477:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "4318:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4318:180:7"
											},
											{
												"body": {
													"nativeSrc": "4558:62:7",
													"nodeType": "YulBlock",
													"src": "4558:62:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4592:22:7",
																"nodeType": "YulBlock",
																"src": "4592:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "4594:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4594:16:7"
																			},
																			"nativeSrc": "4594:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4594:18:7"
																		},
																		"nativeSrc": "4594:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4594:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4581:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4581:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4588:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4588:1:7",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4578:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4578:2:7"
																		},
																		"nativeSrc": "4578:12:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4578:12:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4571:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4571:6:7"
																},
																"nativeSrc": "4571:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4571:20:7"
															},
															"nativeSrc": "4568:46:7",
															"nodeType": "YulIf",
															"src": "4568:46:7"
														}
													]
												},
												"name": "validator_assert_t_enum$_FeeTier_$567",
												"nativeSrc": "4504:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4551:5:7",
														"nodeType": "YulTypedName",
														"src": "4551:5:7",
														"type": ""
													}
												],
												"src": "4504:116:7"
											},
											{
												"body": {
													"nativeSrc": "4682:77:7",
													"nodeType": "YulBlock",
													"src": "4682:77:7",
													"statements": [
														{
															"nativeSrc": "4692:16:7",
															"nodeType": "YulAssignment",
															"src": "4692:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "4703:5:7",
																"nodeType": "YulIdentifier",
																"src": "4703:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4692:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4692:7:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4747:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4747:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_FeeTier_$567",
																	"nativeSrc": "4709:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "4709:37:7"
																},
																"nativeSrc": "4709:44:7",
																"nodeType": "YulFunctionCall",
																"src": "4709:44:7"
															},
															"nativeSrc": "4709:44:7",
															"nodeType": "YulExpressionStatement",
															"src": "4709:44:7"
														}
													]
												},
												"name": "cleanup_t_enum$_FeeTier_$567",
												"nativeSrc": "4626:133:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4664:5:7",
														"nodeType": "YulTypedName",
														"src": "4664:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4674:7:7",
														"nodeType": "YulTypedName",
														"src": "4674:7:7",
														"type": ""
													}
												],
												"src": "4626:133:7"
											},
											{
												"body": {
													"nativeSrc": "4834:64:7",
													"nodeType": "YulBlock",
													"src": "4834:64:7",
													"statements": [
														{
															"nativeSrc": "4844:48:7",
															"nodeType": "YulAssignment",
															"src": "4844:48:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4886:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4886:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_FeeTier_$567",
																	"nativeSrc": "4857:28:7",
																	"nodeType": "YulIdentifier",
																	"src": "4857:28:7"
																},
																"nativeSrc": "4857:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4857:35:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4844:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4844:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_FeeTier_$567_to_t_uint8",
												"nativeSrc": "4765:133:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4814:5:7",
														"nodeType": "YulTypedName",
														"src": "4814:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4824:9:7",
														"nodeType": "YulTypedName",
														"src": "4824:9:7",
														"type": ""
													}
												],
												"src": "4765:133:7"
											},
											{
												"body": {
													"nativeSrc": "4978:75:7",
													"nodeType": "YulBlock",
													"src": "4978:75:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4995:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4995:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5040:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5040:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_FeeTier_$567_to_t_uint8",
																			"nativeSrc": "5000:39:7",
																			"nodeType": "YulIdentifier",
																			"src": "5000:39:7"
																		},
																		"nativeSrc": "5000:46:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5000:46:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4988:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4988:6:7"
																},
																"nativeSrc": "4988:59:7",
																"nodeType": "YulFunctionCall",
																"src": "4988:59:7"
															},
															"nativeSrc": "4988:59:7",
															"nodeType": "YulExpressionStatement",
															"src": "4988:59:7"
														}
													]
												},
												"name": "abi_encode_t_enum$_FeeTier_$567_to_t_uint8_fromStack",
												"nativeSrc": "4904:149:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4966:5:7",
														"nodeType": "YulTypedName",
														"src": "4966:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4973:3:7",
														"nodeType": "YulTypedName",
														"src": "4973:3:7",
														"type": ""
													}
												],
												"src": "4904:149:7"
											},
											{
												"body": {
													"nativeSrc": "5272:457:7",
													"nodeType": "YulBlock",
													"src": "5272:457:7",
													"statements": [
														{
															"nativeSrc": "5282:27:7",
															"nodeType": "YulAssignment",
															"src": "5282:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5294:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5294:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5305:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5305:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5290:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5290:3:7"
																},
																"nativeSrc": "5290:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5290:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5282:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5282:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5363:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5363:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5376:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5376:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5387:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5387:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5372:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5372:3:7"
																		},
																		"nativeSrc": "5372:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5372:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5319:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5319:43:7"
																},
																"nativeSrc": "5319:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5319:71:7"
															},
															"nativeSrc": "5319:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5319:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5444:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5444:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5457:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5457:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5468:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5468:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5453:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5453:3:7"
																		},
																		"nativeSrc": "5453:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5453:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5400:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5400:43:7"
																},
																"nativeSrc": "5400:72:7",
																"nodeType": "YulFunctionCall",
																"src": "5400:72:7"
															},
															"nativeSrc": "5400:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "5400:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5535:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5535:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5548:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5548:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5559:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5559:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5544:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5544:3:7"
																		},
																		"nativeSrc": "5544:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5544:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_FeeTier_$567_to_t_uint8_fromStack",
																	"nativeSrc": "5482:52:7",
																	"nodeType": "YulIdentifier",
																	"src": "5482:52:7"
																},
																"nativeSrc": "5482:81:7",
																"nodeType": "YulFunctionCall",
																"src": "5482:81:7"
															},
															"nativeSrc": "5482:81:7",
															"nodeType": "YulExpressionStatement",
															"src": "5482:81:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "5617:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5617:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5630:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5630:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5641:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5641:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5626:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5626:3:7"
																		},
																		"nativeSrc": "5626:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5626:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5573:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5573:43:7"
																},
																"nativeSrc": "5573:72:7",
																"nodeType": "YulFunctionCall",
																"src": "5573:72:7"
															},
															"nativeSrc": "5573:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "5573:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "5693:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5693:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5706:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5706:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5717:3:7",
																				"nodeType": "YulLiteral",
																				"src": "5717:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5702:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5702:3:7"
																		},
																		"nativeSrc": "5702:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5702:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "5655:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "5655:37:7"
																},
																"nativeSrc": "5655:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5655:67:7"
															},
															"nativeSrc": "5655:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5655:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_enum$_FeeTier_$567_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint8_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "5059:670:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5212:9:7",
														"nodeType": "YulTypedName",
														"src": "5212:9:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5224:6:7",
														"nodeType": "YulTypedName",
														"src": "5224:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5232:6:7",
														"nodeType": "YulTypedName",
														"src": "5232:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5240:6:7",
														"nodeType": "YulTypedName",
														"src": "5240:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5248:6:7",
														"nodeType": "YulTypedName",
														"src": "5248:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5256:6:7",
														"nodeType": "YulTypedName",
														"src": "5256:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5267:4:7",
														"nodeType": "YulTypedName",
														"src": "5267:4:7",
														"type": ""
													}
												],
												"src": "5059:670:7"
											},
											{
												"body": {
													"nativeSrc": "5778:79:7",
													"nodeType": "YulBlock",
													"src": "5778:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5835:16:7",
																"nodeType": "YulBlock",
																"src": "5835:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5844:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5844:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5847:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5847:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5837:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5837:6:7"
																			},
																			"nativeSrc": "5837:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5837:12:7"
																		},
																		"nativeSrc": "5837:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5837:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5801:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5801:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5826:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5826:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5808:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "5808:17:7"
																				},
																				"nativeSrc": "5808:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5808:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5798:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5798:2:7"
																		},
																		"nativeSrc": "5798:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5798:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5791:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5791:6:7"
																},
																"nativeSrc": "5791:43:7",
																"nodeType": "YulFunctionCall",
																"src": "5791:43:7"
															},
															"nativeSrc": "5788:63:7",
															"nodeType": "YulIf",
															"src": "5788:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "5735:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5771:5:7",
														"nodeType": "YulTypedName",
														"src": "5771:5:7",
														"type": ""
													}
												],
												"src": "5735:122:7"
											},
											{
												"body": {
													"nativeSrc": "5915:87:7",
													"nodeType": "YulBlock",
													"src": "5915:87:7",
													"statements": [
														{
															"nativeSrc": "5925:29:7",
															"nodeType": "YulAssignment",
															"src": "5925:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5947:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5947:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5934:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5934:12:7"
																},
																"nativeSrc": "5934:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5934:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5925:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5925:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5990:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5990:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5963:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "5963:26:7"
																},
																"nativeSrc": "5963:33:7",
																"nodeType": "YulFunctionCall",
																"src": "5963:33:7"
															},
															"nativeSrc": "5963:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "5963:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "5863:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5893:6:7",
														"nodeType": "YulTypedName",
														"src": "5893:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5901:3:7",
														"nodeType": "YulTypedName",
														"src": "5901:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5909:5:7",
														"nodeType": "YulTypedName",
														"src": "5909:5:7",
														"type": ""
													}
												],
												"src": "5863:139:7"
											},
											{
												"body": {
													"nativeSrc": "6074:263:7",
													"nodeType": "YulBlock",
													"src": "6074:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6120:83:7",
																"nodeType": "YulBlock",
																"src": "6120:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6122:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6122:77:7"
																			},
																			"nativeSrc": "6122:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6122:79:7"
																		},
																		"nativeSrc": "6122:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6122:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6095:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6095:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6104:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6104:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6091:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6091:3:7"
																		},
																		"nativeSrc": "6091:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6091:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6116:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6116:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6087:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6087:3:7"
																},
																"nativeSrc": "6087:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6087:32:7"
															},
															"nativeSrc": "6084:119:7",
															"nodeType": "YulIf",
															"src": "6084:119:7"
														},
														{
															"nativeSrc": "6213:117:7",
															"nodeType": "YulBlock",
															"src": "6213:117:7",
															"statements": [
																{
																	"nativeSrc": "6228:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6228:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6242:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6242:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6232:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6232:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6257:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6257:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6292:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6292:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6303:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6303:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6288:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6288:3:7"
																				},
																				"nativeSrc": "6288:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6288:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6312:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6312:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6267:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6267:20:7"
																		},
																		"nativeSrc": "6267:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6267:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6257:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6257:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6008:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6044:9:7",
														"nodeType": "YulTypedName",
														"src": "6044:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6055:7:7",
														"nodeType": "YulTypedName",
														"src": "6055:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6067:6:7",
														"nodeType": "YulTypedName",
														"src": "6067:6:7",
														"type": ""
													}
												],
												"src": "6008:329:7"
											},
											{
												"body": {
													"nativeSrc": "6525:371:7",
													"nodeType": "YulBlock",
													"src": "6525:371:7",
													"statements": [
														{
															"nativeSrc": "6535:27:7",
															"nodeType": "YulAssignment",
															"src": "6535:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6547:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6547:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6558:3:7",
																		"nodeType": "YulLiteral",
																		"src": "6558:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6543:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6543:3:7"
																},
																"nativeSrc": "6543:19:7",
																"nodeType": "YulFunctionCall",
																"src": "6543:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6535:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6535:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6616:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6616:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6629:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6629:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6640:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6640:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6625:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6625:3:7"
																		},
																		"nativeSrc": "6625:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6625:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6572:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6572:43:7"
																},
																"nativeSrc": "6572:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6572:71:7"
															},
															"nativeSrc": "6572:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6572:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6697:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6697:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6710:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6710:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6721:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6721:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6706:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6706:3:7"
																		},
																		"nativeSrc": "6706:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6706:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6653:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6653:43:7"
																},
																"nativeSrc": "6653:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6653:72:7"
															},
															"nativeSrc": "6653:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6653:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6779:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6779:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6792:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6792:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6803:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6803:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6788:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6788:3:7"
																		},
																		"nativeSrc": "6788:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6788:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6735:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6735:43:7"
																},
																"nativeSrc": "6735:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6735:72:7"
															},
															"nativeSrc": "6735:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6735:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6861:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6861:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6874:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6874:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6885:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6885:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6870:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6870:3:7"
																		},
																		"nativeSrc": "6870:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6870:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6817:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6817:43:7"
																},
																"nativeSrc": "6817:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6817:72:7"
															},
															"nativeSrc": "6817:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6817:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6343:553:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6473:9:7",
														"nodeType": "YulTypedName",
														"src": "6473:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6485:6:7",
														"nodeType": "YulTypedName",
														"src": "6485:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6493:6:7",
														"nodeType": "YulTypedName",
														"src": "6493:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6501:6:7",
														"nodeType": "YulTypedName",
														"src": "6501:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6509:6:7",
														"nodeType": "YulTypedName",
														"src": "6509:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6520:4:7",
														"nodeType": "YulTypedName",
														"src": "6520:4:7",
														"type": ""
													}
												],
												"src": "6343:553:7"
											},
											{
												"body": {
													"nativeSrc": "6934:28:7",
													"nodeType": "YulBlock",
													"src": "6934:28:7",
													"statements": [
														{
															"nativeSrc": "6944:12:7",
															"nodeType": "YulAssignment",
															"src": "6944:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "6951:5:7",
																"nodeType": "YulIdentifier",
																"src": "6951:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6944:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6944:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6902:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6920:5:7",
														"nodeType": "YulTypedName",
														"src": "6920:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6930:3:7",
														"nodeType": "YulTypedName",
														"src": "6930:3:7",
														"type": ""
													}
												],
												"src": "6902:60:7"
											},
											{
												"body": {
													"nativeSrc": "7028:82:7",
													"nodeType": "YulBlock",
													"src": "7028:82:7",
													"statements": [
														{
															"nativeSrc": "7038:66:7",
															"nodeType": "YulAssignment",
															"src": "7038:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7096:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7096:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "7078:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "7078:17:7"
																				},
																				"nativeSrc": "7078:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7078:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "7069:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "7069:8:7"
																		},
																		"nativeSrc": "7069:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7069:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "7051:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7051:17:7"
																},
																"nativeSrc": "7051:53:7",
																"nodeType": "YulFunctionCall",
																"src": "7051:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7038:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "7038:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "6968:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7008:5:7",
														"nodeType": "YulTypedName",
														"src": "7008:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7018:9:7",
														"nodeType": "YulTypedName",
														"src": "7018:9:7",
														"type": ""
													}
												],
												"src": "6968:142:7"
											},
											{
												"body": {
													"nativeSrc": "7176:66:7",
													"nodeType": "YulBlock",
													"src": "7176:66:7",
													"statements": [
														{
															"nativeSrc": "7186:50:7",
															"nodeType": "YulAssignment",
															"src": "7186:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7230:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7230:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "7199:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "7199:30:7"
																},
																"nativeSrc": "7199:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7199:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7186:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "7186:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "7116:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7156:5:7",
														"nodeType": "YulTypedName",
														"src": "7156:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7166:9:7",
														"nodeType": "YulTypedName",
														"src": "7166:9:7",
														"type": ""
													}
												],
												"src": "7116:126:7"
											},
											{
												"body": {
													"nativeSrc": "7322:66:7",
													"nodeType": "YulBlock",
													"src": "7322:66:7",
													"statements": [
														{
															"nativeSrc": "7332:50:7",
															"nodeType": "YulAssignment",
															"src": "7332:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7376:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7376:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "7345:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "7345:30:7"
																},
																"nativeSrc": "7345:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7345:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7332:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "7332:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$456_to_t_address",
												"nativeSrc": "7248:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7302:5:7",
														"nodeType": "YulTypedName",
														"src": "7302:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7312:9:7",
														"nodeType": "YulTypedName",
														"src": "7312:9:7",
														"type": ""
													}
												],
												"src": "7248:140:7"
											},
											{
												"body": {
													"nativeSrc": "7473:80:7",
													"nodeType": "YulBlock",
													"src": "7473:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7490:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7490:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7540:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7540:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$456_to_t_address",
																			"nativeSrc": "7495:44:7",
																			"nodeType": "YulIdentifier",
																			"src": "7495:44:7"
																		},
																		"nativeSrc": "7495:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7495:51:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7483:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7483:6:7"
																},
																"nativeSrc": "7483:64:7",
																"nodeType": "YulFunctionCall",
																"src": "7483:64:7"
															},
															"nativeSrc": "7483:64:7",
															"nodeType": "YulExpressionStatement",
															"src": "7483:64:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$456_to_t_address_fromStack",
												"nativeSrc": "7394:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7461:5:7",
														"nodeType": "YulTypedName",
														"src": "7461:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7468:3:7",
														"nodeType": "YulTypedName",
														"src": "7468:3:7",
														"type": ""
													}
												],
												"src": "7394:159:7"
											},
											{
												"body": {
													"nativeSrc": "7671:138:7",
													"nodeType": "YulBlock",
													"src": "7671:138:7",
													"statements": [
														{
															"nativeSrc": "7681:26:7",
															"nodeType": "YulAssignment",
															"src": "7681:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7693:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7693:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7704:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7704:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7689:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7689:3:7"
																},
																"nativeSrc": "7689:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7689:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7681:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7681:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7775:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7788:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7788:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7799:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7799:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7784:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7784:3:7"
																		},
																		"nativeSrc": "7784:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7784:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$456_to_t_address_fromStack",
																	"nativeSrc": "7717:57:7",
																	"nodeType": "YulIdentifier",
																	"src": "7717:57:7"
																},
																"nativeSrc": "7717:85:7",
																"nodeType": "YulFunctionCall",
																"src": "7717:85:7"
															},
															"nativeSrc": "7717:85:7",
															"nodeType": "YulExpressionStatement",
															"src": "7717:85:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$456__to_t_address__fromStack_reversed",
												"nativeSrc": "7559:250:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7643:9:7",
														"nodeType": "YulTypedName",
														"src": "7643:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7655:6:7",
														"nodeType": "YulTypedName",
														"src": "7655:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7666:4:7",
														"nodeType": "YulTypedName",
														"src": "7666:4:7",
														"type": ""
													}
												],
												"src": "7559:250:7"
											},
											{
												"body": {
													"nativeSrc": "7911:73:7",
													"nodeType": "YulBlock",
													"src": "7911:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7928:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7928:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7933:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7933:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7921:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7921:6:7"
																},
																"nativeSrc": "7921:19:7",
																"nodeType": "YulFunctionCall",
																"src": "7921:19:7"
															},
															"nativeSrc": "7921:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "7921:19:7"
														},
														{
															"nativeSrc": "7949:29:7",
															"nodeType": "YulAssignment",
															"src": "7949:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7968:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7968:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7973:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7973:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7964:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7964:3:7"
																},
																"nativeSrc": "7964:14:7",
																"nodeType": "YulFunctionCall",
																"src": "7964:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7949:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "7949:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7815:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7883:3:7",
														"nodeType": "YulTypedName",
														"src": "7883:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7888:6:7",
														"nodeType": "YulTypedName",
														"src": "7888:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7899:11:7",
														"nodeType": "YulTypedName",
														"src": "7899:11:7",
														"type": ""
													}
												],
												"src": "7815:169:7"
											},
											{
												"body": {
													"nativeSrc": "8096:59:7",
													"nodeType": "YulBlock",
													"src": "8096:59:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8118:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8118:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8126:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8126:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8114:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8114:3:7"
																		},
																		"nativeSrc": "8114:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8114:14:7"
																	},
																	{
																		"hexValue": "416c726561647920636c61696d6564",
																		"kind": "string",
																		"nativeSrc": "8130:17:7",
																		"nodeType": "YulLiteral",
																		"src": "8130:17:7",
																		"type": "",
																		"value": "Already claimed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8107:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8107:6:7"
																},
																"nativeSrc": "8107:41:7",
																"nodeType": "YulFunctionCall",
																"src": "8107:41:7"
															},
															"nativeSrc": "8107:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "8107:41:7"
														}
													]
												},
												"name": "store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
												"nativeSrc": "7990:165:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8088:6:7",
														"nodeType": "YulTypedName",
														"src": "8088:6:7",
														"type": ""
													}
												],
												"src": "7990:165:7"
											},
											{
												"body": {
													"nativeSrc": "8307:220:7",
													"nodeType": "YulBlock",
													"src": "8307:220:7",
													"statements": [
														{
															"nativeSrc": "8317:74:7",
															"nodeType": "YulAssignment",
															"src": "8317:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8383:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8383:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8388:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8388:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8324:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8324:58:7"
																},
																"nativeSrc": "8324:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8324:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8317:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8317:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8489:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8489:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																	"nativeSrc": "8400:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8400:88:7"
																},
																"nativeSrc": "8400:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8400:93:7"
															},
															"nativeSrc": "8400:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8400:93:7"
														},
														{
															"nativeSrc": "8502:19:7",
															"nodeType": "YulAssignment",
															"src": "8502:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8513:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8513:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8518:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8518:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8509:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8509:3:7"
																},
																"nativeSrc": "8509:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8509:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8502:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8502:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8161:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8295:3:7",
														"nodeType": "YulTypedName",
														"src": "8295:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8303:3:7",
														"nodeType": "YulTypedName",
														"src": "8303:3:7",
														"type": ""
													}
												],
												"src": "8161:366:7"
											},
											{
												"body": {
													"nativeSrc": "8704:248:7",
													"nodeType": "YulBlock",
													"src": "8704:248:7",
													"statements": [
														{
															"nativeSrc": "8714:26:7",
															"nodeType": "YulAssignment",
															"src": "8714:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8726:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8726:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8737:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8737:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8722:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8722:3:7"
																},
																"nativeSrc": "8722:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8722:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8714:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8714:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8761:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8761:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8772:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8772:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8757:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8757:3:7"
																		},
																		"nativeSrc": "8757:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8757:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8780:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8780:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8786:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8786:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8776:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8776:3:7"
																		},
																		"nativeSrc": "8776:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8776:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8750:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8750:6:7"
																},
																"nativeSrc": "8750:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8750:47:7"
															},
															"nativeSrc": "8750:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8750:47:7"
														},
														{
															"nativeSrc": "8806:139:7",
															"nodeType": "YulAssignment",
															"src": "8806:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8940:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8940:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8814:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8814:124:7"
																},
																"nativeSrc": "8814:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8814:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8806:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8806:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8533:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8684:9:7",
														"nodeType": "YulTypedName",
														"src": "8684:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8699:4:7",
														"nodeType": "YulTypedName",
														"src": "8699:4:7",
														"type": ""
													}
												],
												"src": "8533:419:7"
											},
											{
												"body": {
													"nativeSrc": "9064:58:7",
													"nodeType": "YulBlock",
													"src": "9064:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9086:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9086:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9094:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9094:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9082:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9082:3:7"
																		},
																		"nativeSrc": "9082:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9082:14:7"
																	},
																	{
																		"hexValue": "566f6c756d6520746f6f206c6f77",
																		"kind": "string",
																		"nativeSrc": "9098:16:7",
																		"nodeType": "YulLiteral",
																		"src": "9098:16:7",
																		"type": "",
																		"value": "Volume too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9075:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9075:6:7"
																},
																"nativeSrc": "9075:40:7",
																"nodeType": "YulFunctionCall",
																"src": "9075:40:7"
															},
															"nativeSrc": "9075:40:7",
															"nodeType": "YulExpressionStatement",
															"src": "9075:40:7"
														}
													]
												},
												"name": "store_literal_in_memory_884721f7543f42407f998851091c4cdedb565697d56dbe247775df5e0a094f53",
												"nativeSrc": "8958:164:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9056:6:7",
														"nodeType": "YulTypedName",
														"src": "9056:6:7",
														"type": ""
													}
												],
												"src": "8958:164:7"
											},
											{
												"body": {
													"nativeSrc": "9274:220:7",
													"nodeType": "YulBlock",
													"src": "9274:220:7",
													"statements": [
														{
															"nativeSrc": "9284:74:7",
															"nodeType": "YulAssignment",
															"src": "9284:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9350:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9350:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9355:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9355:2:7",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9291:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9291:58:7"
																},
																"nativeSrc": "9291:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9291:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9284:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9284:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9456:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9456:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_884721f7543f42407f998851091c4cdedb565697d56dbe247775df5e0a094f53",
																	"nativeSrc": "9367:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9367:88:7"
																},
																"nativeSrc": "9367:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9367:93:7"
															},
															"nativeSrc": "9367:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9367:93:7"
														},
														{
															"nativeSrc": "9469:19:7",
															"nodeType": "YulAssignment",
															"src": "9469:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9480:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9480:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9485:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9485:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9476:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9476:3:7"
																},
																"nativeSrc": "9476:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9476:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9469:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9469:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_884721f7543f42407f998851091c4cdedb565697d56dbe247775df5e0a094f53_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9128:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9262:3:7",
														"nodeType": "YulTypedName",
														"src": "9262:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9270:3:7",
														"nodeType": "YulTypedName",
														"src": "9270:3:7",
														"type": ""
													}
												],
												"src": "9128:366:7"
											},
											{
												"body": {
													"nativeSrc": "9671:248:7",
													"nodeType": "YulBlock",
													"src": "9671:248:7",
													"statements": [
														{
															"nativeSrc": "9681:26:7",
															"nodeType": "YulAssignment",
															"src": "9681:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9693:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9693:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9704:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9704:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9689:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9689:3:7"
																},
																"nativeSrc": "9689:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9689:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9681:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9681:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9728:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9728:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9739:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9739:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9724:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9724:3:7"
																		},
																		"nativeSrc": "9724:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9724:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9747:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9747:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9753:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9753:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9743:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9743:3:7"
																		},
																		"nativeSrc": "9743:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9743:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9717:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9717:6:7"
																},
																"nativeSrc": "9717:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9717:47:7"
															},
															"nativeSrc": "9717:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9717:47:7"
														},
														{
															"nativeSrc": "9773:139:7",
															"nodeType": "YulAssignment",
															"src": "9773:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9907:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9907:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_884721f7543f42407f998851091c4cdedb565697d56dbe247775df5e0a094f53_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9781:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "9781:124:7"
																},
																"nativeSrc": "9781:131:7",
																"nodeType": "YulFunctionCall",
																"src": "9781:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9773:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9773:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_884721f7543f42407f998851091c4cdedb565697d56dbe247775df5e0a094f53__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9500:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9651:9:7",
														"nodeType": "YulTypedName",
														"src": "9651:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9666:4:7",
														"nodeType": "YulTypedName",
														"src": "9666:4:7",
														"type": ""
													}
												],
												"src": "9500:419:7"
											},
											{
												"body": {
													"nativeSrc": "9953:152:7",
													"nodeType": "YulBlock",
													"src": "9953:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9970:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9970:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9973:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9973:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9963:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9963:6:7"
																},
																"nativeSrc": "9963:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9963:88:7"
															},
															"nativeSrc": "9963:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9963:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10067:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10067:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10070:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10070:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10060:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10060:6:7"
																},
																"nativeSrc": "10060:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10060:15:7"
															},
															"nativeSrc": "10060:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10060:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10091:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10091:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10094:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10094:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10084:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10084:6:7"
																},
																"nativeSrc": "10084:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10084:15:7"
															},
															"nativeSrc": "10084:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10084:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9925:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9925:180:7"
											},
											{
												"body": {
													"nativeSrc": "10159:362:7",
													"nodeType": "YulBlock",
													"src": "10159:362:7",
													"statements": [
														{
															"nativeSrc": "10169:25:7",
															"nodeType": "YulAssignment",
															"src": "10169:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10192:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10192:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10174:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10174:17:7"
																},
																"nativeSrc": "10174:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10174:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10169:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10169:1:7"
																}
															]
														},
														{
															"nativeSrc": "10203:25:7",
															"nodeType": "YulAssignment",
															"src": "10203:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10226:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10226:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10208:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10208:17:7"
																},
																"nativeSrc": "10208:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10208:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10203:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10203:1:7"
																}
															]
														},
														{
															"nativeSrc": "10237:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10237:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10260:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10260:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10263:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10263:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10256:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10256:3:7"
																},
																"nativeSrc": "10256:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10256:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10241:11:7",
																	"nodeType": "YulTypedName",
																	"src": "10241:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10274:41:7",
															"nodeType": "YulAssignment",
															"src": "10274:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10303:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "10303:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10285:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10285:17:7"
																},
																"nativeSrc": "10285:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10285:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10274:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "10274:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10492:22:7",
																"nodeType": "YulBlock",
																"src": "10492:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10494:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10494:16:7"
																			},
																			"nativeSrc": "10494:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10494:18:7"
																		},
																		"nativeSrc": "10494:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10494:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10425:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "10425:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10418:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "10418:6:7"
																				},
																				"nativeSrc": "10418:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10418:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10448:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "10448:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10455:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "10455:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10464:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "10464:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10451:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "10451:3:7"
																						},
																						"nativeSrc": "10451:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "10451:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10445:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "10445:2:7"
																				},
																				"nativeSrc": "10445:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10445:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10398:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10398:2:7"
																		},
																		"nativeSrc": "10398:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10398:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10378:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10378:6:7"
																},
																"nativeSrc": "10378:113:7",
																"nodeType": "YulFunctionCall",
																"src": "10378:113:7"
															},
															"nativeSrc": "10375:139:7",
															"nodeType": "YulIf",
															"src": "10375:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10111:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10142:1:7",
														"nodeType": "YulTypedName",
														"src": "10142:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10145:1:7",
														"nodeType": "YulTypedName",
														"src": "10145:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10151:7:7",
														"nodeType": "YulTypedName",
														"src": "10151:7:7",
														"type": ""
													}
												],
												"src": "10111:410:7"
											},
											{
												"body": {
													"nativeSrc": "10555:152:7",
													"nodeType": "YulBlock",
													"src": "10555:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10572:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10572:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10575:77:7",
																		"nodeType": "YulLiteral",
																		"src": "10575:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10565:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10565:6:7"
																},
																"nativeSrc": "10565:88:7",
																"nodeType": "YulFunctionCall",
																"src": "10565:88:7"
															},
															"nativeSrc": "10565:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "10565:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10669:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10669:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10672:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10672:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10662:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10662:6:7"
																},
																"nativeSrc": "10662:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10662:15:7"
															},
															"nativeSrc": "10662:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10662:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10693:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10693:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10696:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10696:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10686:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10686:6:7"
																},
																"nativeSrc": "10686:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10686:15:7"
															},
															"nativeSrc": "10686:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10686:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10527:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "10527:180:7"
											},
											{
												"body": {
													"nativeSrc": "10755:143:7",
													"nodeType": "YulBlock",
													"src": "10755:143:7",
													"statements": [
														{
															"nativeSrc": "10765:25:7",
															"nodeType": "YulAssignment",
															"src": "10765:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10788:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10788:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10770:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10770:17:7"
																},
																"nativeSrc": "10770:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10770:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10765:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10765:1:7"
																}
															]
														},
														{
															"nativeSrc": "10799:25:7",
															"nodeType": "YulAssignment",
															"src": "10799:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10822:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10822:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10804:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10804:17:7"
																},
																"nativeSrc": "10804:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10804:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10799:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10799:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10846:22:7",
																"nodeType": "YulBlock",
																"src": "10846:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10848:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10848:16:7"
																			},
																			"nativeSrc": "10848:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10848:18:7"
																		},
																		"nativeSrc": "10848:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10848:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10843:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10843:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10836:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10836:6:7"
																},
																"nativeSrc": "10836:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10836:9:7"
															},
															"nativeSrc": "10833:35:7",
															"nodeType": "YulIf",
															"src": "10833:35:7"
														},
														{
															"nativeSrc": "10878:14:7",
															"nodeType": "YulAssignment",
															"src": "10878:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10887:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10887:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10890:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10890:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10883:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10883:3:7"
																},
																"nativeSrc": "10883:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10883:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10878:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10878:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10713:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10744:1:7",
														"nodeType": "YulTypedName",
														"src": "10744:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10747:1:7",
														"nodeType": "YulTypedName",
														"src": "10747:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10753:1:7",
														"nodeType": "YulTypedName",
														"src": "10753:1:7",
														"type": ""
													}
												],
												"src": "10713:185:7"
											},
											{
												"body": {
													"nativeSrc": "10948:147:7",
													"nodeType": "YulBlock",
													"src": "10948:147:7",
													"statements": [
														{
															"nativeSrc": "10958:25:7",
															"nodeType": "YulAssignment",
															"src": "10958:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10981:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10981:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10963:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10963:17:7"
																},
																"nativeSrc": "10963:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10963:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10958:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10958:1:7"
																}
															]
														},
														{
															"nativeSrc": "10992:25:7",
															"nodeType": "YulAssignment",
															"src": "10992:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11015:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11015:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10997:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10997:17:7"
																},
																"nativeSrc": "10997:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10997:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10992:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10992:1:7"
																}
															]
														},
														{
															"nativeSrc": "11026:16:7",
															"nodeType": "YulAssignment",
															"src": "11026:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11037:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11037:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11040:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11040:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11033:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11033:3:7"
																},
																"nativeSrc": "11033:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11033:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11026:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11026:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11066:22:7",
																"nodeType": "YulBlock",
																"src": "11066:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11068:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11068:16:7"
																			},
																			"nativeSrc": "11068:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11068:18:7"
																		},
																		"nativeSrc": "11068:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11068:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11058:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11058:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11061:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11061:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11055:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11055:2:7"
																},
																"nativeSrc": "11055:10:7",
																"nodeType": "YulFunctionCall",
																"src": "11055:10:7"
															},
															"nativeSrc": "11052:36:7",
															"nodeType": "YulIf",
															"src": "11052:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10904:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10935:1:7",
														"nodeType": "YulTypedName",
														"src": "10935:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10938:1:7",
														"nodeType": "YulTypedName",
														"src": "10938:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10944:3:7",
														"nodeType": "YulTypedName",
														"src": "10944:3:7",
														"type": ""
													}
												],
												"src": "10904:191:7"
											},
											{
												"body": {
													"nativeSrc": "11146:149:7",
													"nodeType": "YulBlock",
													"src": "11146:149:7",
													"statements": [
														{
															"nativeSrc": "11156:25:7",
															"nodeType": "YulAssignment",
															"src": "11156:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11179:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11179:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11161:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11161:17:7"
																},
																"nativeSrc": "11161:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11161:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11156:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11156:1:7"
																}
															]
														},
														{
															"nativeSrc": "11190:25:7",
															"nodeType": "YulAssignment",
															"src": "11190:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11213:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11213:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11195:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11195:17:7"
																},
																"nativeSrc": "11195:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11195:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11190:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11190:1:7"
																}
															]
														},
														{
															"nativeSrc": "11224:17:7",
															"nodeType": "YulAssignment",
															"src": "11224:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11236:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11236:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11239:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11239:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11232:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11232:3:7"
																},
																"nativeSrc": "11232:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11232:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11224:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11224:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11266:22:7",
																"nodeType": "YulBlock",
																"src": "11266:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11268:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11268:16:7"
																			},
																			"nativeSrc": "11268:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11268:18:7"
																		},
																		"nativeSrc": "11268:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11268:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11257:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11257:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11263:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11263:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11254:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11254:2:7"
																},
																"nativeSrc": "11254:11:7",
																"nodeType": "YulFunctionCall",
																"src": "11254:11:7"
															},
															"nativeSrc": "11251:37:7",
															"nodeType": "YulIf",
															"src": "11251:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11101:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11132:1:7",
														"nodeType": "YulTypedName",
														"src": "11132:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11135:1:7",
														"nodeType": "YulTypedName",
														"src": "11135:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11141:4:7",
														"nodeType": "YulTypedName",
														"src": "11141:4:7",
														"type": ""
													}
												],
												"src": "11101:194:7"
											},
											{
												"body": {
													"nativeSrc": "11366:53:7",
													"nodeType": "YulBlock",
													"src": "11366:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11383:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11383:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11406:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "11406:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "11388:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "11388:17:7"
																		},
																		"nativeSrc": "11388:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11388:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11376:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11376:6:7"
																},
																"nativeSrc": "11376:37:7",
																"nodeType": "YulFunctionCall",
																"src": "11376:37:7"
															},
															"nativeSrc": "11376:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "11376:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "11301:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11354:5:7",
														"nodeType": "YulTypedName",
														"src": "11354:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11361:3:7",
														"nodeType": "YulTypedName",
														"src": "11361:3:7",
														"type": ""
													}
												],
												"src": "11301:118:7"
											},
											{
												"body": {
													"nativeSrc": "11551:206:7",
													"nodeType": "YulBlock",
													"src": "11551:206:7",
													"statements": [
														{
															"nativeSrc": "11561:26:7",
															"nodeType": "YulAssignment",
															"src": "11561:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11573:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11573:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11584:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11584:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11569:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11569:3:7"
																},
																"nativeSrc": "11569:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11569:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11561:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11561:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11641:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11641:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11654:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11654:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11665:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11665:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11650:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11650:3:7"
																		},
																		"nativeSrc": "11650:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11650:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11597:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11597:43:7"
																},
																"nativeSrc": "11597:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11597:71:7"
															},
															"nativeSrc": "11597:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11597:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11722:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11722:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11735:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11735:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11746:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11746:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11731:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11731:3:7"
																		},
																		"nativeSrc": "11731:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11731:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11678:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11678:43:7"
																},
																"nativeSrc": "11678:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11678:72:7"
															},
															"nativeSrc": "11678:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11678:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11425:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11515:9:7",
														"nodeType": "YulTypedName",
														"src": "11515:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11527:6:7",
														"nodeType": "YulTypedName",
														"src": "11527:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11535:6:7",
														"nodeType": "YulTypedName",
														"src": "11535:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11546:4:7",
														"nodeType": "YulTypedName",
														"src": "11546:4:7",
														"type": ""
													}
												],
												"src": "11425:332:7"
											},
											{
												"body": {
													"nativeSrc": "11803:76:7",
													"nodeType": "YulBlock",
													"src": "11803:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "11857:16:7",
																"nodeType": "YulBlock",
																"src": "11857:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11866:1:7",
																					"nodeType": "YulLiteral",
																					"src": "11866:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11869:1:7",
																					"nodeType": "YulLiteral",
																					"src": "11869:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11859:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11859:6:7"
																			},
																			"nativeSrc": "11859:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11859:12:7"
																		},
																		"nativeSrc": "11859:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11859:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11826:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "11826:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11848:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11848:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "11833:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "11833:14:7"
																				},
																				"nativeSrc": "11833:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11833:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11823:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "11823:2:7"
																		},
																		"nativeSrc": "11823:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11823:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11816:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11816:6:7"
																},
																"nativeSrc": "11816:40:7",
																"nodeType": "YulFunctionCall",
																"src": "11816:40:7"
															},
															"nativeSrc": "11813:60:7",
															"nodeType": "YulIf",
															"src": "11813:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "11763:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11796:5:7",
														"nodeType": "YulTypedName",
														"src": "11796:5:7",
														"type": ""
													}
												],
												"src": "11763:116:7"
											},
											{
												"body": {
													"nativeSrc": "11945:77:7",
													"nodeType": "YulBlock",
													"src": "11945:77:7",
													"statements": [
														{
															"nativeSrc": "11955:22:7",
															"nodeType": "YulAssignment",
															"src": "11955:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11970:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11970:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11964:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11964:5:7"
																},
																"nativeSrc": "11964:13:7",
																"nodeType": "YulFunctionCall",
																"src": "11964:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11955:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11955:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12010:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "12010:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11986:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "11986:23:7"
																},
																"nativeSrc": "11986:30:7",
																"nodeType": "YulFunctionCall",
																"src": "11986:30:7"
															},
															"nativeSrc": "11986:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "11986:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "11885:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11923:6:7",
														"nodeType": "YulTypedName",
														"src": "11923:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11931:3:7",
														"nodeType": "YulTypedName",
														"src": "11931:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11939:5:7",
														"nodeType": "YulTypedName",
														"src": "11939:5:7",
														"type": ""
													}
												],
												"src": "11885:137:7"
											},
											{
												"body": {
													"nativeSrc": "12102:271:7",
													"nodeType": "YulBlock",
													"src": "12102:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "12148:83:7",
																"nodeType": "YulBlock",
																"src": "12148:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12150:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "12150:77:7"
																			},
																			"nativeSrc": "12150:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12150:79:7"
																		},
																		"nativeSrc": "12150:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12150:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12123:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12123:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12132:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12132:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12119:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12119:3:7"
																		},
																		"nativeSrc": "12119:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12119:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12144:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12144:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12115:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12115:3:7"
																},
																"nativeSrc": "12115:32:7",
																"nodeType": "YulFunctionCall",
																"src": "12115:32:7"
															},
															"nativeSrc": "12112:119:7",
															"nodeType": "YulIf",
															"src": "12112:119:7"
														},
														{
															"nativeSrc": "12241:125:7",
															"nodeType": "YulBlock",
															"src": "12241:125:7",
															"statements": [
																{
																	"nativeSrc": "12256:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12256:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12270:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12270:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12260:6:7",
																			"nodeType": "YulTypedName",
																			"src": "12260:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12285:71:7",
																	"nodeType": "YulAssignment",
																	"src": "12285:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12328:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "12328:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12339:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "12339:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12324:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12324:3:7"
																				},
																				"nativeSrc": "12324:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12324:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12348:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12348:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12295:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "12295:28:7"
																		},
																		"nativeSrc": "12295:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12295:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12285:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "12285:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12028:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12072:9:7",
														"nodeType": "YulTypedName",
														"src": "12072:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12083:7:7",
														"nodeType": "YulTypedName",
														"src": "12083:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12095:6:7",
														"nodeType": "YulTypedName",
														"src": "12095:6:7",
														"type": ""
													}
												],
												"src": "12028:345:7"
											},
											{
												"body": {
													"nativeSrc": "12533:288:7",
													"nodeType": "YulBlock",
													"src": "12533:288:7",
													"statements": [
														{
															"nativeSrc": "12543:26:7",
															"nodeType": "YulAssignment",
															"src": "12543:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12555:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12555:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12566:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12566:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12551:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12551:3:7"
																},
																"nativeSrc": "12551:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12551:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12543:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12543:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12623:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12623:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12636:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12636:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12647:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12647:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12632:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12632:3:7"
																		},
																		"nativeSrc": "12632:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12632:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12579:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12579:43:7"
																},
																"nativeSrc": "12579:71:7",
																"nodeType": "YulFunctionCall",
																"src": "12579:71:7"
															},
															"nativeSrc": "12579:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "12579:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12704:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12704:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12717:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12717:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12728:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12728:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12713:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12713:3:7"
																		},
																		"nativeSrc": "12713:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12713:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12660:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12660:43:7"
																},
																"nativeSrc": "12660:72:7",
																"nodeType": "YulFunctionCall",
																"src": "12660:72:7"
															},
															"nativeSrc": "12660:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "12660:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12786:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12786:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12799:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12799:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12810:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12810:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12795:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12795:3:7"
																		},
																		"nativeSrc": "12795:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12795:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12742:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12742:43:7"
																},
																"nativeSrc": "12742:72:7",
																"nodeType": "YulFunctionCall",
																"src": "12742:72:7"
															},
															"nativeSrc": "12742:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "12742:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12379:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12489:9:7",
														"nodeType": "YulTypedName",
														"src": "12489:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12501:6:7",
														"nodeType": "YulTypedName",
														"src": "12501:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12509:6:7",
														"nodeType": "YulTypedName",
														"src": "12509:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12517:6:7",
														"nodeType": "YulTypedName",
														"src": "12517:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12528:4:7",
														"nodeType": "YulTypedName",
														"src": "12528:4:7",
														"type": ""
													}
												],
												"src": "12379:442:7"
											},
											{
												"body": {
													"nativeSrc": "12981:288:7",
													"nodeType": "YulBlock",
													"src": "12981:288:7",
													"statements": [
														{
															"nativeSrc": "12991:26:7",
															"nodeType": "YulAssignment",
															"src": "12991:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13003:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13003:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13014:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13014:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12999:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12999:3:7"
																},
																"nativeSrc": "12999:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12999:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12991:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12991:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13071:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13071:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13084:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13084:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13095:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13095:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13080:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13080:3:7"
																		},
																		"nativeSrc": "13080:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13080:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13027:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13027:43:7"
																},
																"nativeSrc": "13027:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13027:71:7"
															},
															"nativeSrc": "13027:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13027:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13152:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13152:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13165:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13165:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13176:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13176:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13161:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13161:3:7"
																		},
																		"nativeSrc": "13161:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13161:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13108:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13108:43:7"
																},
																"nativeSrc": "13108:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13108:72:7"
															},
															"nativeSrc": "13108:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13108:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13234:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13234:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13247:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13247:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13258:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13258:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13243:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13243:3:7"
																		},
																		"nativeSrc": "13243:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13243:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13190:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13190:43:7"
																},
																"nativeSrc": "13190:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13190:72:7"
															},
															"nativeSrc": "13190:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13190:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12827:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12937:9:7",
														"nodeType": "YulTypedName",
														"src": "12937:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12949:6:7",
														"nodeType": "YulTypedName",
														"src": "12949:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12957:6:7",
														"nodeType": "YulTypedName",
														"src": "12957:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12965:6:7",
														"nodeType": "YulTypedName",
														"src": "12965:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12976:4:7",
														"nodeType": "YulTypedName",
														"src": "12976:4:7",
														"type": ""
													}
												],
												"src": "12827:442:7"
											},
											{
												"body": {
													"nativeSrc": "13410:215:7",
													"nodeType": "YulBlock",
													"src": "13410:215:7",
													"statements": [
														{
															"nativeSrc": "13420:26:7",
															"nodeType": "YulAssignment",
															"src": "13420:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13432:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13432:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13443:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13443:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13428:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13428:3:7"
																},
																"nativeSrc": "13428:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13428:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13420:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13420:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13500:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13500:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13513:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13513:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13524:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13524:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13509:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13509:3:7"
																		},
																		"nativeSrc": "13509:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13509:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13456:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13456:43:7"
																},
																"nativeSrc": "13456:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13456:71:7"
															},
															"nativeSrc": "13456:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13456:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13590:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13590:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13603:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13603:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13614:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13614:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13599:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13599:3:7"
																		},
																		"nativeSrc": "13599:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13599:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_FeeTier_$567_to_t_uint8_fromStack",
																	"nativeSrc": "13537:52:7",
																	"nodeType": "YulIdentifier",
																	"src": "13537:52:7"
																},
																"nativeSrc": "13537:81:7",
																"nodeType": "YulFunctionCall",
																"src": "13537:81:7"
															},
															"nativeSrc": "13537:81:7",
															"nodeType": "YulExpressionStatement",
															"src": "13537:81:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_enum$_FeeTier_$567__to_t_uint256_t_uint8__fromStack_reversed",
												"nativeSrc": "13275:350:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13374:9:7",
														"nodeType": "YulTypedName",
														"src": "13374:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13386:6:7",
														"nodeType": "YulTypedName",
														"src": "13386:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13394:6:7",
														"nodeType": "YulTypedName",
														"src": "13394:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13405:4:7",
														"nodeType": "YulTypedName",
														"src": "13405:4:7",
														"type": ""
													}
												],
												"src": "13275:350:7"
											},
											{
												"body": {
													"nativeSrc": "13757:206:7",
													"nodeType": "YulBlock",
													"src": "13757:206:7",
													"statements": [
														{
															"nativeSrc": "13767:26:7",
															"nodeType": "YulAssignment",
															"src": "13767:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13779:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13779:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13790:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13790:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13775:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13775:3:7"
																},
																"nativeSrc": "13775:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13775:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13767:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13767:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13847:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13847:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13860:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13860:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13871:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13871:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13856:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13856:3:7"
																		},
																		"nativeSrc": "13856:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13856:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13803:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13803:43:7"
																},
																"nativeSrc": "13803:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13803:71:7"
															},
															"nativeSrc": "13803:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13803:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13928:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13928:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13941:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13941:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13952:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13952:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13937:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13937:3:7"
																		},
																		"nativeSrc": "13937:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13937:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "13884:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13884:43:7"
																},
																"nativeSrc": "13884:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13884:72:7"
															},
															"nativeSrc": "13884:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13884:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "13631:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13721:9:7",
														"nodeType": "YulTypedName",
														"src": "13721:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13733:6:7",
														"nodeType": "YulTypedName",
														"src": "13733:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13741:6:7",
														"nodeType": "YulTypedName",
														"src": "13741:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13752:4:7",
														"nodeType": "YulTypedName",
														"src": "13752:4:7",
														"type": ""
													}
												],
												"src": "13631:332:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_FeeTier_$567(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_FeeTier_$567(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_FeeTier_$567(value)\n    }\n\n    function convert_t_enum$_FeeTier_$567_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_FeeTier_$567(value)\n    }\n\n    function abi_encode_t_enum$_FeeTier_$567_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_FeeTier_$567_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_enum$_FeeTier_$567_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint8_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_enum$_FeeTier_$567_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$456_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$456_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$456_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$456__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$456_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_884721f7543f42407f998851091c4cdedb565697d56dbe247775df5e0a094f53(memPtr) {\n\n        mstore(add(memPtr, 0), \"Volume too low\")\n\n    }\n\n    function abi_encode_t_stringliteral_884721f7543f42407f998851091c4cdedb565697d56dbe247775df5e0a094f53_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_884721f7543f42407f998851091c4cdedb565697d56dbe247775df5e0a094f53(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_884721f7543f42407f998851091c4cdedb565697d56dbe247775df5e0a094f53__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_884721f7543f42407f998851091c4cdedb565697d56dbe247775df5e0a094f53_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_FeeTier_$567__to_t_uint256_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_FeeTier_$567_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610114575f3560e01c8063a87430ba116100a0578063d547741f1161006f578063d547741f146102e2578063d699b9d9146102fe578063efca2eed1461031c578063f5492e2f1461033a578063fc0c546a1461036d57610114565b8063a87430ba14610258578063a969ccef1461028c578063af0fe497146102a8578063ccc57490146102c457610114565b806376671808116100e757806376671808146101b05780638209ce30146101ce57806391d14854146101ec578063a217fddf1461021c578063a344c4991461023a57610114565b806301ffc9a714610118578063248a9ca3146101485780632f2ff15d1461017857806336568abe14610194575b5f5ffd5b610132600480360381019061012d9190610f40565b61038b565b60405161013f9190610f85565b60405180910390f35b610162600480360381019061015d9190610fd1565b610404565b60405161016f919061100b565b60405180910390f35b610192600480360381019061018d919061107e565b610420565b005b6101ae60048036038101906101a9919061107e565b610442565b005b6101b86104bd565b6040516101c591906110d4565b60405180910390f35b6101d66104c3565b6040516101e391906110d4565b60405180910390f35b6102066004803603810190610201919061107e565b6104c9565b6040516102139190610f85565b60405180910390f35b61022461052c565b604051610231919061100b565b60405180910390f35b610242610532565b60405161024f91906110d4565b60405180910390f35b610272600480360381019061026d91906110ed565b610538565b60405161028395949392919061118b565b60405180910390f35b6102a660048036038101906102a19190611206565b610582565b005b6102c260048036038101906102bd9190611206565b6108c9565b005b6102cc610a5d565b6040516102d9919061100b565b60405180910390f35b6102fc60048036038101906102f7919061107e565b610a81565b005b610306610aa3565b60405161031391906110d4565b60405180910390f35b610324610aa9565b60405161033191906110d4565b60405180910390f35b610354600480360381019061034f91906110ed565b610aaf565b6040516103649493929190611231565b60405180910390f35b610375610adb565b60405161038291906112cf565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103fd57506103fc82610b00565b5b9050919050565b5f5f5f8381526020019081526020015f20600101549050919050565b61042982610404565b61043281610b69565b61043c8383610b7d565b50505050565b61044a610c66565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104ae576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104b88282610c6d565b505050565b60025481565b60045481565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f5f1b81565b60065481565b6007602052805f5260405f205f91509050805f015490806001015490806002015f9054906101000a900460ff1690806003015490806004015f9054906101000a900460ff16905085565b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905060025481600301541061060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060190611342565b60405180910390fd5b60045482101561064f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610646906113aa565b60405180910390fd5b81815f018190555060025481600301819055505f620f42406003548461067591906113f5565b61067f9190611463565b90505f606461069d846002015f9054906101000a900460ff16610d56565b836106a891906113f5565b6106b29190611463565b90508060055f8282546106c59190611493565b925050819055505f60646019836106dc91906113f5565b6106e69190611463565b90505f81836106f591906114c6565b905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610753929190611508565b6020604051808303815f875af115801561076f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107939190611559565b503373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe836040516107da91906110d4565b60405180910390a25f8111156108c1575f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f81600201540361084c57600254816002018190555060065481600301819055505b81815f015f82825461085e9190611493565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fcacf4a6e7c897ead5577524d96f0debb59ccd5bd3465d42cd2a958e2defb0b9483836002015484600301546040516108b793929190611584565b60405180910390a2505b505050505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610927939291906115b9565b6020604051808303815f875af1158015610943573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109679190611559565b505f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905081816001015f8282546109bb9190611493565b925050819055506109cf8160010154610e35565b816002015f6101000a81548160ff021916908360048111156109f4576109f3611118565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff167fe42710261dccb691e79e3f3e24a2b8cc0e13b9bec7be82a445c6a6992474ea4483836002015f9054906101000a900460ff16604051610a519291906115ee565b60405180910390a25050565b7f7935bd0ae54bc31f548c14dba4d37c5c64b3f8ca900cb468fb8abd54d5894f5581565b610a8a82610404565b610a9381610b69565b610a9d8383610c6d565b50505050565b60035481565b60055481565b6008602052805f5260405f205f91509050805f0154908060010154908060020154908060030154905084565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610b7a81610b75610c66565b610e96565b50565b5f610b8883836104c9565b610c5c5760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bf9610c66565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610c60565b5f90505b92915050565b5f33905090565b5f610c7883836104c9565b15610d4c575f5f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610ce9610c66565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610d50565b5f90505b92915050565b5f60016004811115610d6b57610d6a611118565b5b826004811115610d7e57610d7d611118565b5b03610d8c57607d9050610e30565b60026004811115610da057610d9f611118565b5b826004811115610db357610db2611118565b5b03610dc15760969050610e30565b60036004811115610dd557610dd4611118565b5b826004811115610de857610de7611118565b5b03610df65760c89050610e30565b600480811115610e0957610e08611118565b5b826004811115610e1c57610e1b611118565b5b03610e2b5761012c9050610e30565b606490505b919050565b5f633b9aca00821015610e4a575f9050610e91565b6402540be400821015610e605760019050610e91565b640ba43b7400821015610e765760029050610e91565b64174876e800821015610e8c5760039050610e91565b600490505b919050565b610ea082826104c9565b610ee35780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610eda929190611615565b60405180910390fd5b5050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f1f81610eeb565b8114610f29575f5ffd5b50565b5f81359050610f3a81610f16565b92915050565b5f60208284031215610f5557610f54610ee7565b5b5f610f6284828501610f2c565b91505092915050565b5f8115159050919050565b610f7f81610f6b565b82525050565b5f602082019050610f985f830184610f76565b92915050565b5f819050919050565b610fb081610f9e565b8114610fba575f5ffd5b50565b5f81359050610fcb81610fa7565b92915050565b5f60208284031215610fe657610fe5610ee7565b5b5f610ff384828501610fbd565b91505092915050565b61100581610f9e565b82525050565b5f60208201905061101e5f830184610ffc565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61104d82611024565b9050919050565b61105d81611043565b8114611067575f5ffd5b50565b5f8135905061107881611054565b92915050565b5f5f6040838503121561109457611093610ee7565b5b5f6110a185828601610fbd565b92505060206110b28582860161106a565b9150509250929050565b5f819050919050565b6110ce816110bc565b82525050565b5f6020820190506110e75f8301846110c5565b92915050565b5f6020828403121561110257611101610ee7565b5b5f61110f8482850161106a565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6005811061115657611155611118565b5b50565b5f81905061116682611145565b919050565b5f61117582611159565b9050919050565b6111858161116b565b82525050565b5f60a08201905061119e5f8301886110c5565b6111ab60208301876110c5565b6111b8604083018661117c565b6111c560608301856110c5565b6111d26080830184610f76565b9695505050505050565b6111e5816110bc565b81146111ef575f5ffd5b50565b5f81359050611200816111dc565b92915050565b5f6020828403121561121b5761121a610ee7565b5b5f611228848285016111f2565b91505092915050565b5f6080820190506112445f8301876110c5565b61125160208301866110c5565b61125e60408301856110c5565b61126b60608301846110c5565b95945050505050565b5f819050919050565b5f61129761129261128d84611024565b611274565b611024565b9050919050565b5f6112a88261127d565b9050919050565b5f6112b98261129e565b9050919050565b6112c9816112af565b82525050565b5f6020820190506112e25f8301846112c0565b92915050565b5f82825260208201905092915050565b7f416c726561647920636c61696d656400000000000000000000000000000000005f82015250565b5f61132c600f836112e8565b9150611337826112f8565b602082019050919050565b5f6020820190508181035f83015261135981611320565b9050919050565b7f566f6c756d6520746f6f206c6f770000000000000000000000000000000000005f82015250565b5f611394600e836112e8565b915061139f82611360565b602082019050919050565b5f6020820190508181035f8301526113c181611388565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6113ff826110bc565b915061140a836110bc565b9250828202611418816110bc565b9150828204841483151761142f5761142e6113c8565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61146d826110bc565b9150611478836110bc565b92508261148857611487611436565b5b828204905092915050565b5f61149d826110bc565b91506114a8836110bc565b92508282019050808211156114c0576114bf6113c8565b5b92915050565b5f6114d0826110bc565b91506114db836110bc565b92508282039050818111156114f3576114f26113c8565b5b92915050565b61150281611043565b82525050565b5f60408201905061151b5f8301856114f9565b61152860208301846110c5565b9392505050565b61153881610f6b565b8114611542575f5ffd5b50565b5f815190506115538161152f565b92915050565b5f6020828403121561156e5761156d610ee7565b5b5f61157b84828501611545565b91505092915050565b5f6060820190506115975f8301866110c5565b6115a460208301856110c5565b6115b160408301846110c5565b949350505050565b5f6060820190506115cc5f8301866114f9565b6115d960208301856114f9565b6115e660408301846110c5565b949350505050565b5f6040820190506116015f8301856110c5565b61160e602083018461117c565b9392505050565b5f6040820190506116285f8301856114f9565b6116356020830184610ffc565b939250505056fea26469706673582212203831c6b534c6dc204132780bdb012eaac3cfbaaa583a155da4a98b406fa2049c64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA87430BA GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xD699B9D9 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xEFCA2EED EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xF5492E2F EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x36D JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0xA87430BA EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xA969CCEF EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xAF0FE497 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xCCC57490 EQ PUSH2 0x2C4 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x76671808 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x76671808 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x8209CE30 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xA344C499 EQ PUSH2 0x23A JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x194 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x107E JUMP JUMPDEST PUSH2 0x420 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x107E JUMP JUMPDEST PUSH2 0x442 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x107E JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x118B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x107E JUMP JUMPDEST PUSH2 0xA81 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x306 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x10ED JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3FD JUMPI POP PUSH2 0x3FC DUP3 PUSH2 0xB00 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x429 DUP3 PUSH2 0x404 JUMP JUMPDEST PUSH2 0x432 DUP2 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x43C DUP4 DUP4 PUSH2 0xB7D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x44A PUSH2 0xC66 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4B8 DUP3 DUP3 PUSH2 0xC6D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0x2 SLOAD DUP2 PUSH1 0x3 ADD SLOAD LT PUSH2 0x60A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x601 SWAP1 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP3 LT ISZERO PUSH2 0x64F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x646 SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH3 0xF4240 PUSH1 0x3 SLOAD DUP5 PUSH2 0x675 SWAP2 SWAP1 PUSH2 0x13F5 JUMP JUMPDEST PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x1463 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH2 0x69D DUP5 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD56 JUMP JUMPDEST DUP4 PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0x13F5 JUMP JUMPDEST PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x1463 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x64 PUSH1 0x19 DUP4 PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0x13F5 JUMP JUMPDEST PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0x1463 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x753 SWAP3 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x76F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x793 SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE DUP4 PUSH1 0x40 MLOAD PUSH2 0x7DA SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 GT ISZERO PUSH2 0x8C1 JUMPI PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SUB PUSH2 0x84C JUMPI PUSH1 0x2 SLOAD DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCACF4A6E7C897EAD5577524D96F0DEBB59CCD5BD3465D42CD2A958E2DEFB0B94 DUP4 DUP4 PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x8B7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x927 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x943 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x967 SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST POP PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9BB SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9CF DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0xE35 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9F4 JUMPI PUSH2 0x9F3 PUSH2 0x1118 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE42710261DCCB691E79E3F3E24A2B8CC0E13B9BEC7BE82A445C6A6992474EA44 DUP4 DUP4 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0xA51 SWAP3 SWAP2 SWAP1 PUSH2 0x15EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x7935BD0AE54BC31F548C14DBA4D37C5C64B3F8CA900CB468FB8ABD54D5894F55 DUP2 JUMP JUMPDEST PUSH2 0xA8A DUP3 PUSH2 0x404 JUMP JUMPDEST PUSH2 0xA93 DUP2 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0xA9D DUP4 DUP4 PUSH2 0xC6D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7A DUP2 PUSH2 0xB75 PUSH2 0xC66 JUMP JUMPDEST PUSH2 0xE96 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xB88 DUP4 DUP4 PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0xC5C JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBF9 PUSH2 0xC66 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC60 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xC78 DUP4 DUP4 PUSH2 0x4C9 JUMP JUMPDEST ISZERO PUSH2 0xD4C JUMPI PUSH0 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCE9 PUSH2 0xC66 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xD50 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD6B JUMPI PUSH2 0xD6A PUSH2 0x1118 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD7E JUMPI PUSH2 0xD7D PUSH2 0x1118 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xD8C JUMPI PUSH1 0x7D SWAP1 POP PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDA0 JUMPI PUSH2 0xD9F PUSH2 0x1118 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDB3 JUMPI PUSH2 0xDB2 PUSH2 0x1118 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xDC1 JUMPI PUSH1 0x96 SWAP1 POP PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDD5 JUMPI PUSH2 0xDD4 PUSH2 0x1118 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDE8 JUMPI PUSH2 0xDE7 PUSH2 0x1118 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xDF6 JUMPI PUSH1 0xC8 SWAP1 POP PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0xE09 JUMPI PUSH2 0xE08 PUSH2 0x1118 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE1C JUMPI PUSH2 0xE1B PUSH2 0x1118 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xE2B JUMPI PUSH2 0x12C SWAP1 POP PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x64 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH4 0x3B9ACA00 DUP3 LT ISZERO PUSH2 0xE4A JUMPI PUSH0 SWAP1 POP PUSH2 0xE91 JUMP JUMPDEST PUSH5 0x2540BE400 DUP3 LT ISZERO PUSH2 0xE60 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xE91 JUMP JUMPDEST PUSH5 0xBA43B7400 DUP3 LT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x2 SWAP1 POP PUSH2 0xE91 JUMP JUMPDEST PUSH5 0x174876E800 DUP3 LT ISZERO PUSH2 0xE8C JUMPI PUSH1 0x3 SWAP1 POP PUSH2 0xE91 JUMP JUMPDEST PUSH1 0x4 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEA0 DUP3 DUP3 PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0xEE3 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDA SWAP3 SWAP2 SWAP1 PUSH2 0x1615 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF1F DUP2 PUSH2 0xEEB JUMP JUMPDEST DUP2 EQ PUSH2 0xF29 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF3A DUP2 PUSH2 0xF16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF55 JUMPI PUSH2 0xF54 PUSH2 0xEE7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF62 DUP5 DUP3 DUP6 ADD PUSH2 0xF2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF7F DUP2 PUSH2 0xF6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF98 PUSH0 DUP4 ADD DUP5 PUSH2 0xF76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB0 DUP2 PUSH2 0xF9E JUMP JUMPDEST DUP2 EQ PUSH2 0xFBA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFCB DUP2 PUSH2 0xFA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE6 JUMPI PUSH2 0xFE5 PUSH2 0xEE7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFF3 DUP5 DUP3 DUP6 ADD PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1005 DUP2 PUSH2 0xF9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x101E PUSH0 DUP4 ADD DUP5 PUSH2 0xFFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x104D DUP3 PUSH2 0x1024 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105D DUP2 PUSH2 0x1043 JUMP JUMPDEST DUP2 EQ PUSH2 0x1067 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1078 DUP2 PUSH2 0x1054 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1094 JUMPI PUSH2 0x1093 PUSH2 0xEE7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10A1 DUP6 DUP3 DUP7 ADD PUSH2 0xFBD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10B2 DUP6 DUP3 DUP7 ADD PUSH2 0x106A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CE DUP2 PUSH2 0x10BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1102 JUMPI PUSH2 0x1101 PUSH2 0xEE7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x110F DUP5 DUP3 DUP6 ADD PUSH2 0x106A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1156 JUMPI PUSH2 0x1155 PUSH2 0x1118 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x1166 DUP3 PUSH2 0x1145 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1175 DUP3 PUSH2 0x1159 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1185 DUP2 PUSH2 0x116B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x119E PUSH0 DUP4 ADD DUP9 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x11AB PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x11B8 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x117C JUMP JUMPDEST PUSH2 0x11C5 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x11D2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xF76 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x11E5 DUP2 PUSH2 0x10BC JUMP JUMPDEST DUP2 EQ PUSH2 0x11EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1200 DUP2 PUSH2 0x11DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121B JUMPI PUSH2 0x121A PUSH2 0xEE7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1228 DUP5 DUP3 DUP6 ADD PUSH2 0x11F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1244 PUSH0 DUP4 ADD DUP8 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x1251 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x125E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x126B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1297 PUSH2 0x1292 PUSH2 0x128D DUP5 PUSH2 0x1024 JUMP JUMPDEST PUSH2 0x1274 JUMP JUMPDEST PUSH2 0x1024 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12A8 DUP3 PUSH2 0x127D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12B9 DUP3 PUSH2 0x129E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12C9 DUP2 PUSH2 0x12AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12E2 PUSH0 DUP4 ADD DUP5 PUSH2 0x12C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x132C PUSH1 0xF DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1337 DUP3 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1359 DUP2 PUSH2 0x1320 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x566F6C756D6520746F6F206C6F77000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1394 PUSH1 0xE DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x139F DUP3 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13C1 DUP2 PUSH2 0x1388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x13FF DUP3 PUSH2 0x10BC JUMP JUMPDEST SWAP2 POP PUSH2 0x140A DUP4 PUSH2 0x10BC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1418 DUP2 PUSH2 0x10BC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x142F JUMPI PUSH2 0x142E PUSH2 0x13C8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x146D DUP3 PUSH2 0x10BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1478 DUP4 PUSH2 0x10BC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x1436 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x149D DUP3 PUSH2 0x10BC JUMP JUMPDEST SWAP2 POP PUSH2 0x14A8 DUP4 PUSH2 0x10BC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14C0 JUMPI PUSH2 0x14BF PUSH2 0x13C8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14D0 DUP3 PUSH2 0x10BC JUMP JUMPDEST SWAP2 POP PUSH2 0x14DB DUP4 PUSH2 0x10BC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x14F3 JUMPI PUSH2 0x14F2 PUSH2 0x13C8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1502 DUP2 PUSH2 0x1043 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x151B PUSH0 DUP4 ADD DUP6 PUSH2 0x14F9 JUMP JUMPDEST PUSH2 0x1528 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1538 DUP2 PUSH2 0xF6B JUMP JUMPDEST DUP2 EQ PUSH2 0x1542 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1553 DUP2 PUSH2 0x152F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x156E JUMPI PUSH2 0x156D PUSH2 0xEE7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x157B DUP5 DUP3 DUP6 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1597 PUSH0 DUP4 ADD DUP7 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x15A4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x15B1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15CC PUSH0 DUP4 ADD DUP7 PUSH2 0x14F9 JUMP JUMPDEST PUSH2 0x15D9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14F9 JUMP JUMPDEST PUSH2 0x15E6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1601 PUSH0 DUP4 ADD DUP6 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x160E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x117C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1628 PUSH0 DUP4 ADD DUP6 PUSH2 0x14F9 JUMP JUMPDEST PUSH2 0x1635 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFFC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE BALANCE 0xC6 0xB5 CALLVALUE 0xC6 0xDC KECCAK256 COINBASE ORIGIN PUSH25 0xBDB012EAAC3CFBAAA583A155DA4A98B406FA2049C64736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "412:5752:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;722:31:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;937:45;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1141:39:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2034:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;4062:1119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3529:303;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;611:66;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;823:40:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1038:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2122:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;526:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;3810:120::-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;722:31:6:-;;;;:::o;937:45::-;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2187:49::-;2232:4;2187:49;;;:::o;1141:39:6:-;;;;:::o;2034:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4062:1119::-;4116:18;4137:5;:17;4143:10;4137:17;;;;;;;;;;;;;;;4116:38;;4191:12;;4172:1;:16;;;:31;4164:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;4251:18;;4241:6;:28;;4233:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;4315:6;4299:1;:13;;:22;;;;4350:12;;4331:1;:16;;:31;;;;4373:18;4427:3;4404:19;;4395:6;:28;;;;:::i;:::-;4394:36;;;;:::i;:::-;4373:57;;4440:14;4503:3;4471:28;4492:1;:6;;;;;;;;;;;;4471:20;:28::i;:::-;4458:10;:41;;;;:::i;:::-;4457:49;;;;:::i;:::-;4440:66;;4536:6;4516:16;;:26;;;;;;;:::i;:::-;;;;;;;;4553:17;4589:3;4583:2;4574:6;:11;;;;:::i;:::-;4573:19;;;;:::i;:::-;4553:39;;4602:18;4632:9;4623:6;:18;;;;:::i;:::-;4602:39;;4680:5;;;;;;;;;;;:14;;;4695:10;4707:9;4680:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4747:10;4732:37;;;4759:9;4732:37;;;;;;:::i;:::-;;;;;;;;4823:1;4810:10;:14;4806:369;;;4840:22;4865:13;:25;4879:10;4865:25;;;;;;;;;;;;;;;4840:50;;4924:1;4908;:12;;;:17;4904:139;;4960:12;;4945:1;:12;;:27;;;;5008:20;;4990:1;:15;;:38;;;;4904:139;5067:10;5056:1;:7;;;:21;;;;;;;:::i;:::-;;;;;;;;5110:10;5096:68;;;5122:10;5134:1;:12;;;5148:1;:15;;;5096:68;;;;;;;;:::i;:::-;;;;;;;;4826:349;4806:369;4106:1075;;;;;4062:1119;:::o;3529:303::-;3583:5;;;;;;;;;;;:18;;;3602:10;3622:4;3629:6;3583:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3646:18;3667:5;:17;3673:10;3667:17;;;;;;;;;;;;;;;3646:38;;3712:6;3694:1;:14;;;:24;;;;;;;:::i;:::-;;;;;;;;3737:33;3755:1;:14;;;3737:17;:33::i;:::-;3728:1;:6;;;:42;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3798:10;3785:40;;;3810:6;3818:1;:6;;;;;;;;;;;;3785:40;;;;;;;:::i;:::-;;;;;;;;3573:259;3529:303;:::o;611:66::-;651:26;611:66;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;823:40:6:-;;;;:::o;1038:31::-;;;;:::o;2122:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;526:19::-;;;;;;;;;;;;;:::o;763:146:4:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;6732:317:0:-;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:6;:12;6875:4;6868:12;;;;;;;;;;;:20;;:29;6889:7;6868:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6951:12;:10;:12::i;:::-;6924:40;;6942:7;6924:40;;6936:4;6924:40;;;;;;;;;;6985:4;6978:11;;;;6826:217;7027:5;7020:12;;6732:317;;;;;:::o;5864:298:6:-;5928:7;5956:14;5951:19;;;;;;;;:::i;:::-;;:1;:19;;;;;;;;:::i;:::-;;;5947:37;;5981:3;5974:10;;;;5947:37;6003:12;5998:17;;;;;;;;:::i;:::-;;:1;:17;;;;;;;;:::i;:::-;;;5994:37;;6028:3;6021:10;;;;5994:37;6050:16;6045:21;;;;;;;;:::i;:::-;;:1;:21;;;;;;;;:::i;:::-;;;6041:37;;6075:3;6068:10;;;;6041:37;6097:15;6092:20;;;;;;;;:::i;:::-;;:1;:20;;;;;;;;:::i;:::-;;;6088:37;;6122:3;6115:10;;;;6088:37;6142:3;6135:10;;5864:298;;;;:::o;5355:329::-;5416:7;5443:11;5439:1;:15;5435:45;;;5466:14;5459:21;;;;5435:45;5498:12;5494:1;:16;5490:45;;;5521:14;5514:21;;;;5490:45;5553:12;5549:1;:16;5545:43;;;5576:12;5569:19;;;;5545:43;5606:13;5602:1;:17;5598:47;;;5629:16;5622:23;;;;5598:47;5662:15;5655:22;;5355:329;;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:7:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:126::-;2598:7;2638:42;2631:5;2627:54;2616:65;;2561:126;;;:::o;2693:96::-;2730:7;2759:24;2777:5;2759:24;:::i;:::-;2748:35;;2693:96;;;:::o;2795:122::-;2868:24;2886:5;2868:24;:::i;:::-;2861:5;2858:35;2848:63;;2907:1;2904;2897:12;2848:63;2795:122;:::o;2923:139::-;2969:5;3007:6;2994:20;2985:29;;3023:33;3050:5;3023:33;:::i;:::-;2923:139;;;;:::o;3068:474::-;3136:6;3144;3193:2;3181:9;3172:7;3168:23;3164:32;3161:119;;;3199:79;;:::i;:::-;3161:119;3319:1;3344:53;3389:7;3380:6;3369:9;3365:22;3344:53;:::i;:::-;3334:63;;3290:117;3446:2;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3417:118;3068:474;;;;;:::o;3548:77::-;3585:7;3614:5;3603:16;;3548:77;;;:::o;3631:118::-;3718:24;3736:5;3718:24;:::i;:::-;3713:3;3706:37;3631:118;;:::o;3755:222::-;3848:4;3886:2;3875:9;3871:18;3863:26;;3899:71;3967:1;3956:9;3952:17;3943:6;3899:71;:::i;:::-;3755:222;;;;:::o;3983:329::-;4042:6;4091:2;4079:9;4070:7;4066:23;4062:32;4059:119;;;4097:79;;:::i;:::-;4059:119;4217:1;4242:53;4287:7;4278:6;4267:9;4263:22;4242:53;:::i;:::-;4232:63;;4188:117;3983:329;;;;:::o;4318:180::-;4366:77;4363:1;4356:88;4463:4;4460:1;4453:15;4487:4;4484:1;4477:15;4504:116;4588:1;4581:5;4578:12;4568:46;;4594:18;;:::i;:::-;4568:46;4504:116;:::o;4626:133::-;4674:7;4703:5;4692:16;;4709:44;4747:5;4709:44;:::i;:::-;4626:133;;;:::o;4765:::-;4824:9;4857:35;4886:5;4857:35;:::i;:::-;4844:48;;4765:133;;;:::o;4904:149::-;5000:46;5040:5;5000:46;:::i;:::-;4995:3;4988:59;4904:149;;:::o;5059:670::-;5267:4;5305:3;5294:9;5290:19;5282:27;;5319:71;5387:1;5376:9;5372:17;5363:6;5319:71;:::i;:::-;5400:72;5468:2;5457:9;5453:18;5444:6;5400:72;:::i;:::-;5482:81;5559:2;5548:9;5544:18;5535:6;5482:81;:::i;:::-;5573:72;5641:2;5630:9;5626:18;5617:6;5573:72;:::i;:::-;5655:67;5717:3;5706:9;5702:19;5693:6;5655:67;:::i;:::-;5059:670;;;;;;;;:::o;5735:122::-;5808:24;5826:5;5808:24;:::i;:::-;5801:5;5798:35;5788:63;;5847:1;5844;5837:12;5788:63;5735:122;:::o;5863:139::-;5909:5;5947:6;5934:20;5925:29;;5963:33;5990:5;5963:33;:::i;:::-;5863:139;;;;:::o;6008:329::-;6067:6;6116:2;6104:9;6095:7;6091:23;6087:32;6084:119;;;6122:79;;:::i;:::-;6084:119;6242:1;6267:53;6312:7;6303:6;6292:9;6288:22;6267:53;:::i;:::-;6257:63;;6213:117;6008:329;;;;:::o;6343:553::-;6520:4;6558:3;6547:9;6543:19;6535:27;;6572:71;6640:1;6629:9;6625:17;6616:6;6572:71;:::i;:::-;6653:72;6721:2;6710:9;6706:18;6697:6;6653:72;:::i;:::-;6735;6803:2;6792:9;6788:18;6779:6;6735:72;:::i;:::-;6817;6885:2;6874:9;6870:18;6861:6;6817:72;:::i;:::-;6343:553;;;;;;;:::o;6902:60::-;6930:3;6951:5;6944:12;;6902:60;;;:::o;6968:142::-;7018:9;7051:53;7069:34;7078:24;7096:5;7078:24;:::i;:::-;7069:34;:::i;:::-;7051:53;:::i;:::-;7038:66;;6968:142;;;:::o;7116:126::-;7166:9;7199:37;7230:5;7199:37;:::i;:::-;7186:50;;7116:126;;;:::o;7248:140::-;7312:9;7345:37;7376:5;7345:37;:::i;:::-;7332:50;;7248:140;;;:::o;7394:159::-;7495:51;7540:5;7495:51;:::i;:::-;7490:3;7483:64;7394:159;;:::o;7559:250::-;7666:4;7704:2;7693:9;7689:18;7681:26;;7717:85;7799:1;7788:9;7784:17;7775:6;7717:85;:::i;:::-;7559:250;;;;:::o;7815:169::-;7899:11;7933:6;7928:3;7921:19;7973:4;7968:3;7964:14;7949:29;;7815:169;;;;:::o;7990:165::-;8130:17;8126:1;8118:6;8114:14;8107:41;7990:165;:::o;8161:366::-;8303:3;8324:67;8388:2;8383:3;8324:67;:::i;:::-;8317:74;;8400:93;8489:3;8400:93;:::i;:::-;8518:2;8513:3;8509:12;8502:19;;8161:366;;;:::o;8533:419::-;8699:4;8737:2;8726:9;8722:18;8714:26;;8786:9;8780:4;8776:20;8772:1;8761:9;8757:17;8750:47;8814:131;8940:4;8814:131;:::i;:::-;8806:139;;8533:419;;;:::o;8958:164::-;9098:16;9094:1;9086:6;9082:14;9075:40;8958:164;:::o;9128:366::-;9270:3;9291:67;9355:2;9350:3;9291:67;:::i;:::-;9284:74;;9367:93;9456:3;9367:93;:::i;:::-;9485:2;9480:3;9476:12;9469:19;;9128:366;;;:::o;9500:419::-;9666:4;9704:2;9693:9;9689:18;9681:26;;9753:9;9747:4;9743:20;9739:1;9728:9;9724:17;9717:47;9781:131;9907:4;9781:131;:::i;:::-;9773:139;;9500:419;;;:::o;9925:180::-;9973:77;9970:1;9963:88;10070:4;10067:1;10060:15;10094:4;10091:1;10084:15;10111:410;10151:7;10174:20;10192:1;10174:20;:::i;:::-;10169:25;;10208:20;10226:1;10208:20;:::i;:::-;10203:25;;10263:1;10260;10256:9;10285:30;10303:11;10285:30;:::i;:::-;10274:41;;10464:1;10455:7;10451:15;10448:1;10445:22;10425:1;10418:9;10398:83;10375:139;;10494:18;;:::i;:::-;10375:139;10159:362;10111:410;;;;:::o;10527:180::-;10575:77;10572:1;10565:88;10672:4;10669:1;10662:15;10696:4;10693:1;10686:15;10713:185;10753:1;10770:20;10788:1;10770:20;:::i;:::-;10765:25;;10804:20;10822:1;10804:20;:::i;:::-;10799:25;;10843:1;10833:35;;10848:18;;:::i;:::-;10833:35;10890:1;10887;10883:9;10878:14;;10713:185;;;;:::o;10904:191::-;10944:3;10963:20;10981:1;10963:20;:::i;:::-;10958:25;;10997:20;11015:1;10997:20;:::i;:::-;10992:25;;11040:1;11037;11033:9;11026:16;;11061:3;11058:1;11055:10;11052:36;;;11068:18;;:::i;:::-;11052:36;10904:191;;;;:::o;11101:194::-;11141:4;11161:20;11179:1;11161:20;:::i;:::-;11156:25;;11195:20;11213:1;11195:20;:::i;:::-;11190:25;;11239:1;11236;11232:9;11224:17;;11263:1;11257:4;11254:11;11251:37;;;11268:18;;:::i;:::-;11251:37;11101:194;;;;:::o;11301:118::-;11388:24;11406:5;11388:24;:::i;:::-;11383:3;11376:37;11301:118;;:::o;11425:332::-;11546:4;11584:2;11573:9;11569:18;11561:26;;11597:71;11665:1;11654:9;11650:17;11641:6;11597:71;:::i;:::-;11678:72;11746:2;11735:9;11731:18;11722:6;11678:72;:::i;:::-;11425:332;;;;;:::o;11763:116::-;11833:21;11848:5;11833:21;:::i;:::-;11826:5;11823:32;11813:60;;11869:1;11866;11859:12;11813:60;11763:116;:::o;11885:137::-;11939:5;11970:6;11964:13;11955:22;;11986:30;12010:5;11986:30;:::i;:::-;11885:137;;;;:::o;12028:345::-;12095:6;12144:2;12132:9;12123:7;12119:23;12115:32;12112:119;;;12150:79;;:::i;:::-;12112:119;12270:1;12295:61;12348:7;12339:6;12328:9;12324:22;12295:61;:::i;:::-;12285:71;;12241:125;12028:345;;;;:::o;12379:442::-;12528:4;12566:2;12555:9;12551:18;12543:26;;12579:71;12647:1;12636:9;12632:17;12623:6;12579:71;:::i;:::-;12660:72;12728:2;12717:9;12713:18;12704:6;12660:72;:::i;:::-;12742;12810:2;12799:9;12795:18;12786:6;12742:72;:::i;:::-;12379:442;;;;;;:::o;12827:::-;12976:4;13014:2;13003:9;12999:18;12991:26;;13027:71;13095:1;13084:9;13080:17;13071:6;13027:71;:::i;:::-;13108:72;13176:2;13165:9;13161:18;13152:6;13108:72;:::i;:::-;13190;13258:2;13247:9;13243:18;13234:6;13190:72;:::i;:::-;12827:442;;;;;;:::o;13275:350::-;13405:4;13443:2;13432:9;13428:18;13420:26;;13456:71;13524:1;13513:9;13509:17;13500:6;13456:71;:::i;:::-;13537:81;13614:2;13603:9;13599:18;13590:6;13537:81;:::i;:::-;13275:350;;;;;:::o;13631:332::-;13752:4;13790:2;13779:9;13775:18;13767:26;;13803:71;13871:1;13860:9;13856:17;13847:6;13803:71;:::i;:::-;13884:72;13952:2;13941:9;13937:18;13928:6;13884:72;:::i;:::-;13631:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1149200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "418",
								"GOVERNOR_ROLE()": "414",
								"currentEpoch()": "2448",
								"defaultVestingEpochs()": "2536",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3187",
								"minVolumeThreshold()": "2470",
								"mockClaim(uint256)": "infinite",
								"mockStake(uint256)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"rewardRatePerVolume()": "2469",
								"rewardStreams(address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"token()": "infinite",
								"totalDistributed()": "2491",
								"users(address)": "infinite"
							},
							"internal": {
								"_calculateFeeTier(uint256)": "142",
								"_getRewardMultiplier(enum MockIDXFlow.FeeTier)": "338"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 412,
									"end": 6164,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 412,
									"end": 6164,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 412,
									"end": 6164,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 752,
									"end": 753,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 722,
									"end": 753,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 722,
									"end": 753,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 860,
									"end": 863,
									"name": "PUSH",
									"source": 6,
									"value": "F4240"
								},
								{
									"begin": 823,
									"end": 863,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 823,
									"end": 863,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 973,
									"end": 982,
									"name": "PUSH",
									"source": 6,
									"value": "5F5E100"
								},
								{
									"begin": 937,
									"end": 982,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 937,
									"end": 982,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1179,
									"end": 1180,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1141,
									"end": 1180,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1141,
									"end": 1180,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3180,
									"end": 3346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3233,
									"end": 3239,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3223,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3218,
									"end": 3223,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3218,
									"end": 3240,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3218,
									"end": 3240,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3240,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3240,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3240,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3240,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3218,
									"end": 3240,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3240,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3240,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3240,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3240,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3240,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3218,
									"end": 3240,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3240,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3240,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3240,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3240,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3240,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3250,
									"end": 3292,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3261,
									"end": 3279,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3261,
									"end": 3279,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3281,
									"end": 3291,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 3250,
									"end": 3260,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 3250,
									"end": 3260,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3250,
									"end": 3260,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3250,
									"end": 3292,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3250,
									"end": 3292,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3250,
									"end": 3292,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3250,
									"end": 3292,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 3250,
									"end": 3292,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3250,
									"end": 3292,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3302,
									"end": 3339,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 651,
									"end": 677,
									"name": "PUSH",
									"source": 6,
									"value": "7935BD0AE54BC31F548C14DBA4D37C5C64B3F8CA900CB468FB8ABD54D5894F55"
								},
								{
									"begin": 3328,
									"end": 3338,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 3302,
									"end": 3312,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 3302,
									"end": 3312,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3302,
									"end": 3312,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3302,
									"end": 3339,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3302,
									"end": 3339,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3302,
									"end": 3339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3302,
									"end": 3339,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 3302,
									"end": 3339,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3302,
									"end": 3339,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3346,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 412,
									"end": 6164,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 412,
									"end": 6164,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 412,
									"end": 6164,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 412,
									"end": 6164,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 412,
									"end": 6164,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 6164,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 412,
									"end": 6164,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 6164,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 6164,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 412,
									"end": 6164,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 6164,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203831c6b534c6dc204132780bdb012eaac3cfbaaa583a155da4a98b406fa2049c64736f6c634300081e0033",
									".code": [
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "A87430BA"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "D547741F"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "D547741F"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "D699B9D9"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "EFCA2EED"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "F5492E2F"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "FC0C546A"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "A87430BA"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "A969CCEF"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "AF0FE497"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "CCC57490"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "76671808"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "76671808"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "8209CE30"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "91D14854"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "A217FDDF"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "A344C499"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A7"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "248A9CA3"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "2F2FF15D"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "36568ABE"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 6164,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 722,
											"end": 753,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 722,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 722,
											"end": 753,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 722,
											"end": 753,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 722,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 722,
											"end": 753,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 722,
											"end": 753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 722,
											"end": 753,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 722,
											"end": 753,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 722,
											"end": 753,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 722,
											"end": 753,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 937,
											"end": 982,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 937,
											"end": 982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 937,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 937,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 937,
											"end": 982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 937,
											"end": 982,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 937,
											"end": 982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 937,
											"end": 982,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 982,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 937,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 937,
											"end": 982,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 937,
											"end": 982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 937,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 937,
											"end": 982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 937,
											"end": 982,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 937,
											"end": 982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 937,
											"end": 982,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 982,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 937,
											"end": 982,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 937,
											"end": 982,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 937,
											"end": 982,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 937,
											"end": 982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 937,
											"end": 982,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1141,
											"end": 1180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1141,
											"end": 1180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2034,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2034,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2034,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 4062,
											"end": 5181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4062,
											"end": 5181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3529,
											"end": 3832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3529,
											"end": 3832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 611,
											"end": 677,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 611,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 611,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 611,
											"end": 677,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 611,
											"end": 677,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 611,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 611,
											"end": 677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 611,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 611,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 611,
											"end": 677,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 611,
											"end": 677,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 611,
											"end": 677,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 611,
											"end": 677,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 611,
											"end": 677,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 611,
											"end": 677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 611,
											"end": 677,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 823,
											"end": 863,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 823,
											"end": 863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 823,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 823,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 823,
											"end": 863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 823,
											"end": 863,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 823,
											"end": 863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 823,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 823,
											"end": 863,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 823,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 823,
											"end": 863,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 823,
											"end": 863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 823,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 823,
											"end": 863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 823,
											"end": 863,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 823,
											"end": 863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 823,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 823,
											"end": 863,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 823,
											"end": 863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 823,
											"end": 863,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 823,
											"end": 863,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 823,
											"end": 863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 823,
											"end": 863,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1038,
											"end": 1069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1038,
											"end": 1069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2122,
											"end": 2175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2122,
											"end": 2175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2122,
											"end": 2175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 526,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 526,
											"end": 545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 526,
											"end": 545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 545,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 526,
											"end": 545,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 526,
											"end": 545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 526,
											"end": 545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 545,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 722,
											"end": 753,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 722,
											"end": 753,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 722,
											"end": 753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 937,
											"end": 982,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 937,
											"end": 982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 937,
											"end": 982,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 937,
											"end": 982,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 937,
											"end": 982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 937,
											"end": 982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1180,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4137,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4137,
											"end": 4154,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4153,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4154,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4137,
											"end": 4154,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4154,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4137,
											"end": 4154,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4154,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4154,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4154,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4137,
											"end": 4154,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4154,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4154,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4154,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4154,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4137,
											"end": 4154,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4154,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4137,
											"end": 4154,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4154,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4191,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4191,
											"end": 4203,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4172,
											"end": 4188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4188,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4203,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4164,
											"end": 4223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4241,
											"end": 4269,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4241,
											"end": 4269,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4233,
											"end": 4288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4233,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4300,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4299,
											"end": 4312,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4321,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4321,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4331,
											"end": 4332,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4331,
											"end": 4347,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4331,
											"end": 4347,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4331,
											"end": 4362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4331,
											"end": 4362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4331,
											"end": 4362,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4331,
											"end": 4362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4373,
											"end": 4391,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4430,
											"name": "PUSH",
											"source": 6,
											"value": "F4240"
										},
										{
											"begin": 4404,
											"end": 4423,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4404,
											"end": 4423,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4401,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4395,
											"end": 4423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4394,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4394,
											"end": 4430,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4394,
											"end": 4430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4394,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4394,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4394,
											"end": 4430,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4394,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4373,
											"end": 4430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4373,
											"end": 4430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4440,
											"end": 4454,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4506,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4471,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4492,
											"end": 4493,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4498,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4492,
											"end": 4498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4498,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4498,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4498,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4492,
											"end": 4498,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4498,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4498,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4492,
											"end": 4498,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4471,
											"end": 4499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4499,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4471,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4468,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4458,
											"end": 4499,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4458,
											"end": 4499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4499,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4458,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4457,
											"end": 4506,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4457,
											"end": 4506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4506,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4457,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4440,
											"end": 4506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4536,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4532,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4516,
											"end": 4532,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4516,
											"end": 4542,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4542,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4542,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4516,
											"end": 4542,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4516,
											"end": 4542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4542,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4516,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4542,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4542,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4542,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4553,
											"end": 4570,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4589,
											"end": 4592,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4583,
											"end": 4585,
											"name": "PUSH",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4574,
											"end": 4585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4573,
											"end": 4592,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4573,
											"end": 4592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4592,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4573,
											"end": 4592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4553,
											"end": 4592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4553,
											"end": 4592,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4602,
											"end": 4620,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4632,
											"end": 4641,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4623,
											"end": 4629,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4623,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4602,
											"end": 4641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4602,
											"end": 4641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4685,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4680,
											"end": 4685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4680,
											"end": 4685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4685,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4685,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4680,
											"end": 4685,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4685,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4685,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4680,
											"end": 4685,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4694,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4680,
											"end": 4694,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4694,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 4695,
											"end": 4705,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4707,
											"end": 4716,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4680,
											"end": 4717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4680,
											"end": 4717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4757,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "PUSH",
											"source": 6,
											"value": "FC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE"
										},
										{
											"begin": 4759,
											"end": 4768,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4732,
											"end": 4769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4824,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4810,
											"end": 4820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 4824,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4806,
											"end": 5175,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4806,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4806,
											"end": 5175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4865,
											"end": 4878,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4889,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4840,
											"end": 4890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4840,
											"end": 4890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4924,
											"end": 4925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4908,
											"end": 4909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4920,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4908,
											"end": 4920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4920,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4925,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4904,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4904,
											"end": 5043,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4945,
											"end": 4946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4945,
											"end": 4957,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4945,
											"end": 4957,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4945,
											"end": 4972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4945,
											"end": 4972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4945,
											"end": 4972,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4945,
											"end": 4972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5028,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5008,
											"end": 5028,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4990,
											"end": 4991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4990,
											"end": 5028,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4990,
											"end": 5028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4990,
											"end": 5028,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4990,
											"end": 5028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4904,
											"end": 5043,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4904,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5067,
											"end": 5077,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5057,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5056,
											"end": 5063,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5056,
											"end": 5077,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5077,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5077,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 5056,
											"end": 5077,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5056,
											"end": 5077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5077,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 5056,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5077,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5077,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5077,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5120,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "PUSH",
											"source": 6,
											"value": "CACF4A6E7C897EAD5577524D96F0DEBB59CCD5BD3465D42CD2A958E2DEFB0B94"
										},
										{
											"begin": 5122,
											"end": 5132,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5134,
											"end": 5135,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5134,
											"end": 5146,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5134,
											"end": 5146,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5134,
											"end": 5146,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5149,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5163,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5148,
											"end": 5163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5163,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5096,
											"end": 5164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5164,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4826,
											"end": 5175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4806,
											"end": 5175,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4806,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 5181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 5181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 5181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 5181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 5181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 5181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 5181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3583,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3588,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3583,
											"end": 3588,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3588,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3583,
											"end": 3588,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 3602,
											"end": 3612,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3626,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3635,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3583,
											"end": 3636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3583,
											"end": 3636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3667,
											"end": 3672,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3667,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3683,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3667,
											"end": 3684,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3667,
											"end": 3684,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3684,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3684,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3684,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3684,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3684,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3667,
											"end": 3684,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3646,
											"end": 3684,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3646,
											"end": 3684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3712,
											"end": 3718,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3695,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3694,
											"end": 3718,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3718,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3718,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3694,
											"end": 3718,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3718,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3694,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3718,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3694,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3718,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3718,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3718,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3718,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3755,
											"end": 3756,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3769,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3755,
											"end": 3769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3769,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3737,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3770,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3737,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3734,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3728,
											"end": 3734,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3734,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3728,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 3808,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "PUSH",
											"source": 6,
											"value": "E42710261DCCB691E79E3F3E24A2B8CC0E13B9BEC7BE82A445C6A6992474EA44"
										},
										{
											"begin": 3810,
											"end": 3816,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3819,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3824,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3818,
											"end": 3824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3824,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3824,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3824,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3818,
											"end": 3824,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3824,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3824,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3818,
											"end": 3824,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3785,
											"end": 3825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3825,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3832,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3832,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 611,
											"end": 677,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 651,
											"end": 677,
											"name": "PUSH",
											"source": 6,
											"value": "7935BD0AE54BC31F548C14DBA4D37C5C64B3F8CA900CB468FB8ABD54D5894F55"
										},
										{
											"begin": 611,
											"end": 677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 611,
											"end": 677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 823,
											"end": 863,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 823,
											"end": 863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 823,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 823,
											"end": 863,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 823,
											"end": 863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 823,
											"end": 863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1069,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 526,
											"end": 545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 526,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 526,
											"end": 545,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 526,
											"end": 545,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 526,
											"end": 545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6810,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 6838,
											"end": 6842,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6830,
											"end": 6852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6875,
											"end": 6879,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6889,
											"end": 6896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 6951,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 6951,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6942,
											"end": 6949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6985,
											"end": 6989,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7027,
											"end": 7032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7020,
											"end": 7032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 6162,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5864,
											"end": 6162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5928,
											"end": 5935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5970,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5951,
											"end": 5970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5951,
											"end": 5970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5947,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 5947,
											"end": 5984,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5981,
											"end": 5984,
											"name": "PUSH",
											"source": 6,
											"value": "7D"
										},
										{
											"begin": 5974,
											"end": 5984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 5984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 5974,
											"end": 5984,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5947,
											"end": 5984,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 5947,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6015,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5998,
											"end": 6015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 5999,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5998,
											"end": 6015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6015,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 5994,
											"end": 6031,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6028,
											"end": 6031,
											"name": "PUSH",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 6021,
											"end": 6031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6021,
											"end": 6031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6021,
											"end": 6031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6021,
											"end": 6031,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6031,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 5994,
											"end": 6031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6050,
											"end": 6066,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 6045,
											"end": 6066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6046,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 6045,
											"end": 6066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6066,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6041,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 6041,
											"end": 6078,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6075,
											"end": 6078,
											"name": "PUSH",
											"source": 6,
											"value": "C8"
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6041,
											"end": 6078,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 6041,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6112,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 6092,
											"end": 6112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6093,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 6092,
											"end": 6112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6112,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6088,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 6088,
											"end": 6125,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6122,
											"end": 6125,
											"name": "PUSH",
											"source": 6,
											"value": "12C"
										},
										{
											"begin": 6115,
											"end": 6125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6115,
											"end": 6125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6115,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6115,
											"end": 6125,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6088,
											"end": 6125,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 6088,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6142,
											"end": 6145,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 6162,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 5864,
											"end": 6162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 6162,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 6162,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 6162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 6162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5684,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5355,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5454,
											"name": "PUSH",
											"source": 6,
											"value": "3B9ACA00"
										},
										{
											"begin": 5439,
											"end": 5440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5454,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 5480,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5435,
											"end": 5480,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5459,
											"end": 5480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5459,
											"end": 5480,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5459,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5459,
											"end": 5480,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 5480,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5435,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5510,
											"name": "PUSH",
											"source": 6,
											"value": "2540BE400"
										},
										{
											"begin": 5494,
											"end": 5495,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5494,
											"end": 5510,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5535,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 5490,
											"end": 5535,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5521,
											"end": 5535,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5514,
											"end": 5535,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5535,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5514,
											"end": 5535,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5535,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 5490,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "PUSH",
											"source": 6,
											"value": "BA43B7400"
										},
										{
											"begin": 5549,
											"end": 5550,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5549,
											"end": 5565,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5545,
											"end": 5588,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5545,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5545,
											"end": 5588,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5569,
											"end": 5588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5569,
											"end": 5588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5569,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5569,
											"end": 5588,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5545,
											"end": 5588,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5545,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5606,
											"end": 5619,
											"name": "PUSH",
											"source": 6,
											"value": "174876E800"
										},
										{
											"begin": 5602,
											"end": 5603,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5619,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5645,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 5598,
											"end": 5645,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5629,
											"end": 5645,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5622,
											"end": 5645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5622,
											"end": 5645,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5645,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 5598,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5677,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5655,
											"end": 5677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5684,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5355,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5684,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2296,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2284,
											"end": 2321,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2477,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2636,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2681,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2777,
											"end": 2782,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2759,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2868,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2893,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2897,
											"end": 2909,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2994,
											"end": 3014,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3023,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2923,
											"end": 3062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3142,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3172,
											"end": 3179,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3191,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3164,
											"end": 3196,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3199,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3369,
											"end": 3378,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3344,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3290,
											"end": 3407,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3603,
											"end": 3619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3603,
											"end": 3619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3749,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3631,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 3736,
											"end": 3741,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3718,
											"end": 3742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3742,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 3718,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3713,
											"end": 3716,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3743,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3755,
											"end": 3977,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3755,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3886,
											"end": 3888,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3899,
											"end": 3970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 3967,
											"end": 3968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3956,
											"end": 3965,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 3969,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3899,
											"end": 3970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3899,
											"end": 3970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3899,
											"end": 3970,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 3899,
											"end": 3970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3755,
											"end": 3977,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3755,
											"end": 3977,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3755,
											"end": 3977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3755,
											"end": 3977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3755,
											"end": 3977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4312,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 3983,
											"end": 4312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4093,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4088,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4070,
											"end": 4077,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4089,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4094,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4178,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 4059,
											"end": 4178,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4097,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 4097,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4097,
											"end": 4176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4097,
											"end": 4176,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 4097,
											"end": 4176,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4178,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 4059,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4217,
											"end": 4218,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 4287,
											"end": 4294,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4278,
											"end": 4284,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4276,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4242,
											"end": 4295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4295,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4295,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4312,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4312,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4312,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4312,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4318,
											"end": 4498,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4318,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4366,
											"end": 4443,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4363,
											"end": 4364,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4356,
											"end": 4444,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4463,
											"end": 4467,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 4460,
											"end": 4461,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4453,
											"end": 4468,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4491,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4484,
											"end": 4485,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4492,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4620,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4504,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4589,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4581,
											"end": 4586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4590,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4568,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 4568,
											"end": 4614,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 4594,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4594,
											"end": 4612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 4612,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 4594,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4568,
											"end": 4614,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 4568,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4626,
											"end": 4759,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4626,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4674,
											"end": 4681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4703,
											"end": 4708,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4708,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4708,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4709,
											"end": 4753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 4747,
											"end": 4752,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4709,
											"end": 4753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4709,
											"end": 4753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4709,
											"end": 4753,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 4709,
											"end": 4753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4626,
											"end": 4759,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4626,
											"end": 4759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4626,
											"end": 4759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4626,
											"end": 4759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4765,
											"end": 4898,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4765,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4824,
											"end": 4833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 4886,
											"end": 4891,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4857,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4857,
											"end": 4892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4857,
											"end": 4892,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 4857,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4844,
											"end": 4892,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4844,
											"end": 4892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4765,
											"end": 4898,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4765,
											"end": 4898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4765,
											"end": 4898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4765,
											"end": 4898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4904,
											"end": 5053,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4904,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5000,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 5040,
											"end": 5045,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5000,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5000,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5000,
											"end": 5046,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 5000,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 4998,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5047,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4904,
											"end": 5053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4904,
											"end": 5053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4904,
											"end": 5053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5729,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 5059,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5267,
											"end": 5271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5305,
											"end": 5308,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 5294,
											"end": 5303,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5290,
											"end": 5309,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5319,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 5387,
											"end": 5388,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5376,
											"end": 5385,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5363,
											"end": 5369,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5319,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5319,
											"end": 5390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5319,
											"end": 5390,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 5319,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5400,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 5468,
											"end": 5470,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5457,
											"end": 5466,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5453,
											"end": 5471,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5444,
											"end": 5450,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5400,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5400,
											"end": 5472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5400,
											"end": 5472,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 5400,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 5559,
											"end": 5561,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5548,
											"end": 5557,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5541,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5482,
											"end": 5563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5563,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 5482,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 5641,
											"end": 5643,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5630,
											"end": 5639,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5626,
											"end": 5644,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 5623,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5573,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5645,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 5573,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 5717,
											"end": 5720,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5706,
											"end": 5715,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5702,
											"end": 5721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5693,
											"end": 5699,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5655,
											"end": 5722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5722,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 5655,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5729,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5729,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5735,
											"end": 5857,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5735,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 5826,
											"end": 5831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5808,
											"end": 5832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 5808,
											"end": 5832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5801,
											"end": 5806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5833,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5788,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 5788,
											"end": 5851,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 5848,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5845,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5837,
											"end": 5849,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5788,
											"end": 5851,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 5788,
											"end": 5851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5735,
											"end": 5857,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5735,
											"end": 5857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5863,
											"end": 6002,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 5863,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5909,
											"end": 5914,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5947,
											"end": 5953,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5954,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5925,
											"end": 5954,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5925,
											"end": 5954,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5963,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 5990,
											"end": 5995,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5963,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5963,
											"end": 5996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5963,
											"end": 5996,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 5963,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5863,
											"end": 6002,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5863,
											"end": 6002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5863,
											"end": 6002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5863,
											"end": 6002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5863,
											"end": 6002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6337,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 6008,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6067,
											"end": 6073,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6116,
											"end": 6118,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6104,
											"end": 6113,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6095,
											"end": 6102,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6114,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6087,
											"end": 6119,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6203,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 6084,
											"end": 6203,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6122,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 6122,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 6122,
											"end": 6201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6122,
											"end": 6201,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 6122,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6203,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 6084,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6243,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6267,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 6312,
											"end": 6319,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6303,
											"end": 6309,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6292,
											"end": 6301,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6288,
											"end": 6310,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 6267,
											"end": 6320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6320,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 6267,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6257,
											"end": 6320,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6257,
											"end": 6320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6213,
											"end": 6330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6337,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6337,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6896,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 6343,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6520,
											"end": 6524,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6558,
											"end": 6561,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6547,
											"end": 6556,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 6562,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 6640,
											"end": 6641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6616,
											"end": 6622,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 6572,
											"end": 6643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6643,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 6572,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 6721,
											"end": 6723,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6710,
											"end": 6719,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6724,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6697,
											"end": 6703,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 6653,
											"end": 6725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 6725,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 6653,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6735,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 6803,
											"end": 6805,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6792,
											"end": 6801,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6806,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6785,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6735,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 6735,
											"end": 6807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6735,
											"end": 6807,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 6735,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 6885,
											"end": 6887,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6874,
											"end": 6883,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6870,
											"end": 6888,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6861,
											"end": 6867,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 6817,
											"end": 6889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6889,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 6817,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6896,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6896,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6896,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6896,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6896,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6896,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6896,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 6933,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6951,
											"end": 6956,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6956,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6902,
											"end": 6962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7110,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 6968,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7051,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 7069,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 7078,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 7096,
											"end": 7101,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7078,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 7078,
											"end": 7102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7078,
											"end": 7102,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 7078,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7069,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7069,
											"end": 7103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7069,
											"end": 7103,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 7069,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7051,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 7051,
											"end": 7104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7051,
											"end": 7104,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 7051,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7038,
											"end": 7104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7038,
											"end": 7104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7110,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7110,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7116,
											"end": 7242,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 7116,
											"end": 7242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7166,
											"end": 7175,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7199,
											"end": 7236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 7230,
											"end": 7235,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 7199,
											"end": 7236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7236,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 7199,
											"end": 7236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7186,
											"end": 7236,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7186,
											"end": 7236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7116,
											"end": 7242,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7116,
											"end": 7242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7116,
											"end": 7242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7116,
											"end": 7242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7388,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 7248,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7312,
											"end": 7321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7345,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 7376,
											"end": 7381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7345,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 7345,
											"end": 7382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7345,
											"end": 7382,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 7345,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7332,
											"end": 7382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7332,
											"end": 7382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7388,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7394,
											"end": 7553,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 7394,
											"end": 7553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7495,
											"end": 7546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7540,
											"end": 7545,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7495,
											"end": 7546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 7495,
											"end": 7546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7495,
											"end": 7546,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7495,
											"end": 7546,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7490,
											"end": 7493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7547,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7394,
											"end": 7553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7394,
											"end": 7553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7394,
											"end": 7553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7809,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 7559,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7666,
											"end": 7670,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7704,
											"end": 7706,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7693,
											"end": 7702,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7689,
											"end": 7707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7681,
											"end": 7707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7681,
											"end": 7707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7717,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 7799,
											"end": 7800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7788,
											"end": 7797,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7784,
											"end": 7801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7775,
											"end": 7781,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7717,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 7717,
											"end": 7802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7717,
											"end": 7802,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 7717,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7809,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7809,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7815,
											"end": 7984,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 7815,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7933,
											"end": 7939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7928,
											"end": 7931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7921,
											"end": 7940,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7968,
											"end": 7971,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7964,
											"end": 7978,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7949,
											"end": 7978,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7949,
											"end": 7978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7815,
											"end": 7984,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7815,
											"end": 7984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7815,
											"end": 7984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7815,
											"end": 7984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7815,
											"end": 7984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8155,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 7990,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8130,
											"end": 8147,
											"name": "PUSH",
											"source": 7,
											"value": "416C726561647920636C61696D65640000000000000000000000000000000000"
										},
										{
											"begin": 8126,
											"end": 8127,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8118,
											"end": 8124,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8114,
											"end": 8128,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8107,
											"end": 8148,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8161,
											"end": 8527,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 8161,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8303,
											"end": 8306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8324,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 8388,
											"end": 8390,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 8383,
											"end": 8386,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8324,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 8324,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8324,
											"end": 8391,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 8324,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8317,
											"end": 8391,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8317,
											"end": 8391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8400,
											"end": 8493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 8489,
											"end": 8492,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8400,
											"end": 8493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 8400,
											"end": 8493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8400,
											"end": 8493,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 8400,
											"end": 8493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8518,
											"end": 8520,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8513,
											"end": 8516,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8509,
											"end": 8521,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8502,
											"end": 8521,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8502,
											"end": 8521,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8161,
											"end": 8527,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8161,
											"end": 8527,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8161,
											"end": 8527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8161,
											"end": 8527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8952,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 8533,
											"end": 8952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8699,
											"end": 8703,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8737,
											"end": 8739,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8726,
											"end": 8735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8722,
											"end": 8740,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8786,
											"end": 8795,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8780,
											"end": 8784,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8776,
											"end": 8796,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8772,
											"end": 8773,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8761,
											"end": 8770,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8757,
											"end": 8774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8750,
											"end": 8797,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8814,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 8940,
											"end": 8944,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8814,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 8814,
											"end": 8945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8814,
											"end": 8945,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 8814,
											"end": 8945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8806,
											"end": 8945,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8806,
											"end": 8945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8952,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8952,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8958,
											"end": 9122,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 8958,
											"end": 9122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9098,
											"end": 9114,
											"name": "PUSH",
											"source": 7,
											"value": "566F6C756D6520746F6F206C6F77000000000000000000000000000000000000"
										},
										{
											"begin": 9094,
											"end": 9095,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9086,
											"end": 9092,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9082,
											"end": 9096,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9075,
											"end": 9115,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8958,
											"end": 9122,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8958,
											"end": 9122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9128,
											"end": 9494,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 9128,
											"end": 9494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9270,
											"end": 9273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 9355,
											"end": 9357,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 9350,
											"end": 9353,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 9291,
											"end": 9358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9358,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 9291,
											"end": 9358,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9284,
											"end": 9358,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9284,
											"end": 9358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9367,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 9456,
											"end": 9459,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9367,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 9367,
											"end": 9460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9367,
											"end": 9460,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 9367,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9485,
											"end": 9487,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9480,
											"end": 9483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9476,
											"end": 9488,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9469,
											"end": 9488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9469,
											"end": 9488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9128,
											"end": 9494,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9128,
											"end": 9494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9128,
											"end": 9494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9128,
											"end": 9494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9500,
											"end": 9919,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 9500,
											"end": 9919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9666,
											"end": 9670,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9704,
											"end": 9706,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9693,
											"end": 9702,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9689,
											"end": 9707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9681,
											"end": 9707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9681,
											"end": 9707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9753,
											"end": 9762,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9747,
											"end": 9751,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9743,
											"end": 9763,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9739,
											"end": 9740,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9728,
											"end": 9737,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9724,
											"end": 9741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9717,
											"end": 9764,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9781,
											"end": 9912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 9907,
											"end": 9911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9781,
											"end": 9912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 9781,
											"end": 9912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9781,
											"end": 9912,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 9781,
											"end": 9912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9500,
											"end": 9919,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9500,
											"end": 9919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9500,
											"end": 9919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9500,
											"end": 9919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9925,
											"end": 10105,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 9925,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9973,
											"end": 10050,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9970,
											"end": 9971,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 10051,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10070,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 10067,
											"end": 10068,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10060,
											"end": 10075,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10094,
											"end": 10098,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10084,
											"end": 10099,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10111,
											"end": 10521,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 10111,
											"end": 10521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10151,
											"end": 10158,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10174,
											"end": 10194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 10192,
											"end": 10193,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10174,
											"end": 10194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 10174,
											"end": 10194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10174,
											"end": 10194,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 10174,
											"end": 10194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10169,
											"end": 10194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10169,
											"end": 10194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10208,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 10226,
											"end": 10227,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10208,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 10208,
											"end": 10228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10208,
											"end": 10228,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 10208,
											"end": 10228,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10203,
											"end": 10228,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10203,
											"end": 10228,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10263,
											"end": 10264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10260,
											"end": 10261,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10256,
											"end": 10265,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 10285,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 10303,
											"end": 10314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10285,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 10285,
											"end": 10315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10285,
											"end": 10315,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 10285,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10274,
											"end": 10315,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10274,
											"end": 10315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10464,
											"end": 10465,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10455,
											"end": 10462,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10451,
											"end": 10466,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10448,
											"end": 10449,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10445,
											"end": 10467,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10425,
											"end": 10426,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10418,
											"end": 10427,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10398,
											"end": 10481,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 10375,
											"end": 10514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 10375,
											"end": 10514,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 10494,
											"end": 10512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10375,
											"end": 10514,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 10375,
											"end": 10514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10159,
											"end": 10521,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10111,
											"end": 10521,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10111,
											"end": 10521,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10111,
											"end": 10521,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10111,
											"end": 10521,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10111,
											"end": 10521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10527,
											"end": 10707,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 10527,
											"end": 10707,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10575,
											"end": 10652,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10572,
											"end": 10573,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10565,
											"end": 10653,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10672,
											"end": 10676,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 10669,
											"end": 10670,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10662,
											"end": 10677,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10696,
											"end": 10700,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10693,
											"end": 10694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10686,
											"end": 10701,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10713,
											"end": 10898,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 10713,
											"end": 10898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10753,
											"end": 10754,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10770,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 10788,
											"end": 10789,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10770,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 10770,
											"end": 10790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10770,
											"end": 10790,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 10770,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10765,
											"end": 10790,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10765,
											"end": 10790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 10822,
											"end": 10823,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 10804,
											"end": 10824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 10824,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 10804,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10799,
											"end": 10824,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10799,
											"end": 10824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10843,
											"end": 10844,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10833,
											"end": 10868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 10833,
											"end": 10868,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10848,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 10848,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 10848,
											"end": 10866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10848,
											"end": 10866,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 10848,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10833,
											"end": 10868,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 10833,
											"end": 10868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10890,
											"end": 10891,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10887,
											"end": 10888,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10883,
											"end": 10892,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10878,
											"end": 10892,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10878,
											"end": 10892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10713,
											"end": 10898,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10713,
											"end": 10898,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10713,
											"end": 10898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10713,
											"end": 10898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10713,
											"end": 10898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10904,
											"end": 11095,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 10904,
											"end": 11095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10944,
											"end": 10947,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10963,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 10981,
											"end": 10982,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10963,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 10963,
											"end": 10983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10963,
											"end": 10983,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 10963,
											"end": 10983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10958,
											"end": 10983,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10958,
											"end": 10983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10997,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 11015,
											"end": 11016,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10997,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 10997,
											"end": 11017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10997,
											"end": 11017,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 10997,
											"end": 11017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10992,
											"end": 11017,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10992,
											"end": 11017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11040,
											"end": 11041,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11037,
											"end": 11038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11033,
											"end": 11042,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11026,
											"end": 11042,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11026,
											"end": 11042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11061,
											"end": 11064,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11059,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11055,
											"end": 11065,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11052,
											"end": 11088,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11052,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 11052,
											"end": 11088,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 11068,
											"end": 11086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11052,
											"end": 11088,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 11052,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10904,
											"end": 11095,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10904,
											"end": 11095,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10904,
											"end": 11095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10904,
											"end": 11095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10904,
											"end": 11095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11101,
											"end": 11295,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 11101,
											"end": 11295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11141,
											"end": 11145,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11161,
											"end": 11181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 11179,
											"end": 11180,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11161,
											"end": 11181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 11161,
											"end": 11181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11161,
											"end": 11181,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 11161,
											"end": 11181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11156,
											"end": 11181,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11156,
											"end": 11181,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11195,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 11213,
											"end": 11214,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11195,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 11195,
											"end": 11215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11195,
											"end": 11215,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 11195,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11190,
											"end": 11215,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11190,
											"end": 11215,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11239,
											"end": 11240,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11236,
											"end": 11237,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11232,
											"end": 11241,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11224,
											"end": 11241,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11224,
											"end": 11241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11263,
											"end": 11264,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11257,
											"end": 11261,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11254,
											"end": 11265,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11251,
											"end": 11288,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11251,
											"end": 11288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 11251,
											"end": 11288,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11268,
											"end": 11286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 11268,
											"end": 11286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 11268,
											"end": 11286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11268,
											"end": 11286,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 11268,
											"end": 11286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11251,
											"end": 11288,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 11251,
											"end": 11288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11101,
											"end": 11295,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11101,
											"end": 11295,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11101,
											"end": 11295,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11101,
											"end": 11295,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11101,
											"end": 11295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11301,
											"end": 11419,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 11301,
											"end": 11419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11388,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 11406,
											"end": 11411,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11388,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 11388,
											"end": 11412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11388,
											"end": 11412,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 11388,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11383,
											"end": 11386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11376,
											"end": 11413,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11301,
											"end": 11419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11301,
											"end": 11419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11301,
											"end": 11419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11425,
											"end": 11757,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 11425,
											"end": 11757,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11546,
											"end": 11550,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11584,
											"end": 11586,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11573,
											"end": 11582,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11569,
											"end": 11587,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11561,
											"end": 11587,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11561,
											"end": 11587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11597,
											"end": 11668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 11665,
											"end": 11666,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11654,
											"end": 11663,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11650,
											"end": 11667,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11641,
											"end": 11647,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11597,
											"end": 11668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 11597,
											"end": 11668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11597,
											"end": 11668,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 11597,
											"end": 11668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11678,
											"end": 11750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 11746,
											"end": 11748,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11735,
											"end": 11744,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11731,
											"end": 11749,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11722,
											"end": 11728,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11678,
											"end": 11750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 11678,
											"end": 11750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11678,
											"end": 11750,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 11678,
											"end": 11750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11425,
											"end": 11757,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11425,
											"end": 11757,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11425,
											"end": 11757,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11425,
											"end": 11757,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11425,
											"end": 11757,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11425,
											"end": 11757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11763,
											"end": 11879,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 11763,
											"end": 11879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11833,
											"end": 11854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 11848,
											"end": 11853,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11833,
											"end": 11854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 11833,
											"end": 11854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11833,
											"end": 11854,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 11833,
											"end": 11854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11823,
											"end": 11855,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11813,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 11813,
											"end": 11873,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11869,
											"end": 11870,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11866,
											"end": 11867,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11859,
											"end": 11871,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11813,
											"end": 11873,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 11813,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11763,
											"end": 11879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11763,
											"end": 11879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11885,
											"end": 12022,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 11885,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11939,
											"end": 11944,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11970,
											"end": 11976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11964,
											"end": 11977,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11955,
											"end": 11977,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11955,
											"end": 11977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11986,
											"end": 12016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 12010,
											"end": 12015,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11986,
											"end": 12016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 11986,
											"end": 12016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11986,
											"end": 12016,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 11986,
											"end": 12016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11885,
											"end": 12022,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11885,
											"end": 12022,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11885,
											"end": 12022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11885,
											"end": 12022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11885,
											"end": 12022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12028,
											"end": 12373,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 12028,
											"end": 12373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12095,
											"end": 12101,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12144,
											"end": 12146,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12132,
											"end": 12141,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12123,
											"end": 12130,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12119,
											"end": 12142,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12115,
											"end": 12147,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 12112,
											"end": 12231,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12112,
											"end": 12231,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 12112,
											"end": 12231,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12150,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 12150,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 12150,
											"end": 12229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12150,
											"end": 12229,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 12150,
											"end": 12229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12112,
											"end": 12231,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 12112,
											"end": 12231,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12270,
											"end": 12271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12295,
											"end": 12356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 12348,
											"end": 12355,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12339,
											"end": 12345,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12328,
											"end": 12337,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12324,
											"end": 12346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12295,
											"end": 12356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 12295,
											"end": 12356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12295,
											"end": 12356,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 12295,
											"end": 12356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12285,
											"end": 12356,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12285,
											"end": 12356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12241,
											"end": 12366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12028,
											"end": 12373,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12028,
											"end": 12373,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12028,
											"end": 12373,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12028,
											"end": 12373,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12028,
											"end": 12373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12379,
											"end": 12821,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 12379,
											"end": 12821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12528,
											"end": 12532,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12566,
											"end": 12568,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 12555,
											"end": 12564,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12551,
											"end": 12569,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12543,
											"end": 12569,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12543,
											"end": 12569,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12579,
											"end": 12650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 12647,
											"end": 12648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12636,
											"end": 12645,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12632,
											"end": 12649,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12623,
											"end": 12629,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12579,
											"end": 12650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 12579,
											"end": 12650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12579,
											"end": 12650,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 12579,
											"end": 12650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12660,
											"end": 12732,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 12728,
											"end": 12730,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12717,
											"end": 12726,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12713,
											"end": 12731,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12704,
											"end": 12710,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12660,
											"end": 12732,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 12660,
											"end": 12732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12660,
											"end": 12732,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 12660,
											"end": 12732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12742,
											"end": 12814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 12810,
											"end": 12812,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12799,
											"end": 12808,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12795,
											"end": 12813,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12786,
											"end": 12792,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12742,
											"end": 12814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 12742,
											"end": 12814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12742,
											"end": 12814,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 12742,
											"end": 12814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12379,
											"end": 12821,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 12379,
											"end": 12821,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12379,
											"end": 12821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12379,
											"end": 12821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12379,
											"end": 12821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12379,
											"end": 12821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12379,
											"end": 12821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 13269,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 12827,
											"end": 13269,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12976,
											"end": 12980,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13014,
											"end": 13016,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 13003,
											"end": 13012,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12999,
											"end": 13017,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12991,
											"end": 13017,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12991,
											"end": 13017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13098,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 13095,
											"end": 13096,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13084,
											"end": 13093,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13080,
											"end": 13097,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13071,
											"end": 13077,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13098,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 13027,
											"end": 13098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13098,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 13027,
											"end": 13098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13108,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 13176,
											"end": 13178,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13165,
											"end": 13174,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13161,
											"end": 13179,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13158,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13108,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 13108,
											"end": 13180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13108,
											"end": 13180,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 13108,
											"end": 13180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13190,
											"end": 13262,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 13258,
											"end": 13260,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13247,
											"end": 13256,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13261,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13234,
											"end": 13240,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13190,
											"end": 13262,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 13190,
											"end": 13262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13190,
											"end": 13262,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 13190,
											"end": 13262,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 13269,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 13269,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 13269,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 13269,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 13269,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 13269,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 13269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13625,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 13275,
											"end": 13625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13405,
											"end": 13409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13443,
											"end": 13445,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13432,
											"end": 13441,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13428,
											"end": 13446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13420,
											"end": 13446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13420,
											"end": 13446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13456,
											"end": 13527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 13524,
											"end": 13525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13513,
											"end": 13522,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13509,
											"end": 13526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13500,
											"end": 13506,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13456,
											"end": 13527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 13456,
											"end": 13527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13456,
											"end": 13527,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 13456,
											"end": 13527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13537,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 13614,
											"end": 13616,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13603,
											"end": 13612,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13599,
											"end": 13617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13590,
											"end": 13596,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13537,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 13537,
											"end": 13618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13537,
											"end": 13618,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 13537,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13625,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13625,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13631,
											"end": 13963,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 13631,
											"end": 13963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13752,
											"end": 13756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13790,
											"end": 13792,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13779,
											"end": 13788,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13775,
											"end": 13793,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13767,
											"end": 13793,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13767,
											"end": 13793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13803,
											"end": 13874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 13871,
											"end": 13872,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13860,
											"end": 13869,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13856,
											"end": 13873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13847,
											"end": 13853,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13803,
											"end": 13874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 13803,
											"end": 13874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13803,
											"end": 13874,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 13803,
											"end": 13874,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13884,
											"end": 13956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 13952,
											"end": 13954,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13941,
											"end": 13950,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13937,
											"end": 13955,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13928,
											"end": 13934,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13884,
											"end": 13956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 13884,
											"end": 13956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13884,
											"end": 13956,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 13884,
											"end": 13956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13631,
											"end": 13963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13631,
											"end": 13963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13631,
											"end": 13963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13631,
											"end": 13963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13631,
											"end": 13963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13631,
											"end": 13963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/MockIDXFlow.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"GOVERNOR_ROLE()": "ccc57490",
							"currentEpoch()": "76671808",
							"defaultVestingEpochs()": "a344c499",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"minVolumeThreshold()": "8209ce30",
							"mockClaim(uint256)": "a969ccef",
							"mockStake(uint256)": "af0fe497",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"rewardRatePerVolume()": "d699b9d9",
							"rewardStreams(address)": "f5492e2f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"token()": "fc0c546a",
							"totalDistributed()": "efca2eed",
							"users(address)": "a87430ba"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startEpoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vestingEpochs\",\"type\":\"uint256\"}],\"name\":\"RewardsVested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum MockIDXFlow.FeeTier\",\"name\":\"tier\",\"type\":\"uint8\"}],\"name\":\"StakeUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GOVERNOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultVestingEpochs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minVolumeThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"}],\"name\":\"mockClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRatePerVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardStreams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingEpochs\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"epochVolume\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum MockIDXFlow.FeeTier\",\"name\":\"tier\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimEpoch\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"autoCompound\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Omits external integrations (ZK, LayerZero, ERC-6551) and focuses on fee tiers, staking, rewards, and vesting\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RewardsClaimed(address,uint256)\":{\"params\":{\"amount\":\"The reward amount\",\"user\":\"The address receiving rewards\"}},\"RewardsVested(address,uint256,uint256,uint256)\":{\"params\":{\"amount\":\"The amount vested\",\"startEpoch\":\"The epoch when vesting started\",\"user\":\"The address whose vesting was updated\",\"vestingEpochs\":\"Number of epochs over which vesting occurs\"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"StakeUpdated(address,uint256,uint8)\":{\"params\":{\"amount\":\"The amount staked\",\"tier\":\"The user\\u2019s resulting fee tier\",\"user\":\"The address staking tokens\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_token\":\"The address of the ERC-20 token contract\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"mockClaim(uint256)\":{\"details\":\"Requires volume \\u2265 `minVolumeThreshold` and that the user has not claimed this epoch\",\"params\":{\"volume\":\"The trading volume used for reward calculation\"}},\"mockStake(uint256)\":{\"details\":\"Transfers tokens from sender to this contract, updates tier\",\"params\":{\"amount\":\"The amount of tokens to stake\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"MockIDXFlow\",\"version\":1},\"userdoc\":{\"events\":{\"RewardsClaimed(address,uint256)\":{\"notice\":\"Emitted when immediate rewards are paid out\"},\"RewardsVested(address,uint256,uint256,uint256)\":{\"notice\":\"Emitted when rewards are added to vesting\"},\"StakeUpdated(address,uint256,uint8)\":{\"notice\":\"Emitted when a user stakes tokens\"}},\"kind\":\"user\",\"methods\":{\"GOVERNOR_ROLE()\":{\"notice\":\"Role allowed to perform governance actions\"},\"constructor\":{\"notice\":\"Constructs the mock with a given ERC-20 token\"},\"currentEpoch()\":{\"notice\":\"Current epoch counter\"},\"defaultVestingEpochs()\":{\"notice\":\"Default number of epochs over which rewards vest\"},\"minVolumeThreshold()\":{\"notice\":\"Minimum volume required to be eligible for rewards\"},\"mockClaim(uint256)\":{\"notice\":\"Claims rewards based on provided volume\"},\"mockStake(uint256)\":{\"notice\":\"Stakes a specified amount of tokens\"},\"rewardRatePerVolume()\":{\"notice\":\"Reward rate per unit of volume (scaled by 1e6)\"},\"rewardStreams(address)\":{\"notice\":\"Vesting streams mapping\"},\"token()\":{\"notice\":\"ERC-20 token used for staking and reward distribution\"},\"totalDistributed()\":{\"notice\":\"Total rewards distributed so far\"},\"users(address)\":{\"notice\":\"User info mapping\"}},\"notice\":\"Simplified mock of IDXFlowOrderFlow for unit testing core staking and reward logic\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockIDXFlow.sol\":\"MockIDXFlow\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/MockIDXFlow.sol\":{\"keccak256\":\"0xa70f756b67401f5d518ff305c235fd5319404ddeb2d51dbaf38ecc7871713af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7f51475af8476a819881ddbc7f6e24ab65282c7b5bfe529879e07dd013e5e4\",\"dweb:/ipfs/QmRi8Yoxw4QkVFJLVqhi8EgTk2xcVVsfo8jftVnaKQ4w8m\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 533,
								"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
								"label": "token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)456"
							},
							{
								"astId": 543,
								"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
								"label": "currentEpoch",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 547,
								"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
								"label": "rewardRatePerVolume",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 553,
								"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
								"label": "minVolumeThreshold",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 556,
								"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
								"label": "totalDistributed",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 560,
								"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
								"label": "defaultVestingEpochs",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 596,
								"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
								"label": "users",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_struct(UserInfo)590_storage)"
							},
							{
								"astId": 602,
								"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
								"label": "rewardStreams",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_struct(RewardStream)577_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)456": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_enum(FeeTier)567": {
								"encoding": "inplace",
								"label": "enum MockIDXFlow.FeeTier",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(RewardStream)577_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct MockIDXFlow.RewardStream)",
								"numberOfBytes": "32",
								"value": "t_struct(RewardStream)577_storage"
							},
							"t_mapping(t_address,t_struct(UserInfo)590_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct MockIDXFlow.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)590_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RewardStream)577_storage": {
								"encoding": "inplace",
								"label": "struct MockIDXFlow.RewardStream",
								"members": [
									{
										"astId": 570,
										"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
										"label": "total",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 572,
										"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
										"label": "claimed",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 574,
										"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
										"label": "startEpoch",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 576,
										"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
										"label": "vestingEpochs",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserInfo)590_storage": {
								"encoding": "inplace",
								"label": "struct MockIDXFlow.UserInfo",
								"members": [
									{
										"astId": 580,
										"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
										"label": "epochVolume",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 582,
										"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
										"label": "stakedAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 585,
										"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
										"label": "tier",
										"offset": 0,
										"slot": "2",
										"type": "t_enum(FeeTier)567"
									},
									{
										"astId": 587,
										"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
										"label": "lastClaimEpoch",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 589,
										"contract": "contracts/MockIDXFlow.sol:MockIDXFlow",
										"label": "autoCompound",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"RewardsClaimed(address,uint256)": {
								"notice": "Emitted when immediate rewards are paid out"
							},
							"RewardsVested(address,uint256,uint256,uint256)": {
								"notice": "Emitted when rewards are added to vesting"
							},
							"StakeUpdated(address,uint256,uint8)": {
								"notice": "Emitted when a user stakes tokens"
							}
						},
						"kind": "user",
						"methods": {
							"GOVERNOR_ROLE()": {
								"notice": "Role allowed to perform governance actions"
							},
							"constructor": {
								"notice": "Constructs the mock with a given ERC-20 token"
							},
							"currentEpoch()": {
								"notice": "Current epoch counter"
							},
							"defaultVestingEpochs()": {
								"notice": "Default number of epochs over which rewards vest"
							},
							"minVolumeThreshold()": {
								"notice": "Minimum volume required to be eligible for rewards"
							},
							"mockClaim(uint256)": {
								"notice": "Claims rewards based on provided volume"
							},
							"mockStake(uint256)": {
								"notice": "Stakes a specified amount of tokens"
							},
							"rewardRatePerVolume()": {
								"notice": "Reward rate per unit of volume (scaled by 1e6)"
							},
							"rewardStreams(address)": {
								"notice": "Vesting streams mapping"
							},
							"token()": {
								"notice": "ERC-20 token used for staking and reward distribution"
							},
							"totalDistributed()": {
								"notice": "Total rewards distributed so far"
							},
							"users(address)": {
								"notice": "User info mapping"
							}
						},
						"notice": "Simplified mock of IDXFlowOrderFlow for unit testing core staking and reward logic",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							486
						],
						"ERC165": [
							510
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 487,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 486,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 511,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 510,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 486,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 510,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								510,
								522,
								378,
								486
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										509
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 509,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6816:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6838:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6844:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6830:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7006:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7027:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7020:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6826:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6854:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6868:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6875:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6868:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6881:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6868:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6889:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6868:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6900:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6868:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6868:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6936:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6942:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "6951:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6951:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6924:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6924:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6919:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6985:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6978:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6741:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6761:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6753:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6775:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6767:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6752:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6810:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6810:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6809:6:0"
									},
									"scope": 295,
									"src": "6732:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5098:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6944:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						]
					},
					"id": 457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 456,
							"linearizedBaseContracts": [
								456
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 390,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 399,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 456,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 456,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 456,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 456,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 456,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 456,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 457,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								390,
								399
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							486
						]
					},
					"id": 487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 459,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 486,
							"linearizedBaseContracts": [
								486
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 464,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 463,
												"id": 466,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 486,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 473,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 472,
												"id": 475,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 486,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 481,
												"id": 483,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 486,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 487,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							510
						],
						"IERC165": [
							522
						]
					},
					"id": 511,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 511,
							"sourceUnit": 523,
							"src": "140:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 489,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 522,
										"src": "148:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 492,
										"name": "IERC165",
										"nameLocations": [
											"688:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 522,
										"src": "688:7:4"
									},
									"id": 493,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:4"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 491,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:4",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 510,
							"linearizedBaseContracts": [
								510,
								522
							],
							"name": "ERC165",
							"nameLocation": "678:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										521
									],
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "845:64:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 501,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "862:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 503,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "882:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$522_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$522_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 502,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$522",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:4",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 500,
												"id": 507,
												"nodeType": "Return",
												"src": "855:47:4"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "790:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 495,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:4"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "839:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:4"
									},
									"scope": 510,
									"src": "763:146:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 511,
							"src": "660:251:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							522
						]
					},
					"id": 523,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 512,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 513,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:5",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 522,
							"linearizedBaseContracts": [
								522
							],
							"name": "IERC165",
							"nameLocation": "432:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "818:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 515,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:5"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "861:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:5"
									},
									"scope": 522,
									"src": "791:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 523,
							"src": "422:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:5"
				},
				"id": 5
			},
			"contracts/MockIDXFlow.sol": {
				"ast": {
					"absolutePath": "contracts/MockIDXFlow.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							486
						],
						"ERC165": [
							510
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							456
						],
						"MockIDXFlow": [
							938
						]
					},
					"id": 939,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 524,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 939,
							"sourceUnit": 457,
							"src": "58:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 526,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 939,
							"sourceUnit": 296,
							"src": "115:58:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 528,
										"name": "AccessControl",
										"nameLocations": [
											"436:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "436:13:6"
									},
									"id": 529,
									"nodeType": "InheritanceSpecifier",
									"src": "436:13:6"
								}
							],
							"canonicalName": "MockIDXFlow",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 527,
								"nodeType": "StructuredDocumentation",
								"src": "175:237:6",
								"text": "@title MockIDXFlow\n @notice Simplified mock of IDXFlowOrderFlow for unit testing core staking and reward logic\n @dev Omits external integrations (ZK, LayerZero, ERC-6551) and focuses on fee tiers, staking, rewards, and vesting"
							},
							"fullyImplemented": true,
							"id": 938,
							"linearizedBaseContracts": [
								938,
								295,
								510,
								522,
								378,
								486
							],
							"name": "MockIDXFlow",
							"nameLocation": "421:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "456:65:6",
										"text": "@notice ERC-20 token used for staking and reward distribution"
									},
									"functionSelector": "fc0c546a",
									"id": 533,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "540:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 938,
									"src": "526:19:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$456",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 532,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 531,
											"name": "IERC20",
											"nameLocations": [
												"526:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 456,
											"src": "526:6:6"
										},
										"referencedDeclaration": 456,
										"src": "526:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$456",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "552:54:6",
										"text": "@notice Role allowed to perform governance actions"
									},
									"functionSelector": "ccc57490",
									"id": 539,
									"mutability": "constant",
									"name": "GOVERNOR_ROLE",
									"nameLocation": "635:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 938,
									"src": "611:66:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 535,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "611:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "474f5645524e4f525f524f4c45",
												"id": 537,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "661:15:6",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_7935bd0ae54bc31f548c14dba4d37c5c64b3f8ca900cb468fb8abd54d5894f55",
													"typeString": "literal_string \"GOVERNOR_ROLE\""
												},
												"value": "GOVERNOR_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_7935bd0ae54bc31f548c14dba4d37c5c64b3f8ca900cb468fb8abd54d5894f55",
													"typeString": "literal_string \"GOVERNOR_ROLE\""
												}
											],
											"id": 536,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "651:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 538,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "651:26:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "684:33:6",
										"text": "@notice Current epoch counter"
									},
									"functionSelector": "76671808",
									"id": 543,
									"mutability": "mutable",
									"name": "currentEpoch",
									"nameLocation": "737:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 938,
									"src": "722:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 541,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "722:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 542,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "752:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "760:58:6",
										"text": "@notice Reward rate per unit of volume (scaled by 1e6)"
									},
									"functionSelector": "d699b9d9",
									"id": 547,
									"mutability": "mutable",
									"name": "rewardRatePerVolume",
									"nameLocation": "838:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 938,
									"src": "823:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 545,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "823:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "316536",
										"id": 546,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "860:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000_by_1",
											"typeString": "int_const 1000000"
										},
										"value": "1e6"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "870:62:6",
										"text": "@notice Minimum volume required to be eligible for rewards"
									},
									"functionSelector": "8209ce30",
									"id": 553,
									"mutability": "mutable",
									"name": "minVolumeThreshold",
									"nameLocation": "952:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 938,
									"src": "937:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 549,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "937:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000_by_1",
											"typeString": "int_const 100000000"
										},
										"id": 552,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030",
											"id": 550,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "973:3:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "316536",
											"id": 551,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "979:3:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1e6"
										},
										"src": "973:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000_by_1",
											"typeString": "int_const 100000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "989:44:6",
										"text": "@notice Total rewards distributed so far"
									},
									"functionSelector": "efca2eed",
									"id": 556,
									"mutability": "mutable",
									"name": "totalDistributed",
									"nameLocation": "1053:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 938,
									"src": "1038:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 555,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1038:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "1076:60:6",
										"text": "@notice Default number of epochs over which rewards vest"
									},
									"functionSelector": "a344c499",
									"id": 560,
									"mutability": "mutable",
									"name": "defaultVestingEpochs",
									"nameLocation": "1156:20:6",
									"nodeType": "VariableDeclaration",
									"scope": 938,
									"src": "1141:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 558,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1141:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 559,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1179:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "MockIDXFlow.FeeTier",
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "1187:44:6",
										"text": "@notice Fee tiers based on staked amount"
									},
									"id": 567,
									"members": [
										{
											"id": 562,
											"name": "Bronze",
											"nameLocation": "1251:6:6",
											"nodeType": "EnumValue",
											"src": "1251:6:6"
										},
										{
											"id": 563,
											"name": "Silver",
											"nameLocation": "1259:6:6",
											"nodeType": "EnumValue",
											"src": "1259:6:6"
										},
										{
											"id": 564,
											"name": "Gold",
											"nameLocation": "1267:4:6",
											"nodeType": "EnumValue",
											"src": "1267:4:6"
										},
										{
											"id": 565,
											"name": "Platinum",
											"nameLocation": "1273:8:6",
											"nodeType": "EnumValue",
											"src": "1273:8:6"
										},
										{
											"id": 566,
											"name": "Diamond",
											"nameLocation": "1283:7:6",
											"nodeType": "EnumValue",
											"src": "1283:7:6"
										}
									],
									"name": "FeeTier",
									"nameLocation": "1241:7:6",
									"nodeType": "EnumDefinition",
									"src": "1236:56:6"
								},
								{
									"canonicalName": "MockIDXFlow.RewardStream",
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1298:43:6",
										"text": "@notice Tracks vesting streams per user"
									},
									"id": 577,
									"members": [
										{
											"constant": false,
											"id": 570,
											"mutability": "mutable",
											"name": "total",
											"nameLocation": "1384:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 577,
											"src": "1376:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 569,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1376:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 572,
											"mutability": "mutable",
											"name": "claimed",
											"nameLocation": "1438:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 577,
											"src": "1430:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 571,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1430:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 574,
											"mutability": "mutable",
											"name": "startEpoch",
											"nameLocation": "1494:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 577,
											"src": "1486:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 573,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1486:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 576,
											"mutability": "mutable",
											"name": "vestingEpochs",
											"nameLocation": "1554:13:6",
											"nodeType": "VariableDeclaration",
											"scope": 577,
											"src": "1546:21:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 575,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1546:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RewardStream",
									"nameLocation": "1353:12:6",
									"nodeType": "StructDefinition",
									"scope": 938,
									"src": "1346:266:6",
									"visibility": "public"
								},
								{
									"canonicalName": "MockIDXFlow.UserInfo",
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "1618:33:6",
										"text": "@notice Tracks per-user state"
									},
									"id": 590,
									"members": [
										{
											"constant": false,
											"id": 580,
											"mutability": "mutable",
											"name": "epochVolume",
											"nameLocation": "1690:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 590,
											"src": "1682:19:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 579,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1682:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 582,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "1755:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 590,
											"src": "1747:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 581,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1747:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 585,
											"mutability": "mutable",
											"name": "tier",
											"nameLocation": "1808:4:6",
											"nodeType": "VariableDeclaration",
											"scope": 590,
											"src": "1800:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_FeeTier_$567",
												"typeString": "enum MockIDXFlow.FeeTier"
											},
											"typeName": {
												"id": 584,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 583,
													"name": "FeeTier",
													"nameLocations": [
														"1800:7:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 567,
													"src": "1800:7:6"
												},
												"referencedDeclaration": 567,
												"src": "1800:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_FeeTier_$567",
													"typeString": "enum MockIDXFlow.FeeTier"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 587,
											"mutability": "mutable",
											"name": "lastClaimEpoch",
											"nameLocation": "1858:14:6",
											"nodeType": "VariableDeclaration",
											"scope": 590,
											"src": "1850:22:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 586,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1850:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 589,
											"mutability": "mutable",
											"name": "autoCompound",
											"nameLocation": "1930:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 590,
											"src": "1925:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 588,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1925:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "1663:8:6",
									"nodeType": "StructDefinition",
									"scope": 938,
									"src": "1656:338:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "2000:29:6",
										"text": "@notice User info mapping"
									},
									"functionSelector": "a87430ba",
									"id": 596,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "2070:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 938,
									"src": "2034:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$590_storage_$",
										"typeString": "mapping(address => struct MockIDXFlow.UserInfo)"
									},
									"typeName": {
										"id": 595,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 592,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2042:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2034:28:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$590_storage_$",
											"typeString": "mapping(address => struct MockIDXFlow.UserInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 594,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 593,
												"name": "UserInfo",
												"nameLocations": [
													"2053:8:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 590,
												"src": "2053:8:6"
											},
											"referencedDeclaration": 590,
											"src": "2053:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$590_storage_ptr",
												"typeString": "struct MockIDXFlow.UserInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "2082:35:6",
										"text": "@notice Vesting streams mapping"
									},
									"functionSelector": "f5492e2f",
									"id": 602,
									"mutability": "mutable",
									"name": "rewardStreams",
									"nameLocation": "2162:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 938,
									"src": "2122:53:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RewardStream_$577_storage_$",
										"typeString": "mapping(address => struct MockIDXFlow.RewardStream)"
									},
									"typeName": {
										"id": 601,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 598,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2130:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2122:32:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RewardStream_$577_storage_$",
											"typeString": "mapping(address => struct MockIDXFlow.RewardStream)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 600,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 599,
												"name": "RewardStream",
												"nameLocations": [
													"2141:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 577,
												"src": "2141:12:6"
											},
											"referencedDeclaration": 577,
											"src": "2141:12:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RewardStream_$577_storage_ptr",
												"typeString": "struct MockIDXFlow.RewardStream"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "2182:184:6",
										"text": "@notice Emitted when a user stakes tokens\n @param user The address staking tokens\n @param amount The amount staked\n @param tier The user’s resulting fee tier"
									},
									"eventSelector": "e42710261dccb691e79e3f3e24a2b8cc0e13b9bec7be82a445c6a6992474ea44",
									"id": 612,
									"name": "StakeUpdated",
									"nameLocation": "2377:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2406:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2390:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2390:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2420:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2412:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2412:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"indexed": false,
												"mutability": "mutable",
												"name": "tier",
												"nameLocation": "2436:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2428:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_FeeTier_$567",
													"typeString": "enum MockIDXFlow.FeeTier"
												},
												"typeName": {
													"id": 609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 608,
														"name": "FeeTier",
														"nameLocations": [
															"2428:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 567,
														"src": "2428:7:6"
													},
													"referencedDeclaration": 567,
													"src": "2428:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_FeeTier_$567",
														"typeString": "enum MockIDXFlow.FeeTier"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2389:52:6"
									},
									"src": "2371:71:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "2448:145:6",
										"text": "@notice Emitted when immediate rewards are paid out\n @param user The address receiving rewards\n @param amount The reward amount"
									},
									"eventSelector": "fc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe",
									"id": 619,
									"name": "RewardsClaimed",
									"nameLocation": "2604:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2635:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "2619:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2649:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "2641:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2618:38:6"
									},
									"src": "2598:59:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "2663:280:6",
										"text": "@notice Emitted when rewards are added to vesting\n @param user The address whose vesting was updated\n @param amount The amount vested\n @param startEpoch The epoch when vesting started\n @param vestingEpochs Number of epochs over which vesting occurs"
									},
									"eventSelector": "cacf4a6e7c897ead5577524d96f0debb59ccd5bd3465d42cd2a958e2defb0b94",
									"id": 630,
									"name": "RewardsVested",
									"nameLocation": "2954:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2984:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2968:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2968:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2998:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2990:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"indexed": false,
												"mutability": "mutable",
												"name": "startEpoch",
												"nameLocation": "3014:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3006:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"indexed": false,
												"mutability": "mutable",
												"name": "vestingEpochs",
												"nameLocation": "3034:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3026:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2967:81:6"
									},
									"src": "2948:101:6"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "3208:138:6",
										"statements": [
											{
												"expression": {
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 636,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "3218:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$456",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 638,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "3233:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 637,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "3226:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3226:14:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$456",
															"typeString": "contract IERC20"
														}
													},
													"src": "3218:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "3218:22:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 643,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "3261:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 644,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3281:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3285:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3281:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 642,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3250:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3250:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "3250:42:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 649,
															"name": "GOVERNOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "3313:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 650,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3328:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3332:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3328:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 648,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3302:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3302:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "3302:37:6"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "3055:120:6",
										"text": "@notice Constructs the mock with a given ERC-20 token\n @param _token The address of the ERC-20 token contract"
									},
									"id": 655,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3200:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "3192:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3192:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3191:16:6"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3208:0:6"
									},
									"scope": 938,
									"src": "3180:166:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3573:259:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 664,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3602:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3606:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3602:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 668,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3622:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MockIDXFlow_$938",
																		"typeString": "contract MockIDXFlow"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MockIDXFlow_$938",
																		"typeString": "contract MockIDXFlow"
																	}
																],
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3614:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 666,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3614:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3614:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 670,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "3629:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 661,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "3583:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															}
														},
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3589:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 455,
														"src": "3583:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "3583:53:6"
											},
											{
												"assignments": [
													675
												],
												"declarations": [
													{
														"constant": false,
														"id": 675,
														"mutability": "mutable",
														"name": "u",
														"nameLocation": "3663:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 704,
														"src": "3646:18:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$590_storage_ptr",
															"typeString": "struct MockIDXFlow.UserInfo"
														},
														"typeName": {
															"id": 674,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 673,
																"name": "UserInfo",
																"nameLocations": [
																	"3646:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 590,
																"src": "3646:8:6"
															},
															"referencedDeclaration": 590,
															"src": "3646:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$590_storage_ptr",
																"typeString": "struct MockIDXFlow.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 680,
												"initialValue": {
													"baseExpression": {
														"id": 676,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "3667:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$590_storage_$",
															"typeString": "mapping(address => struct MockIDXFlow.UserInfo storage ref)"
														}
													},
													"id": 679,
													"indexExpression": {
														"expression": {
															"id": 677,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3673:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3677:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3673:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3667:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$590_storage",
														"typeString": "struct MockIDXFlow.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3646:38:6"
											},
											{
												"expression": {
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 681,
															"name": "u",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "3694:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$590_storage_ptr",
																"typeString": "struct MockIDXFlow.UserInfo storage pointer"
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3696:12:6",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 582,
														"src": "3694:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 684,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "3712:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3694:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "3694:24:6"
											},
											{
												"expression": {
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 687,
															"name": "u",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "3728:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$590_storage_ptr",
																"typeString": "struct MockIDXFlow.UserInfo storage pointer"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3730:4:6",
														"memberName": "tier",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 585,
														"src": "3728:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FeeTier_$567",
															"typeString": "enum MockIDXFlow.FeeTier"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 691,
																	"name": "u",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "3755:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$590_storage_ptr",
																		"typeString": "struct MockIDXFlow.UserInfo storage pointer"
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3757:12:6",
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 582,
																"src": "3755:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 690,
															"name": "_calculateFeeTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "3737:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_enum$_FeeTier_$567_$",
																"typeString": "function (uint256) pure returns (enum MockIDXFlow.FeeTier)"
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3737:33:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FeeTier_$567",
															"typeString": "enum MockIDXFlow.FeeTier"
														}
													},
													"src": "3728:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_FeeTier_$567",
														"typeString": "enum MockIDXFlow.FeeTier"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "3728:42:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 697,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3798:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3802:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3798:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "3810:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 700,
																"name": "u",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 675,
																"src": "3818:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$590_storage_ptr",
																	"typeString": "struct MockIDXFlow.UserInfo storage pointer"
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3820:4:6",
															"memberName": "tier",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 585,
															"src": "3818:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_FeeTier_$567",
																"typeString": "enum MockIDXFlow.FeeTier"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_FeeTier_$567",
																"typeString": "enum MockIDXFlow.FeeTier"
															}
														],
														"id": 696,
														"name": "StakeUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "3785:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_FeeTier_$567_$returns$__$",
															"typeString": "function (address,uint256,enum MockIDXFlow.FeeTier)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3785:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "EmitStatement",
												"src": "3780:45:6"
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "3352:172:6",
										"text": "@notice Stakes a specified amount of tokens\n @dev Transfers tokens from sender to this contract, updates tier\n @param amount The amount of tokens to stake"
									},
									"functionSelector": "af0fe497",
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mockStake",
									"nameLocation": "3538:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3556:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3548:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3547:16:6"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3573:0:6"
									},
									"scope": 938,
									"src": "3529:303:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "4106:1075:6",
										"statements": [
											{
												"assignments": [
													713
												],
												"declarations": [
													{
														"constant": false,
														"id": 713,
														"mutability": "mutable",
														"name": "u",
														"nameLocation": "4133:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "4116:18:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$590_storage_ptr",
															"typeString": "struct MockIDXFlow.UserInfo"
														},
														"typeName": {
															"id": 712,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 711,
																"name": "UserInfo",
																"nameLocations": [
																	"4116:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 590,
																"src": "4116:8:6"
															},
															"referencedDeclaration": 590,
															"src": "4116:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$590_storage_ptr",
																"typeString": "struct MockIDXFlow.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 718,
												"initialValue": {
													"baseExpression": {
														"id": 714,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "4137:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$590_storage_$",
															"typeString": "mapping(address => struct MockIDXFlow.UserInfo storage ref)"
														}
													},
													"id": 717,
													"indexExpression": {
														"expression": {
															"id": 715,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4143:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4147:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4143:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4137:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$590_storage",
														"typeString": "struct MockIDXFlow.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4116:38:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 720,
																	"name": "u",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "4172:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$590_storage_ptr",
																		"typeString": "struct MockIDXFlow.UserInfo storage pointer"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4174:14:6",
																"memberName": "lastClaimEpoch",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 587,
																"src": "4172:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 722,
																"name": "currentEpoch",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "4191:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4172:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920636c61696d6564",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4205:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															},
															"value": "Already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															}
														],
														"id": 719,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4164:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4164:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "4164:59:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 728,
																"name": "volume",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "4241:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 729,
																"name": "minVolumeThreshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 553,
																"src": "4251:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4241:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f6c756d6520746f6f206c6f77",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4271:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_884721f7543f42407f998851091c4cdedb565697d56dbe247775df5e0a094f53",
																"typeString": "literal_string \"Volume too low\""
															},
															"value": "Volume too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_884721f7543f42407f998851091c4cdedb565697d56dbe247775df5e0a094f53",
																"typeString": "literal_string \"Volume too low\""
															}
														],
														"id": 727,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4233:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4233:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "4233:55:6"
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 734,
															"name": "u",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "4299:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$590_storage_ptr",
																"typeString": "struct MockIDXFlow.UserInfo storage pointer"
															}
														},
														"id": 736,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4301:11:6",
														"memberName": "epochVolume",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "4299:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "volume",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "4315:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4299:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "4299:22:6"
											},
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 740,
															"name": "u",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "4331:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$590_storage_ptr",
																"typeString": "struct MockIDXFlow.UserInfo storage pointer"
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4333:14:6",
														"memberName": "lastClaimEpoch",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 587,
														"src": "4331:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 743,
														"name": "currentEpoch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "4350:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4331:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "4331:31:6"
											},
											{
												"assignments": [
													747
												],
												"declarations": [
													{
														"constant": false,
														"id": 747,
														"mutability": "mutable",
														"name": "baseReward",
														"nameLocation": "4381:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "4373:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 746,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4373:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 754,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 748,
																	"name": "volume",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "4395:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 749,
																	"name": "rewardRatePerVolume",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "4404:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4395:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 751,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4394:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "316536",
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4427:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000_by_1",
															"typeString": "int_const 1000000"
														},
														"value": "1e6"
													},
													"src": "4394:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4373:57:6"
											},
											{
												"assignments": [
													756
												],
												"declarations": [
													{
														"constant": false,
														"id": 756,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "4448:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "4440:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 755,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4440:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 757,
																	"name": "baseReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "4458:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 759,
																				"name": "u",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 713,
																				"src": "4492:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$590_storage_ptr",
																					"typeString": "struct MockIDXFlow.UserInfo storage pointer"
																				}
																			},
																			"id": 760,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4494:4:6",
																			"memberName": "tier",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 585,
																			"src": "4492:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_FeeTier_$567",
																				"typeString": "enum MockIDXFlow.FeeTier"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_FeeTier_$567",
																				"typeString": "enum MockIDXFlow.FeeTier"
																			}
																		],
																		"id": 758,
																		"name": "_getRewardMultiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "4471:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_FeeTier_$567_$returns$_t_uint256_$",
																			"typeString": "function (enum MockIDXFlow.FeeTier) pure returns (uint256)"
																		}
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4471:28:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4458:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 763,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4457:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4503:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "4457:49:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4440:66:6"
											},
											{
												"expression": {
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 767,
														"name": "totalDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "4516:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 768,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "4536:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4516:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "4516:26:6"
											},
											{
												"assignments": [
													772
												],
												"declarations": [
													{
														"constant": false,
														"id": 772,
														"mutability": "mutable",
														"name": "immediate",
														"nameLocation": "4561:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "4553:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 771,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4553:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 779,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 773,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "4574:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3235",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4583:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_25_by_1",
																		"typeString": "int_const 25"
																	},
																	"value": "25"
																},
																"src": "4574:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 776,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4573:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4589:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "4573:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4553:39:6"
											},
											{
												"assignments": [
													781
												],
												"declarations": [
													{
														"constant": false,
														"id": 781,
														"mutability": "mutable",
														"name": "vestingAmt",
														"nameLocation": "4610:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "4602:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 780,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4602:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 785,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 782,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "4623:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 783,
														"name": "immediate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "4632:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4623:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4602:39:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 789,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4695:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4699:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4695:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 791,
															"name": "immediate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "4707:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 786,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "4680:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4686:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 423,
														"src": "4680:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4680:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "4680:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 795,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4747:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4751:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4747:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 797,
															"name": "immediate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "4759:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 794,
														"name": "RewardsClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "4732:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4732:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "EmitStatement",
												"src": "4727:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 800,
														"name": "vestingAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "4810:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4823:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4810:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 846,
												"nodeType": "IfStatement",
												"src": "4806:369:6",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "4826:349:6",
													"statements": [
														{
															"assignments": [
																805
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 805,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "4861:1:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 845,
																	"src": "4840:22:6",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RewardStream_$577_storage_ptr",
																		"typeString": "struct MockIDXFlow.RewardStream"
																	},
																	"typeName": {
																		"id": 804,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 803,
																			"name": "RewardStream",
																			"nameLocations": [
																				"4840:12:6"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 577,
																			"src": "4840:12:6"
																		},
																		"referencedDeclaration": 577,
																		"src": "4840:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RewardStream_$577_storage_ptr",
																			"typeString": "struct MockIDXFlow.RewardStream"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 810,
															"initialValue": {
																"baseExpression": {
																	"id": 806,
																	"name": "rewardStreams",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "4865:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RewardStream_$577_storage_$",
																		"typeString": "mapping(address => struct MockIDXFlow.RewardStream storage ref)"
																	}
																},
																"id": 809,
																"indexExpression": {
																	"expression": {
																		"id": 807,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4879:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4883:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4879:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4865:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardStream_$577_storage",
																	"typeString": "struct MockIDXFlow.RewardStream storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4840:50:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 811,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "4908:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RewardStream_$577_storage_ptr",
																			"typeString": "struct MockIDXFlow.RewardStream storage pointer"
																		}
																	},
																	"id": 812,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4910:10:6",
																	"memberName": "startEpoch",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 574,
																	"src": "4908:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4908:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 828,
															"nodeType": "IfStatement",
															"src": "4904:139:6",
															"trueBody": {
																"id": 827,
																"nodeType": "Block",
																"src": "4927:116:6",
																"statements": [
																	{
																		"expression": {
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 815,
																					"name": "s",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 805,
																					"src": "4945:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RewardStream_$577_storage_ptr",
																						"typeString": "struct MockIDXFlow.RewardStream storage pointer"
																					}
																				},
																				"id": 817,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "4947:10:6",
																				"memberName": "startEpoch",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 574,
																				"src": "4945:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 818,
																				"name": "currentEpoch",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 543,
																				"src": "4960:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4945:27:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 820,
																		"nodeType": "ExpressionStatement",
																		"src": "4945:27:6"
																	},
																	{
																		"expression": {
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 821,
																					"name": "s",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 805,
																					"src": "4990:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RewardStream_$577_storage_ptr",
																						"typeString": "struct MockIDXFlow.RewardStream storage pointer"
																					}
																				},
																				"id": 823,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "4992:13:6",
																				"memberName": "vestingEpochs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 576,
																				"src": "4990:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 824,
																				"name": "defaultVestingEpochs",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 560,
																				"src": "5008:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4990:38:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 826,
																		"nodeType": "ExpressionStatement",
																		"src": "4990:38:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 829,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "5056:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RewardStream_$577_storage_ptr",
																			"typeString": "struct MockIDXFlow.RewardStream storage pointer"
																		}
																	},
																	"id": 831,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5058:5:6",
																	"memberName": "total",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 570,
																	"src": "5056:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 832,
																	"name": "vestingAmt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 781,
																	"src": "5067:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5056:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 834,
															"nodeType": "ExpressionStatement",
															"src": "5056:21:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 836,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5110:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5114:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5110:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 838,
																		"name": "vestingAmt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 781,
																		"src": "5122:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 839,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "5134:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RewardStream_$577_storage_ptr",
																				"typeString": "struct MockIDXFlow.RewardStream storage pointer"
																			}
																		},
																		"id": 840,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5136:10:6",
																		"memberName": "startEpoch",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 574,
																		"src": "5134:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 841,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "5148:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RewardStream_$577_storage_ptr",
																				"typeString": "struct MockIDXFlow.RewardStream storage pointer"
																			}
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5150:13:6",
																		"memberName": "vestingEpochs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 576,
																		"src": "5148:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 835,
																	"name": "RewardsVested",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "5096:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256,uint256)"
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5096:68:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 844,
															"nodeType": "EmitStatement",
															"src": "5091:73:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3838:219:6",
										"text": "@notice Claims rewards based on provided volume\n @dev Requires volume ≥ `minVolumeThreshold` and that the user has not claimed this epoch\n @param volume The trading volume used for reward calculation"
									},
									"functionSelector": "a969ccef",
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mockClaim",
									"nameLocation": "4071:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "volume",
												"nameLocation": "4089:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "4081:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4081:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4080:16:6"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4106:0:6"
									},
									"scope": 938,
									"src": "4062:1119:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "5425:259:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 857,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "5439:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000_by_1",
															"typeString": "int_const 1000000000"
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "315f303030",
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5443:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1_000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "316536",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5451:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"value": "1e6"
														},
														"src": "5443:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000_by_1",
															"typeString": "int_const 1000000000"
														}
													},
													"src": "5439:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 865,
												"nodeType": "IfStatement",
												"src": "5435:45:6",
												"trueBody": {
													"expression": {
														"expression": {
															"id": 862,
															"name": "FeeTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "5466:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_FeeTier_$567_$",
																"typeString": "type(enum MockIDXFlow.FeeTier)"
															}
														},
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5474:6:6",
														"memberName": "Bronze",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 562,
														"src": "5466:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FeeTier_$567",
															"typeString": "enum MockIDXFlow.FeeTier"
														}
													},
													"functionReturnParameters": 856,
													"id": 864,
													"nodeType": "Return",
													"src": "5459:21:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 866,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "5494:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_10000000000_by_1",
															"typeString": "int_const 10000000000"
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31305f303030",
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5498:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10_000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "316536",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5507:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"value": "1e6"
														},
														"src": "5498:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000_by_1",
															"typeString": "int_const 10000000000"
														}
													},
													"src": "5494:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 874,
												"nodeType": "IfStatement",
												"src": "5490:45:6",
												"trueBody": {
													"expression": {
														"expression": {
															"id": 871,
															"name": "FeeTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "5521:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_FeeTier_$567_$",
																"typeString": "type(enum MockIDXFlow.FeeTier)"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5529:6:6",
														"memberName": "Silver",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 563,
														"src": "5521:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FeeTier_$567",
															"typeString": "enum MockIDXFlow.FeeTier"
														}
													},
													"functionReturnParameters": 856,
													"id": 873,
													"nodeType": "Return",
													"src": "5514:21:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "5549:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_50000000000_by_1",
															"typeString": "int_const 50000000000"
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "35305f303030",
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5553:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50000_by_1",
																"typeString": "int_const 50000"
															},
															"value": "50_000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "316536",
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5562:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"value": "1e6"
														},
														"src": "5553:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50000000000_by_1",
															"typeString": "int_const 50000000000"
														}
													},
													"src": "5549:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 883,
												"nodeType": "IfStatement",
												"src": "5545:43:6",
												"trueBody": {
													"expression": {
														"expression": {
															"id": 880,
															"name": "FeeTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "5576:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_FeeTier_$567_$",
																"typeString": "type(enum MockIDXFlow.FeeTier)"
															}
														},
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5584:4:6",
														"memberName": "Gold",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 564,
														"src": "5576:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FeeTier_$567",
															"typeString": "enum MockIDXFlow.FeeTier"
														}
													},
													"functionReturnParameters": 856,
													"id": 882,
													"nodeType": "Return",
													"src": "5569:19:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 884,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "5602:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_100000000000_by_1",
															"typeString": "int_const 100000000000"
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130305f303030",
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5606:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000_by_1",
																"typeString": "int_const 100000"
															},
															"value": "100_000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "316536",
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5616:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"value": "1e6"
														},
														"src": "5606:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000_by_1",
															"typeString": "int_const 100000000000"
														}
													},
													"src": "5602:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "5598:47:6",
												"trueBody": {
													"expression": {
														"expression": {
															"id": 889,
															"name": "FeeTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "5629:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_FeeTier_$567_$",
																"typeString": "type(enum MockIDXFlow.FeeTier)"
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5637:8:6",
														"memberName": "Platinum",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 565,
														"src": "5629:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FeeTier_$567",
															"typeString": "enum MockIDXFlow.FeeTier"
														}
													},
													"functionReturnParameters": 856,
													"id": 891,
													"nodeType": "Return",
													"src": "5622:23:6"
												}
											},
											{
												"expression": {
													"expression": {
														"id": 893,
														"name": "FeeTier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "5662:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_FeeTier_$567_$",
															"typeString": "type(enum MockIDXFlow.FeeTier)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "5670:7:6",
													"memberName": "Diamond",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 566,
													"src": "5662:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_FeeTier_$567",
														"typeString": "enum MockIDXFlow.FeeTier"
													}
												},
												"functionReturnParameters": 856,
												"id": 895,
												"nodeType": "Return",
												"src": "5655:22:6"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "5187:163:6",
										"text": "@notice Calculates the fee tier based on a staked amount\n @param s The staked token amount (with 6 decimals)\n @return The corresponding `FeeTier`"
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateFeeTier",
									"nameLocation": "5364:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5390:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "5382:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5382:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5381:11:6"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "5416:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_FeeTier_$567",
													"typeString": "enum MockIDXFlow.FeeTier"
												},
												"typeName": {
													"id": 854,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 853,
														"name": "FeeTier",
														"nameLocations": [
															"5416:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 567,
														"src": "5416:7:6"
													},
													"referencedDeclaration": 567,
													"src": "5416:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_FeeTier_$567",
														"typeString": "enum MockIDXFlow.FeeTier"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5415:9:6"
									},
									"scope": 938,
									"src": "5355:329:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "5937:225:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_FeeTier_$567",
														"typeString": "enum MockIDXFlow.FeeTier"
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 906,
														"name": "t",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "5951:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FeeTier_$567",
															"typeString": "enum MockIDXFlow.FeeTier"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 907,
															"name": "FeeTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "5956:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_FeeTier_$567_$",
																"typeString": "type(enum MockIDXFlow.FeeTier)"
															}
														},
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5964:6:6",
														"memberName": "Silver",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 563,
														"src": "5956:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FeeTier_$567",
															"typeString": "enum MockIDXFlow.FeeTier"
														}
													},
													"src": "5951:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 912,
												"nodeType": "IfStatement",
												"src": "5947:37:6",
												"trueBody": {
													"expression": {
														"hexValue": "313235",
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5981:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_125_by_1",
															"typeString": "int_const 125"
														},
														"value": "125"
													},
													"functionReturnParameters": 905,
													"id": 911,
													"nodeType": "Return",
													"src": "5974:10:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_FeeTier_$567",
														"typeString": "enum MockIDXFlow.FeeTier"
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 913,
														"name": "t",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "5998:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FeeTier_$567",
															"typeString": "enum MockIDXFlow.FeeTier"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 914,
															"name": "FeeTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "6003:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_FeeTier_$567_$",
																"typeString": "type(enum MockIDXFlow.FeeTier)"
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6011:4:6",
														"memberName": "Gold",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 564,
														"src": "6003:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FeeTier_$567",
															"typeString": "enum MockIDXFlow.FeeTier"
														}
													},
													"src": "5998:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 919,
												"nodeType": "IfStatement",
												"src": "5994:37:6",
												"trueBody": {
													"expression": {
														"hexValue": "313530",
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6028:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_150_by_1",
															"typeString": "int_const 150"
														},
														"value": "150"
													},
													"functionReturnParameters": 905,
													"id": 918,
													"nodeType": "Return",
													"src": "6021:10:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_FeeTier_$567",
														"typeString": "enum MockIDXFlow.FeeTier"
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 920,
														"name": "t",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "6045:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FeeTier_$567",
															"typeString": "enum MockIDXFlow.FeeTier"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 921,
															"name": "FeeTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "6050:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_FeeTier_$567_$",
																"typeString": "type(enum MockIDXFlow.FeeTier)"
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6058:8:6",
														"memberName": "Platinum",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 565,
														"src": "6050:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FeeTier_$567",
															"typeString": "enum MockIDXFlow.FeeTier"
														}
													},
													"src": "6045:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 926,
												"nodeType": "IfStatement",
												"src": "6041:37:6",
												"trueBody": {
													"expression": {
														"hexValue": "323030",
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6075:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"functionReturnParameters": 905,
													"id": 925,
													"nodeType": "Return",
													"src": "6068:10:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_FeeTier_$567",
														"typeString": "enum MockIDXFlow.FeeTier"
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 927,
														"name": "t",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "6092:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FeeTier_$567",
															"typeString": "enum MockIDXFlow.FeeTier"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 928,
															"name": "FeeTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "6097:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_FeeTier_$567_$",
																"typeString": "type(enum MockIDXFlow.FeeTier)"
															}
														},
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6105:7:6",
														"memberName": "Diamond",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 566,
														"src": "6097:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FeeTier_$567",
															"typeString": "enum MockIDXFlow.FeeTier"
														}
													},
													"src": "6092:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 933,
												"nodeType": "IfStatement",
												"src": "6088:37:6",
												"trueBody": {
													"expression": {
														"hexValue": "333030",
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6122:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_300_by_1",
															"typeString": "int_const 300"
														},
														"value": "300"
													},
													"functionReturnParameters": 905,
													"id": 932,
													"nodeType": "Return",
													"src": "6115:10:6"
												}
											},
											{
												"expression": {
													"hexValue": "313030",
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6142:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100_by_1",
														"typeString": "int_const 100"
													},
													"value": "100"
												},
												"functionReturnParameters": 905,
												"id": 935,
												"nodeType": "Return",
												"src": "6135:10:6"
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "5690:169:6",
										"text": "@notice Returns the reward multiplier (in basis points) for a given tier\n @param t The user’s `FeeTier`\n @return The multiplier (e.g., `150` = 1.5×)"
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRewardMultiplier",
									"nameLocation": "5873:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "t",
												"nameLocation": "5902:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "5894:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_FeeTier_$567",
													"typeString": "enum MockIDXFlow.FeeTier"
												},
												"typeName": {
													"id": 900,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 899,
														"name": "FeeTier",
														"nameLocations": [
															"5894:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 567,
														"src": "5894:7:6"
													},
													"referencedDeclaration": 567,
													"src": "5894:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_FeeTier_$567",
														"typeString": "enum MockIDXFlow.FeeTier"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5893:11:6"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "5928:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5928:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5927:9:6"
									},
									"scope": 938,
									"src": "5864:298:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 939,
							"src": "412:5752:6",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335,
								612,
								619,
								630
							]
						}
					],
					"src": "32:6133:6"
				},
				"id": 6
			}
		}
	}
}